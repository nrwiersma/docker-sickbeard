2016-08-15 10:03:08 INFO     MAIN :: Checking database structure...
2016-08-15 10:03:08 DEBUG    MAIN :: Checking Initial Schema database upgrade
2016-08-15 10:03:08 DEBUG    MAIN :: sickbeard.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('tv_shows',)
2016-08-15 10:03:08 INFO     MAIN :: Database upgrade required: Initial Schema
2016-08-15 10:03:08 DEBUG    MAIN :: sickbeard.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('tv_shows',)
2016-08-15 10:03:08 DEBUG    MAIN :: sickbeard.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('db_version',)
2016-08-15 10:03:08 DEBUG    MAIN :: sickbeard.db: CREATE TABLE db_version (db_version INTEGER);
2016-08-15 10:03:08 DEBUG    MAIN :: sickbeard.db: CREATE TABLE history (action NUMERIC, date NUMERIC, showid NUMERIC, season NUMERIC, episode NUMERIC, quality NUMERIC, resource TEXT, provider TEXT, source TEXT);
2016-08-15 10:03:08 DEBUG    MAIN :: sickbeard.db: CREATE TABLE info (last_backlog NUMERIC, last_tvdb NUMERIC);
2016-08-15 10:03:08 DEBUG    MAIN :: sickbeard.db: CREATE TABLE tv_episodes (episode_id INTEGER PRIMARY KEY, showid NUMERIC, tvdbid NUMERIC, name TEXT, season NUMERIC, episode NUMERIC, description TEXT, airdate NUMERIC, hasnfo NUMERIC, hastbn NUMERIC, status NUMERIC, location TEXT, file_size NUMERIC, release_name TEXT);
2016-08-15 10:03:08 DEBUG    MAIN :: sickbeard.db: CREATE TABLE tv_shows (show_id INTEGER PRIMARY KEY, location TEXT, show_name TEXT, tvdb_id NUMERIC, network TEXT, genre TEXT, runtime NUMERIC, quality NUMERIC, airs TEXT, status TEXT, flatten_folders NUMERIC, paused NUMERIC, startyear NUMERIC, tvr_id NUMERIC, tvr_name TEXT, air_by_date NUMERIC, lang TEXT, last_update_tvdb NUMERIC, rls_require_words TEXT, rls_ignore_words TEXT, skip_notices NUMERIC);
2016-08-15 10:03:08 DEBUG    MAIN :: sickbeard.db: CREATE INDEX idx_tv_episodes_showid_airdate ON tv_episodes (showid,airdate);
2016-08-15 10:03:08 DEBUG    MAIN :: sickbeard.db: CREATE INDEX idx_showid ON tv_episodes (showid);
2016-08-15 10:03:08 DEBUG    MAIN :: sickbeard.db: CREATE UNIQUE INDEX idx_tvdb_id ON tv_shows (tvdb_id);
2016-08-15 10:03:08 DEBUG    MAIN :: sickbeard.db: INSERT INTO db_version (db_version) VALUES (18);
2016-08-15 10:03:08 DEBUG    MAIN :: Initial Schema upgrade completed
2016-08-15 10:03:08 DEBUG    MAIN :: Checking Add Size And Scene Name Fields database upgrade
2016-08-15 10:03:08 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:03:08 DEBUG    MAIN :: Add Size And Scene Name Fields upgrade not required
2016-08-15 10:03:08 DEBUG    MAIN :: Checking Rename Season Folders database upgrade
2016-08-15 10:03:08 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:03:08 DEBUG    MAIN :: Rename Season Folders upgrade not required
2016-08-15 10:03:08 DEBUG    MAIN :: Checking Add1080p And Raw Qualities database upgrade
2016-08-15 10:03:08 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:03:08 DEBUG    MAIN :: Add1080p And Raw Qualities upgrade not required
2016-08-15 10:03:08 DEBUG    MAIN :: Checking Add Showid Tvdbid Index database upgrade
2016-08-15 10:03:08 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:03:08 DEBUG    MAIN :: Add Showid Tvdbid Index upgrade not required
2016-08-15 10:03:08 DEBUG    MAIN :: Checking Add Last Update database upgrade
2016-08-15 10:03:08 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:03:08 DEBUG    MAIN :: Add Last Update upgrade not required
2016-08-15 10:03:08 DEBUG    MAIN :: Checking Add Require And Ignore Words database upgrade
2016-08-15 10:03:08 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:03:08 DEBUG    MAIN :: Add Require And Ignore Words upgrade not required
2016-08-15 10:03:08 DEBUG    MAIN :: Checking Cleanup History And Specials database upgrade
2016-08-15 10:03:08 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:03:08 DEBUG    MAIN :: Cleanup History And Specials upgrade not required
2016-08-15 10:03:08 DEBUG    MAIN :: Checking Add Skip Notifications database upgrade
2016-08-15 10:03:08 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:03:08 DEBUG    MAIN :: Add Skip Notifications upgrade not required
2016-08-15 10:03:08 DEBUG    MAIN :: Checking Add History Source database upgrade
2016-08-15 10:03:08 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:03:08 DEBUG    MAIN :: Add History Source upgrade not required
2016-08-15 10:03:08 INFO     MAIN :: Checking database structure...
2016-08-15 10:03:08 DEBUG    MAIN :: Checking Initial Schema database upgrade
2016-08-15 10:03:08 DEBUG    MAIN :: cache.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('lastUpdate',)
2016-08-15 10:03:08 INFO     MAIN :: Database upgrade required: Initial Schema
2016-08-15 10:03:08 DEBUG    MAIN :: cache.db: CREATE TABLE lastUpdate (provider TEXT, time NUMERIC);
2016-08-15 10:03:08 DEBUG    MAIN :: cache.db: CREATE TABLE db_version (db_version INTEGER);
2016-08-15 10:03:08 DEBUG    MAIN :: cache.db: INSERT INTO db_version (db_version) VALUES (?) with args (1,)
2016-08-15 10:03:08 DEBUG    MAIN :: Initial Schema upgrade completed
2016-08-15 10:03:08 DEBUG    MAIN :: Checking Add Scene Exceptions database upgrade
2016-08-15 10:03:08 DEBUG    MAIN :: cache.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('scene_exceptions',)
2016-08-15 10:03:08 INFO     MAIN :: Database upgrade required: Add Scene Exceptions
2016-08-15 10:03:08 DEBUG    MAIN :: cache.db: CREATE TABLE scene_exceptions (exception_id INTEGER PRIMARY KEY, tvdb_id INTEGER KEY, show_name TEXT, provider TEXT)
2016-08-15 10:03:08 DEBUG    MAIN :: Add Scene Exceptions upgrade completed
2016-08-15 10:03:08 DEBUG    MAIN :: Checking Add Scene Name Cache database upgrade
2016-08-15 10:03:08 DEBUG    MAIN :: cache.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('scene_names',)
2016-08-15 10:03:08 INFO     MAIN :: Database upgrade required: Add Scene Name Cache
2016-08-15 10:03:08 DEBUG    MAIN :: cache.db: CREATE TABLE scene_names (tvdb_id INTEGER, name TEXT)
2016-08-15 10:03:08 DEBUG    MAIN :: Add Scene Name Cache upgrade completed
2016-08-15 10:03:08 DEBUG    MAIN :: Checking Add Scene Exceptions Provider database upgrade
2016-08-15 10:03:08 DEBUG    MAIN :: Add Scene Exceptions Provider upgrade not required
2016-08-15 10:03:08 DEBUG    MAIN :: sickbeard.db: SELECT show_id, tvdb_id, COUNT(tvdb_id) as count FROM tv_shows GROUP BY tvdb_id HAVING count > 1
2016-08-15 10:03:08 INFO     MAIN :: No duplicate show, check passed
2016-08-15 10:03:08 DEBUG    MAIN :: sickbeard.db: SELECT showid, season, episode, COUNT(showid) as count FROM tv_episodes GROUP BY showid, season, episode HAVING count > 1
2016-08-15 10:03:08 INFO     MAIN :: No duplicate episode, check passed
2016-08-15 10:03:08 DEBUG    MAIN :: sickbeard.db: SELECT episode_id, showid, tv_shows.tvdb_id FROM tv_episodes LEFT JOIN tv_shows ON tv_episodes.showid=tv_shows.tvdb_id WHERE tv_shows.tvdb_id is NULL
2016-08-15 10:03:08 INFO     MAIN :: No orphan episodes, check passed
2016-08-15 10:03:08 DEBUG    MAIN :: config_version -> 6
2016-08-15 10:03:08 DEBUG    MAIN :: Checking if we can use git commands: git version
2016-08-15 10:03:08 DEBUG    MAIN :: Executing git version with your shell in /sickbeard
2016-08-15 10:03:08 DEBUG    MAIN :: git output: git version 2.8.3
2016-08-15 10:03:08 DEBUG    MAIN :: git version : returned successful
2016-08-15 10:03:08 DEBUG    MAIN :: Using: git
2016-08-15 10:03:08 DEBUG    MAIN :: Executing git symbolic-ref -q HEAD with your shell in /sickbeard
2016-08-15 10:03:08 DEBUG    MAIN :: git output: refs/heads/development
2016-08-15 10:03:08 DEBUG    MAIN :: git symbolic-ref -q HEAD : returned successful
2016-08-15 10:03:08 DEBUG    MAIN :: Retrieving the last check time from the DB
2016-08-15 10:03:08 DEBUG    MAIN :: sickbeard.db: SELECT * FROM info
2016-08-15 10:03:08 INFO     MAIN :: Starting Sick Beard on http://0.0.0.0:8081/
2016-08-15 10:03:08 INFO     MAIN :: Loading initial show list
2016-08-15 10:03:08 DEBUG    MAIN :: sickbeard.db: SELECT * FROM tv_shows
2016-08-15 10:03:08 DEBUG    CHECKVERSION :: Starting new thread: CHECKVERSION
2016-08-15 10:03:08 INFO     CHECKVERSION :: Checking if git needs an update
2016-08-15 10:03:08 DEBUG    CHECKVERSION :: Executing git rev-parse HEAD with your shell in /sickbeard
2016-08-15 10:03:08 DEBUG    CHECKVERSION :: git output: 171a607e41b7347a74cc815f6ecce7968d9acccf
2016-08-15 10:03:08 DEBUG    CHECKVERSION :: git rev-parse HEAD : returned successful
2016-08-15 10:03:08 DEBUG    CHECKVERSION :: Executing git fetch origin with your shell in /sickbeard
2016-08-15 10:03:10 DEBUG    CHECKVERSION :: git output: 
2016-08-15 10:03:10 DEBUG    CHECKVERSION :: git fetch origin : returned successful
2016-08-15 10:03:10 DEBUG    CHECKVERSION :: Executing git rev-parse --verify --quiet "@{upstream}" with your shell in /sickbeard
2016-08-15 10:03:10 DEBUG    CHECKVERSION :: git output: 171a607e41b7347a74cc815f6ecce7968d9acccf
2016-08-15 10:03:10 DEBUG    CHECKVERSION :: git rev-parse --verify --quiet "@{upstream}" : returned successful
2016-08-15 10:03:10 DEBUG    CHECKVERSION :: Executing git rev-list --left-right "@{upstream}"...HEAD with your shell in /sickbeard
2016-08-15 10:03:10 DEBUG    CHECKVERSION :: git output: 
2016-08-15 10:03:10 DEBUG    CHECKVERSION :: git rev-list --left-right "@{upstream}"...HEAD : returned successful
2016-08-15 10:03:10 DEBUG    CHECKVERSION :: cur_commit = 171a607e41b7347a74cc815f6ecce7968d9acccf, newest_commit = 171a607e41b7347a74cc815f6ecce7968d9acccf, num_commits_behind = 0, num_commits_ahead = 0
2016-08-15 10:03:10 INFO     CHECKVERSION :: No update needed
2016-08-15 10:03:10 INFO     CHECKVERSION :: Check scene exceptions update
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: cache.db: SELECT tvdb_id, show_name FROM scene_exceptions WHERE provider=?; with args ['sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 INFO     CHECKVERSION :: Updating scene exceptions
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [272391, u'Karl Pilkington The Moaning Of Life', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [264535, u'Storage Wars NY', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [247824, u'The Voice (US)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [247824, u'The Voice', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [276498, u'Raised By Wolves UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71699, u'The Outer Limits (1963)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [253982, u'Common Law (2012)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [253982, u'Common Law', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79905, u'Tim and Eric Awesome Show', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79905, u'Tim and Erics Awesome Show Great Job', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [276515, u'Curse of Oak Island', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [249892, u'Extreme Chef', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [249892, u'Extreme Chefs', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [276526, u'Legend of Mick Dodge', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [244061, u'Steins Gate', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [290865, u'Salem Rogers Model Of The Year 1998', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [294973, u'Home Fires UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [260165, u'Chasing UFOs', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [260165, u'National Geographic Chasing UFOs', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248503, u'The Hour (2011)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248503, u'The Hour UK 2011', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248503, u'The Hour 2011', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [78973, u'Ken Burns The Civil War', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [273424, u'David Attenboroughs Rise Of Animals', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71788, u'Superman: The Animated Series', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71788, u'Superman TAS', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [260206, u'Gordon Behind Bars', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [260206, u'Gordon Ramsay Behind Bars', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [254067, u'DUI', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [254067, u'D U I', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [254067, u'D.U.I', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [249980, u'Restoration Home', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [249980, u'Restoration Home UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [280939, u'Rush US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [145541, u'The Marriage Ref', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [145541, u'The Marriage Ref US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82060, u'Who Do You Think You Are AU', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [281624, u'Manhattan Love Story US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80018, u'Nick Cannon Presents Wild N Out', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [266388, u'David Attenboroughs Natural Curiosities', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [264347, u'Ghost Inside My Child', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250015, u'The Indestructibles', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250015, u'The Indestructibles US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [254112, u'Titanic 2012', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [282786, u'Utopia AU', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73893, u'Enterprise', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [84146, u'Secret Millionaire', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [84146, u'Secret Millionaire US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [282654, u'Utopia US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [198841, u'Undercover Boss (Au)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [198841, u'Undercover Boss Australia', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [194751, u'Conan', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [194751, u'Conan (2010)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [270528, u'Blood And Oil 2013', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [288963, u'The Royals', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [92361, u'Known Universe', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [92361, u'National Geographic Known Universe', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [256204, u'666 Park Avenue', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [256204, u'Park Avenue', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [198861, u'Film 2014 with Claudia Winkleman', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [198861, u'Film 2013 with Claudia Winkleman', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [198861, u'Film 2012 with Claudia Winkleman', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [198861, u'Film 2011 with Claudia Winkleman', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [255693, u'Undercover Boss Canada', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [255693, u'Undercover Boss CA', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [262353, u'Leaving', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [262353, u'Leaving UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82135, u'The Gruen Transfer', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82135, u'Gruen Nation', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82135, u'Gruen Sweat', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [139481, u'18 Kids And Counting', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [139481, u'17 Kids And Counting', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [213211, u'Love Hate', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [262368, u'Vikings (2012)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [262368, u'Vikings UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [168161, u'Law & Order: Los Angeles', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [168161, u'Law & Order: LA', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [78051, u'Never Mind the Buzzcocks', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [78051, u'Never Mind the Buzzcocks UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80101, u'Harry And Paul', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [283345, u'Sex and Drugs and Rock and Roll', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82152, u'Engrenages', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82152, u'Spiral 2005', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [262377, u'Sarah Beenys Double Your House for Half the Money', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [129261, u'Spartacus', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [129261, u'Spartacus Blood and Sand', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [129261, u'Spartacus Vengeance', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250095, u'The Marriage Ref(UK)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250095, u'The Marriage Ref UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [78075, u'Beast Machines Transformers', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [88321, u"Tabatha's Salon Takeover", 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [264450, u'Legit', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [264450, u'Legit US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82186, u'The Comedy Central Roast of', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82186, u'Comedy Central Roast', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82186, u'The Comedy Central Roast', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80159, u'Sanctuary', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80159, u'Sanctuary US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [196901, u'Grand Designs AU', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250153, u'Top Design Australia', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250153, u'Top Design AU', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [256300, u'Richard Hammonds Crash Course', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [256300, u"Richard Hammond's Crash Course", 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [78125, u'22 Minutes', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [268591, u'The Tomorrow People US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [268591, u'The Tomorrow People', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [268591, u'Tomorrow People', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71985, u'Taboo', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71985, u'National Geographic Taboo', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [128051, u'30 for 30', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [260489, u'National Geographic Caught In The Act', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71998, u'Jimmy Kimmel Live', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71998, u'Jimmy Kimmel', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76104, u'The Mole AU', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76107, u'Doctor Who Classic', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [94551, u'Parenthood (2010)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [94551, u'Parenthood', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [94551, u'Parenthood 2010', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [84312, u'Click (2000)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [84312, u'Click UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [172381, u'Silent Library (US)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80226, u'Inspector George Gently', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80226, u'George Gently', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76133, u'Poirot', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76133, u"Agatha Christie's Poirot", 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76133, u'Agatha Christie Poirot', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [280937, u'Satisfaction US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [166251, u'Four Corners', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [280949, u'Brandi and Jarrod-Married to the Job', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [199031, u'Click and Clack As the Wrench Turns', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [281664, u'Partners 2014', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76119, u'NOVA', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76119, u'PBS NOVA', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [291206, u'Broke-Ass Game Show', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76168, u'Batman: The Animated Series', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76168, u'Batman: TAS', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [197001, u'Supernatural The Animation', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [197001, u'Supernatural: TAS', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [256394, u'Lab Rats', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [252312, u'Jessie', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250267, u'The Food Truck NZ', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [252319, u"Dragons' Den: How To Win In The Den", 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [252319, u'How to win in the Den', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [139681, u"The Smoking Gun Presents: The World's Dumbest", 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [139681, u"World's Dumbest", 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80290, u'Jamie Oliver Jamies Kitchen', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [278976, u'The Comic Artist and His Assistants', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [283073, u'Fat N Furious-Rolling Thunder', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [116811, u'Dragons Den CA', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248261, u'National Terrorism Strike Force: San Diego: Sport Utility Vehicle', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248261, u'National Terrorism Strike Force: San Diego: SUV', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248261, u'NTSF:SD:SUV::', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248261, u'NTSF SD SUV', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82374, u'Ultimate Factories', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82374, u'National Geographic Ultimate Factories', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76235, u"America's Funniest Home Videos", 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76235, u'AFHV', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76237, u'Big Brother (Australia)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76237, u'Big Brother AU', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72150, u'BBC Later With Jools Holland', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250331, u"Richard Hammond's Journey To...", 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250331, u'Richard Hammonds Journey To', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82402, u'Hard Knocks', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82402, u'Hard Knocks Houston Texans', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72164, u'The O.C.', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72164, u'The OC', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [264679, u'National Geographic UFO Europe Untold Stories', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [260586, u'Cosmos A Space Time Odyssey', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [294417, u'Scream The TV Series', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80379, u'The Big Bang Theory', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80379, u'Big Bang Theory', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80379, u'TBBT', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [90621, u'Discovery Channel Sunrise Earth', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [90621, u'Sunrise Earth', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [270849, u'I Didnt Do It', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72194, u'The Ellen Degeneres Show', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72194, u'Ellen Degeneres', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [287236, u'American Supernatural', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [246281, u'King', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [246281, u'King (2011)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [295438, u'Shark UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82448, u'Project Runway Australia', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82448, u'Project Runway AU', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [90651, u'Selling Houses Australia', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [90651, u'Selling Houses Australia Extreme', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [273005, u'Ace of The Diamond', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72224, u'The Outer Limits (1995)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72224, u'The Outer Limits: TNS', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72224, u'The Outer Limits: The New Series', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82467, u'Eastbound Down', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82467, u'Eastbound and Down', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [297509, u'Blue Collar Millionares', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72231, u'Real Time with Bill Maher', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72231, u'Real Time With Bill Maher Plus Overtime', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74281, u'Have I Got News for You Uncut', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [88631, u'Krod Mandoon', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [283196, u'Married at First Sight US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [264776, u'Adam Hills In Gordon St Tonight', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250445, u'The Renovators', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250445, u'The Renovators AU', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [174681, u'Scooby-Doo! Mystery Incorporated', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [174681, u'Scooby Doo Mystery Incorporated', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [275039, u'Sailor Moon Crystal', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [164451, u'Carlos (2010)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [270948, u'Morgan Spurlock Inside Man', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [273002, u'I Couldnt Become a Hero So I Reluctantly Decided to Get a Job', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72301, u'Penn and Teller Bullshit', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72306, u'The Venture Brothers', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [90751, u'Travel Channel Planet Food', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [262787, u'Homefront UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74372, u'Blue Planet', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [281708, u'Proof US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [281708, u'Proof', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80522, u'Who Do You Think You Are?', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80522, u'Who Do You Think You Are UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [283291, u'Beyonce X10 The Mrs Carter Show World Tour', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250525, u'Hamish And Andys Gap Year', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250525, u'Hamish And Andys Euro Gap Year', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [139941, u'Childrens Hospital (US)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [139941, u'Childrens Hospital', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80552, u'Kitchen Nightmares (US)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80552, u'Kitchen Nightmares US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [168621, u'Melissa & Joey', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [168621, u'Melissa and Joey', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250544, u'Match of the Day Two', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [277169, u'Faking It 2014', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [277171, u'Tough Young Teachers UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70327, u'Buffy the Vampire Slayer', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70327, u'Buffy', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [291517, u'Agent X US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70336, u'The Tonight Show with Jay Leno', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70336, u'Jay Leno', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [88771, u"The Apprentice: You're Fired!", 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [88771, u'The Apprentice UK Youre Fired', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [88771, u'The Apprentice UK Your Fired', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [88771, u'The Apprentice Youre Fired', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [281467, u'Matador US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [131791, u'Sci-Fi Science', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [131791, u'Sci-Fi Science: Physics of the Impossible', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [131791, u'Sci Fi Science Physics of the Impossible', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [281297, u'BikerLive', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [258773, u'Zero Hour US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [295642, u'The Player 2015', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [260839, u'MasterChef Allstars AU', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [297084, u'Not Safe for Work UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [293614, u'Guardians of the Galaxy', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72829, u'The Apprentice', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72829, u'The Apprentice US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80625, u'MegaStructures', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80625, u'National Geographic Megastructures', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72449, u'Stargate SG1', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80646, u'Frontline (US)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80646, u'Frontline US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [262927, u"Ian Hislop's Stiff Upper Lip", 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [262927, u'Ian Hislops Stiff Upper Lip An Emotional History Of Britain', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74512, u'Wife Swap (US)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [299139, u'The Magicians US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [299139, u'The Magicians 2016', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248596, u'Atlantis', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80665, u'The Next Iron Chef Redemption', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [105251, u'Q and A AU', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [289574, u'The Late Show with Stephen Colbert', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [289574, u'Stephen Colbert', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248618, u'The Amazing Race Australia', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248618, u'The Amazing Race AU', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [285507, u'The Code AU', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [262980, u'House of Cards 2013', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [254798, u'Stella (2012)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [254798, u'Stella UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [263002, u'Switch (2012)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [263002, u'Switch UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72546, u'CSI', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72549, u'Big Brother UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72553, u'Mighty Morphin Power Rangers', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72553, u'Power Rangers Zeo', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72553, u'Power Rangers Turbo', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72553, u'Power Rangers in Space', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72553, u'Power Rangers Lost Galaxy', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72553, u'Power Rangers Ninja Storm', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72553, u'Power Rangers Operation Overdrive', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72553, u'Power Rangers Samurai', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72553, u'Power Rangers Super Samurai', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72553, u'Power Rangers Megaforce', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72553, u'Power Rangers Super Megaforce', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72553, u'Power Rangers Dino Charge', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [140141, u'Undercover Boss (US)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [140141, u'Undercover Boss US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74608, u'Top Gear UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248699, u'24 Hours In A And E', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74626, u'The X Factor', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74626, u'The X Factor UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [271241, u'Deal With It US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81391, u'Wie is de mol?', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81391, u'Wie is de mol', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81391, u'widm', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76703, u'Pokemon', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76706, u'Big Brother (US)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [281511, u'Blackish', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70572, u'Little Rascals', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70572, u'The Little Rascals', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70578, u'Highway Patrol', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70578, u'Highway Patrol (AU)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73545, u'Battlestar Galactica', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [238521, u'Adam Eva', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [281535, u'Forever US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76736, u'The Black Adder', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76736, u'BlackAdder', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [280736, u'The Game UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [166851, u'Noise Control (NZ)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [267206, u'Low Winter Sun US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [78804, u'Doctor Who 2005', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248789, u'Smash (2012)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248789, u'Smash', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [187351, u'This is England', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [187351, u'This is England 86', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [187351, u'This is England 88', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [187351, u'This is England 90', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [193501, u'XIII', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [193501, u'XIII (2011)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [193501, u'XIII The Series (2011)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [84133, u'Manhunters: Fugitive Task Force', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [84133, u'Manhunters - Fugitive Task Force', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [230371, u'David Attenborough Madagascar', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82918, u'Diners, Drive-ins and Dives', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82918, u'Diners Drive ins and Dives', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82918, u'Diners Driveins and Dives', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [273383, u'The House That 100k Built', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76779, u'WWE Monday Night RAW', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248812, u'Dont Trust the Bitch in Apartment 23', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248812, u'Apartment 23', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [220141, u'Wolverine', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [220141, u'Wolverine 2011', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [283630, u'Doraemon US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [263160, u'Mind of a Chef', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [267260, u'Intelligence US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [175101, u'Travel Channel Culture Shock', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [78846, u'Shameless UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248834, u'Last Man Standing (2011)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248834, u'Last Man Standing US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248834, u'Last Man Standing', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248835, u'Once Upon a Time (2011)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248835, u'Once Upon a Time', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248836, u'The River', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76808, u'Whose Line is it Anyway US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248841, u'Scandal US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72716, u'QI XL', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72716, u'BBC QI XL', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72716, u'BBC QI XL (Quite Interesting)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72716, u'BBC QI', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72716, u'BBC QI (Quite Interesting)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74768, u'The Block', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74768, u'The Block AU', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74768, u'The Block All Stars', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74768, u'The Block All Stars AU', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74768, u'The Block AU All Stars', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74768, u'The Block AU Sky High', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74768, u'The Block AU Fans vs Faves', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74768, u'The Block AU Glasshouse', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74768, u'The Block Triple Threat', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76817, u'The Ponderosa', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80915, u'La Linea 1972', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [277528, u'Love Child AU', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [281776, u'Youre the Worst', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [259106, u'Emily Owens M D', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [259106, u'Emily Owens MD', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [265252, u'MasterChef Australia The Professionals', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [275493, u'Backchat With Jack Whitehall And His Dad', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [105521, u'The Colony', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [105521, u'The Colony (US)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [279603, u'The Face AU', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74806, u'MST3K', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [84489, u'Masterchef', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [84489, u'MasterChef UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [271421, u'Clarence US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [277568, u'Babylon', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [252019, u'The Bridge 2011', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80964, u'Yo Gabba Gabba', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [255045, u'The L.A. Complex', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [255045, u'The LA Complex', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70726, u'Babylon 5', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70726, u'Babylon5', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [277580, u'30 For 30 Soccer Stories', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [205901, u'Transformers Prime', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [205901, u'Transformers Prime Beast Hunters', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [261202, u'DreamWorks Dragons: Riders of Berk', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [261202, u'Dragons Riders of Berk', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [261202, u'DreamWorks Dragons Riders of Berk', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [261202, u'Dragons Defenders of Berk', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [261202, u'Dreamworks Dragons', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [164951, u'Shit My Dad Says', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80994, u'National Geographic Channel Naked Science', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80994, u'National Geographic Naked Science', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [156771, u'National Geographic Shark Men', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [78949, u'Thomas The Tank Engine & Friends', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [78949, u'Thomas And Friends', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [261222, u'The Burn With Jeff Ross', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [261222, u'Jeff Ross', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248935, u'Touch (2012)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248935, u'Touch', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70760, u'Celebrity Big Brother', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70760, u'Celebrity Big Brother UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [279659, u'StarTalk', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [78956, u'So You Think You Can Dance US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [281709, u'The Librarians US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [283761, u'Kingdom', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [261240, u'H+', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [261240, u'H', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76925, u'Dark Shadows The Revival Series 1991', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248962, u'Transporter The Series', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74897, u'Hells Kitchen US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74897, u'Hells Kitchen', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [265373, u'David Attenboroughs Galapagos', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [120541, u'Russell Howards Good News', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [120541, u'Russell Howards Good News (UK)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [271525, u'WWE Total Divas', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83115, u'The Worlds Strictest Parents UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [298156, u'ConMan', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [85168, u'How the Earth Was Made', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [85168, u'History channel How the Earth Was Made', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [265393, u'The Legends of Chima', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83123, u'Merlin', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83123, u'Merlin (2008)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [271902, u'Legend of Shelby The Swamp Man', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [298167, u'HBO Documentaries SEX ON', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [298167, u'Sex On', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [265406, u'Out There 2013', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79040, u'Britains Next Top Model', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79040, u'Britain and Irelands Next Top Model', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74946, u'C O P S', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [263365, u'Marvels Agents of S H I E L D', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [263365, u'Marvel Agents Of SHIELD', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [263365, u'Agents of S H I E L D', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [212171, u'My Little Pony: Friendship is Magic', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [212171, u'My Little Pony Friendship is Magic', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [292044, u'Critical UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [273616, u'Pokemon Origins', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [95441, u'NCIS: Los Angeles', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [95441, u'NCIS LA', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70870, u'The Real World Road Rules Challenge', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70870, u'The Challenge Cutthroat', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70870, u'The Challenge Battle Of The Exes', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70870, u'The Challenge Rivals', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70870, u'The Challenge Battle Of The Seasons 2', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70870, u'The Challenge Rivals II', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70870, u'The Challenge Rivals 2', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70870, u'The Challenge Free Agents', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70870, u'The Challenge Battle Of The Exes 2', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [263387, u'Cedar Cove', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [269538, u'Satisfaction CA', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [279779, u'Sensitive Skin CA', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [284881, u'My Kitchen Rules New Zealand', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [85228, u'Law & Order: UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [85228, u'Law and Order UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [113901, u'The Super Hero Squad Show', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [113901, u'The Super Hero Squad', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [208111, u'Gold Rush', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [208111, u'Gold Rush: Alaska', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [118001, u'Beauty and the Geek Australia', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [118001, u'Beauty and the Geek AU', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [290038, u'Troy-Street Magic', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [195831, u"Zane Lamprey's Drinking Made Easy", 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [210171, u'The Killing (2011)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [210171, u'The Killing', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [152831, u'Adventure Time with Finn and Jake', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [275723, u'Panic Button US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [269584, u'Rake US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [269586, u'Brooklyn Nine Nine', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [269589, u'Dads', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [267542, u'Naked and Marooned with Ed Stafford', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [267543, u'Hulk and the Agents of S M A S H', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [267543, u'Hulk and the Agents of SMASH', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [75032, u'Cathouse The Series', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [75032, u'CatHouse', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [220441, u'R L Stines The Haunting Hour The Series', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [220441, u'R L Stines The Haunting Hour', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [220441, u"R.L. Stine's The Haunting Hour The Series", 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [193821, u'Iron Man 2010', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [193821, u'Iron Man 2011', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [95521, u'National Geographic Ancient Megastructures', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [77120, u'Aqua Teen Hunger Force', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [77120, u'Aqua Unit Patrol Squad', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [77120, u'Aqua Unit Patrol Squad 1', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [77120, u'Aqua Something You Know Whatever', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [275777, u'Wild Burma', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83268, u'Star Wars The Clone Wars 2008', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83268, u'Star Wars The Clone Wars', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [269637, u'The Michael J Fox Show', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [269641, u'Chicago P D', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [269641, u'Chicago PD', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [268855, u'Turbo FAST', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81230, u'Celebrity Rehab with Dr Drew', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [75088, u'David Letterman', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [269650, u'Resurrection US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [269651, u'Mind Games', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [269653, u'The Goldbergs', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [222551, u'Only in America With Larry the Cable Guy', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [222551, u'Only in America', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [259418, u'David Attenborough Kingdom Of Plants', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [273761, u'Master Chef Canada', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83299, u'Magics Biggest Secrets Finally Revealed', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79212, u'The Dog Whisperer', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79212, u'Dog Whisperer', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [296301, u'The Seventies', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [271728, u'Pete Holmes Show', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [290176, u'The Comedians US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [253323, u'Ninjago Masters Of Spinjitzu', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [253323, u'LEGO NinjaGo: Masters of Spinjitzu', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [253323, u'Ninjago Masters of Spinjitzu The Tournament of Elements', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [253323, u'Ninjago Masters of Spinjitzu Posession', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [249229, u'A.N.T Farm', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [249229, u'ANT Farm', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [296175, u'Britains Busiest Airport Heathrow', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [75166, u'The Biggest Loser US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [122281, u"Garrow's Law - Tales from the Old Bailey", 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [122281, u'Garrows Law', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [284076, u'Thats Incredible 2014', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [267709, u'Kesha My Crazy Beautiful Life', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81346, u'Underbelly', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81346, u'The Underbelly Files', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81346, u'Underbelly Files', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81346, u'Underbelly A Tale of Two Cities', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81346, u'Underbelly A Tale Of Two Cities UNCUT', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81346, u'Underbelly Razor', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81346, u'Underbelly The Golden Mile', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81346, u'Underbelly Badness', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81346, u'Underbelly Squizzy', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [97731, u'Tosh.0', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [97731, u'Tosh 0', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [251334, u'Lawless UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [269783, u'Reckless US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73178, u'Two Guys a Girl and a Pizza Place', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [280027, u'Off the Bat from the MLB Fan Cave', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79330, u'Jericho', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [265467, u'Polar Bear Family and Me', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83430, u'National Geographic Banged Up Abroad', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81386, u'Being Human', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81386, u'Being Human (UK)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [189931, u'RBT (AU)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [132591, u'7 Days (2009)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [132591, u'7 Days NZ', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81491, u'Big Brother After Dark', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81491, u'Big Brother US After Dark', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81491, u'Big Brother After Dark US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [259669, u'DaVincis Demons', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [259669, u'Vincis Demons', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [259669, u"Vinci's Demons", 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [138761, u'Arn The Knight Templar', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [77398, u'X-Files', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83462, u'Castle (2009)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83462, u'Castle', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83462, u'Castle 2009', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [128521, u'Million Dollar Listing', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [257550, u'Bellator FC', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [249361, u'Boss (2011)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [249361, u'Boss', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [251418, u'Frozen Planet', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [251418, u'David Attenborough Frozen Planet', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [251418, u'BBC Frozen Planet', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73244, u'The Office (US)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73244, u'The Office', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79389, u'Nightmares and Dreamscapes', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73246, u'30 Minute Meals', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73246, u'30 Minute Meals with Rachel Ray', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [122401, u'Discovery Channel Cool Stuff and How it works', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [122401, u'Cool Stuff and How it works', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73255, u'House', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73255, u'House M D', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [253485, u'The Syndicate UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [266449, u'The Last Leg With Adam Hills', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [261690, u'The Americans', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [192061, u'Young Justice', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [192061, u'Young Justice Invasion', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [271936, u'Played CA', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [155201, u'Louie (2010)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [155201, u'Louie', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [273986, u'Breathless UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [292421, u'James Corden', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [251464, u'Worlds Most Dangerous Roads', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73290, u'60 Minutes (US)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [204371, u'AuctionHunters', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [247381, u'Superscrimpers', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [271958, u'Arsenio Hall', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [265145, u'David Attenboroughs Africa', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71256, u'The Daily Show', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71256, u'The Daily Show with Jon Stewart', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71256, u'The Daily Show with Trevor Noah', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [212571, u'Come Fly With Me (2010)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [271632, u'Lucas Bros Moving Company', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [296550, u'Glitch', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [253543, u'All American Muslim', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [253543, u'All-American Muslim', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [257645, u'Ultimate Spider-man', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [257645, u'Ultimate Spiderman', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [257645, u'Ultimate Spider man', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [257645, u'Ultimate Spider-Man Web Warriors', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [120431, u'Food Factory', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [271984, u'Wonderland AU', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [75382, u'The Ultimate Fighter Live', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [75382, u'The Ultimate Fighter Fridays', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [75382, u'The Ultimate Fighter', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [75393, u'The X Factor (AU)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [75393, u'The X Factor Australia', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [77444, u'This Old House Program', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [281537, u'Aquarius US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [148581, u'Strike Back Legacy', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [149101, u'A League of Their Own (2010)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [149101, u'A League of Their Own UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [165521, u'Girls Gone Wild The Search for the Hottest Girl in America', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81559, u'The Biggest Loser Australia', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81559, u'The Biggest Loser AU', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [122521, u'The Fresh Beat Band', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [122521, u'Fresh Beat Band', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81563, u'Border Security AU Front Line', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81563, u'Border Security Australias Front Line', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81563, u'Border Security Australias Frontline', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [286373, u'The Nightly Show', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73387, u'The Late Late Show with Craig Ferguson', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73387, u'Craig Ferguson', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81580, u'Come Dine With Me UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [274099, u'At Midnight', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [274099, u'At Midnight With Chris Hardwick', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [276148, u'Review With Forrest MacNeil', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79565, u'The Real Hustle', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79565, u'The Real Hustle UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [274129, u'Klondike 2014', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [194261, u'PhoneShop', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [194261, u'Phone Shop', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [77526, u'Star Trek: TOS', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [100061, u'Undercover Boss', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [100061, u'Undercover Boss UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72073, u'Star Trek DS9', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79590, u'Dancing With The Stars (US)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [253682, u'Project Runway Allstars', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [253682, u'Project Runway All-Stars', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [196351, u'T.U.F.F. Puppy', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [196351, u'TUFF Puppy', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83714, u'Genius', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83714, u'Genius With Dave Gormand', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81670, u'The Murdoch Mysteries', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81670, u'Murdoch Mysteries', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81670, u'The Murdoch Mysteries (2008)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [272135, u'TURN Washingtons Spies', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72663, u'Accused', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72663, u'Accused UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [257804, u'Too Cute!', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [280339, u'Food Fighters US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [288914, u'Penn Zero', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71462, u'Sharpes', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [280361, u'Prey UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [284458, u'The Chair', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [110381, u'Archer', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71470, u'Star Trek: The Next Generation', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71470, u'Star Trek TNG', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [75567, u'The Xtra Factor', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [75567, u'The Xtra Factor UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79668, u'Anthony Bourdain: No Reservations', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79668, u'No Reservations', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83774, u'Antiques Roadshow (UK)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83774, u'Antiques Roadshow UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71489, u'Law and Order CI', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71489, u'Law & Order: CI', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [292678, u'Finding Jesus-Faith Fact Forgery', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [221001, u'10 O Clock Live', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [202571, u'The Trip to Italy', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [210771, u'Cake Boss Next Great Baker', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [276312, u'From Dusk Til Dawn', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [276312, u'From Dusk Till Dawn', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [227161, u'Oprah Presents Master Class', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [227161, u"Oprah's Master Class", 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73562, u'Beast Wars Transformers', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [264030, u'Avengers Assemble', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [264030, u'Marvels Avengers Assemble', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [259946, u'Location Location Location AU', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [259047, u'VGHS', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [249708, u'The Car Show', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [249708, u'The Car Show 2011', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [261999, u'Border Security Canadas Front Line', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [261999, u'Border Security Canada', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73587, u'The Twilight Zone 1959', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73587, u'The Twilight Zone 1960', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73587, u'The Twilight Zone 1961', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73587, u'The Twilight Zone 1962', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73587, u'The Twilight Zone 1963', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73587, u'The Twilight Zone 1964', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [280446, u'The Tom and Jerry Show', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73599, u'Dark Shadows (1966)', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73599, u'Dark Shadows The Beginning', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [89991, u'Out of the Wild: The Alaskan Experiment', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [89991, u'Out of the Wild: Venezuela', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [276360, u'19-2 CA', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [223161, u'CBC Marketplace', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [264085, u'The Bridge US', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79771, u'Air Crash Investigation', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79771, u'Air Crash Investigation Mayday', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79771, u'National Geographic Air Crash Investigation', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [251807, u'Green Lantern: The Animated Series', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [251807, u'Green Lantern TAS', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [251807, u'Green Lantern The Animated Series', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [77733, u'Degrassi: The Next Generation', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [77733, u'Degrassi TNG', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [77733, u'Degrassi', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73641, u'King of Queens', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [75692, u'Law & Order: SVU', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [292782, u'Nurse UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [270261, u'Jimmy Fallon', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [270262, u'Seth Meyers', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79177, u'Life On Mars UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83897, u'Life After People: The Series', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [92091, u'MasterChef Australia', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [92091, u'MasterChef AU', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [294846, u'8MMM', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [263506, u'Jamies 16 Minute Meals', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [264141, u'Falcon', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79824, u'Naruto Shippuden', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [77780, u'G.I. Joe', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [77780, u'GI Joe', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [77780, u'G I Joe', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79836, u"Dragon's Den (UK)", 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79836, u'Dragons Den UK', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [178141, u'My Ghost Story', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73696, u'CSI: New York', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [270307, u'Family SOS with Jo Frost', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [75748, u'The Culture Show Uncut', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [253931, u'Rob', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70994, u'MASH', 'sb_tvdb_scene_exceptions']
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: Transaction with 725 query's executed
2016-08-15 10:03:11 INFO     CHECKVERSION :: Clear name cache
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: cache.db: DELETE FROM scene_names WHERE tvdb_id = ? with args [0]
2016-08-15 10:03:11 INFO     CHECKVERSION :: Performing a vacuum on database: cache.db
2016-08-15 10:03:11 DEBUG    CHECKVERSION :: cache.db: VACUUM
2016-08-15 10:41:58 INFO     MAIN :: Checking database structure...
2016-08-15 10:41:58 DEBUG    MAIN :: Checking Initial Schema database upgrade
2016-08-15 10:41:58 DEBUG    MAIN :: sickbeard.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('tv_shows',)
2016-08-15 10:41:58 DEBUG    MAIN :: sickbeard.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('db_version',)
2016-08-15 10:41:58 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:41:58 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:41:58 DEBUG    MAIN :: Initial Schema upgrade not required
2016-08-15 10:41:58 DEBUG    MAIN :: Checking Add Size And Scene Name Fields database upgrade
2016-08-15 10:41:58 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:41:58 DEBUG    MAIN :: Add Size And Scene Name Fields upgrade not required
2016-08-15 10:41:58 DEBUG    MAIN :: Checking Rename Season Folders database upgrade
2016-08-15 10:41:58 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:41:58 DEBUG    MAIN :: Rename Season Folders upgrade not required
2016-08-15 10:41:58 DEBUG    MAIN :: Checking Add1080p And Raw Qualities database upgrade
2016-08-15 10:41:58 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:41:58 DEBUG    MAIN :: Add1080p And Raw Qualities upgrade not required
2016-08-15 10:41:58 DEBUG    MAIN :: Checking Add Showid Tvdbid Index database upgrade
2016-08-15 10:41:58 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:41:58 DEBUG    MAIN :: Add Showid Tvdbid Index upgrade not required
2016-08-15 10:41:58 DEBUG    MAIN :: Checking Add Last Update database upgrade
2016-08-15 10:41:58 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:41:58 DEBUG    MAIN :: Add Last Update upgrade not required
2016-08-15 10:41:58 DEBUG    MAIN :: Checking Add Require And Ignore Words database upgrade
2016-08-15 10:41:58 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:41:58 DEBUG    MAIN :: Add Require And Ignore Words upgrade not required
2016-08-15 10:41:58 DEBUG    MAIN :: Checking Cleanup History And Specials database upgrade
2016-08-15 10:41:58 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:41:58 DEBUG    MAIN :: Cleanup History And Specials upgrade not required
2016-08-15 10:41:58 DEBUG    MAIN :: Checking Add Skip Notifications database upgrade
2016-08-15 10:41:58 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:41:58 DEBUG    MAIN :: Add Skip Notifications upgrade not required
2016-08-15 10:41:58 DEBUG    MAIN :: Checking Add History Source database upgrade
2016-08-15 10:41:58 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:41:58 DEBUG    MAIN :: Add History Source upgrade not required
2016-08-15 10:41:58 INFO     MAIN :: Checking database structure...
2016-08-15 10:41:58 DEBUG    MAIN :: Checking Initial Schema database upgrade
2016-08-15 10:41:58 DEBUG    MAIN :: cache.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('lastUpdate',)
2016-08-15 10:41:58 DEBUG    MAIN :: Initial Schema upgrade not required
2016-08-15 10:41:58 DEBUG    MAIN :: Checking Add Scene Exceptions database upgrade
2016-08-15 10:41:58 DEBUG    MAIN :: cache.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('scene_exceptions',)
2016-08-15 10:41:58 DEBUG    MAIN :: Add Scene Exceptions upgrade not required
2016-08-15 10:41:58 DEBUG    MAIN :: Checking Add Scene Name Cache database upgrade
2016-08-15 10:41:58 DEBUG    MAIN :: cache.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('scene_names',)
2016-08-15 10:41:58 DEBUG    MAIN :: Add Scene Name Cache upgrade not required
2016-08-15 10:41:58 DEBUG    MAIN :: Checking Add Scene Exceptions Provider database upgrade
2016-08-15 10:41:58 DEBUG    MAIN :: Add Scene Exceptions Provider upgrade not required
2016-08-15 10:41:58 DEBUG    MAIN :: sickbeard.db: SELECT show_id, tvdb_id, COUNT(tvdb_id) as count FROM tv_shows GROUP BY tvdb_id HAVING count > 1
2016-08-15 10:41:58 INFO     MAIN :: No duplicate show, check passed
2016-08-15 10:41:58 DEBUG    MAIN :: sickbeard.db: SELECT showid, season, episode, COUNT(showid) as count FROM tv_episodes GROUP BY showid, season, episode HAVING count > 1
2016-08-15 10:41:58 INFO     MAIN :: No duplicate episode, check passed
2016-08-15 10:41:58 DEBUG    MAIN :: sickbeard.db: SELECT episode_id, showid, tv_shows.tvdb_id FROM tv_episodes LEFT JOIN tv_shows ON tv_episodes.showid=tv_shows.tvdb_id WHERE tv_shows.tvdb_id is NULL
2016-08-15 10:41:58 INFO     MAIN :: No orphan episodes, check passed
2016-08-15 10:41:58 DEBUG    MAIN :: config_version -> 6
2016-08-15 10:41:58 DEBUG    MAIN :: Checking if we can use git commands: git version
2016-08-15 10:41:58 DEBUG    MAIN :: Executing git version with your shell in /sickbeard
2016-08-15 10:41:58 DEBUG    MAIN :: git output: git version 2.8.3
2016-08-15 10:41:58 DEBUG    MAIN :: git version : returned successful
2016-08-15 10:41:58 DEBUG    MAIN :: Using: git
2016-08-15 10:41:58 DEBUG    MAIN :: Executing git symbolic-ref -q HEAD with your shell in /sickbeard
2016-08-15 10:41:58 DEBUG    MAIN :: git output: refs/heads/development
2016-08-15 10:41:58 DEBUG    MAIN :: git symbolic-ref -q HEAD : returned successful
2016-08-15 10:41:58 DEBUG    MAIN :: Retrieving the last check time from the DB
2016-08-15 10:41:58 DEBUG    MAIN :: sickbeard.db: SELECT * FROM info
2016-08-15 10:41:58 INFO     MAIN :: Starting Sick Beard on http://0.0.0.0:8081/
2016-08-15 10:41:59 INFO     MAIN :: Loading initial show list
2016-08-15 10:41:59 DEBUG    MAIN :: sickbeard.db: SELECT * FROM tv_shows
2016-08-15 10:41:59 DEBUG    CHECKVERSION :: Starting new thread: CHECKVERSION
2016-08-15 10:41:59 INFO     CHECKVERSION :: Checking if git needs an update
2016-08-15 10:41:59 DEBUG    CHECKVERSION :: Executing git rev-parse HEAD with your shell in /sickbeard
2016-08-15 10:41:59 DEBUG    CHECKVERSION :: git output: 171a607e41b7347a74cc815f6ecce7968d9acccf
2016-08-15 10:41:59 DEBUG    CHECKVERSION :: git rev-parse HEAD : returned successful
2016-08-15 10:41:59 DEBUG    CHECKVERSION :: Executing git fetch origin with your shell in /sickbeard
2016-08-15 10:42:01 DEBUG    CHECKVERSION :: git output: 
2016-08-15 10:42:01 DEBUG    CHECKVERSION :: git fetch origin : returned successful
2016-08-15 10:42:01 DEBUG    CHECKVERSION :: Executing git rev-parse --verify --quiet "@{upstream}" with your shell in /sickbeard
2016-08-15 10:42:01 DEBUG    CHECKVERSION :: git output: 171a607e41b7347a74cc815f6ecce7968d9acccf
2016-08-15 10:42:01 DEBUG    CHECKVERSION :: git rev-parse --verify --quiet "@{upstream}" : returned successful
2016-08-15 10:42:01 DEBUG    CHECKVERSION :: Executing git rev-list --left-right "@{upstream}"...HEAD with your shell in /sickbeard
2016-08-15 10:42:01 DEBUG    CHECKVERSION :: git output: 
2016-08-15 10:42:01 DEBUG    CHECKVERSION :: git rev-list --left-right "@{upstream}"...HEAD : returned successful
2016-08-15 10:42:01 DEBUG    CHECKVERSION :: cur_commit = 171a607e41b7347a74cc815f6ecce7968d9acccf, newest_commit = 171a607e41b7347a74cc815f6ecce7968d9acccf, num_commits_behind = 0, num_commits_ahead = 0
2016-08-15 10:42:01 INFO     CHECKVERSION :: No update needed
2016-08-15 10:42:01 INFO     CHECKVERSION :: Check scene exceptions update
2016-08-15 10:42:02 DEBUG    CHECKVERSION :: cache.db: SELECT tvdb_id, show_name FROM scene_exceptions WHERE provider=?; with args ['sb_tvdb_scene_exceptions']
2016-08-15 10:42:02 INFO     CHECKVERSION :: No scene exceptions update needed
2016-08-15 10:42:59 DEBUG    SEARCH :: Starting new thread: SEARCH
2016-08-15 10:43:02 INFO     SEARCHQUEUE-RSS-SEARCH :: Changing all old missing episodes (UNAIRED) to status WANTED
2016-08-15 10:43:02 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_episodes WHERE status = ? AND season > 0 AND airdate < ? with args [1, 736191]
2016-08-15 10:43:02 INFO     SEARCHQUEUE-RSS-SEARCH :: Beginning search for new episodes on RSS
2016-08-15 10:43:02 INFO     SEARCHQUEUE-RSS-SEARCH :: Searching all providers for any needed episodes
2016-08-15 10:43:02 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT time FROM lastUpdate WHERE provider = ? with args ['womble_s_index']
2016-08-15 10:43:02 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Womble's Index cache update URL: http://newshost.co.za/rss/?sec=tv-x264&fr=false
2016-08-15 10:43:02 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Womble's Index cache update URL: http://newshost.co.za/rss/?sec=tv-dvd&fr=false
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: UPDATE lastUpdate SET time = ? WHERE provider = ? with args [1471257783, 'womble_s_index']
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO lastUpdate (time, provider) VALUES (?, ?) with args [1471257783, 'womble_s_index']
2016-08-15 10:43:03 INFO     SEARCHQUEUE-RSS-SEARCH :: Clearing Womble's Index cache and updating with new information
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: DELETE FROM [womble_s_index] WHERE 1
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: David.Beckham.For.The.Love.Of.The.Game.1080p.HDTV.x264-FaiLED
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename David.Beckham.For.The.Love.Of.The.Game.1080p.HDTV.x264-FaiLED into a valid episode
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: David.Beckham.For.The.Love.Of.The.Game.1080p.HDTV.x264-FaiLED
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: 8.Out.Of.10.Cats.S19.End.Of.Year.Special.HDTV.x264-TLA
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of 8 Out Of
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'8.Out.Of']
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'8 Out Of', u'8 Out Of']
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for 8 Out Of
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'8.Out.Of']
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['8.Out.Of.10.Cats.S19.End.Of.Year.Special.HDTV.x264-TLA', 1, '|10|', 0, 0, 'http://www.newshost.co.za/nzb/d9a/8.Out.Of.10.Cats.S19.End.Of.Year.Special.HDTV.x264-TLA.nzb', 1471257783, 1]
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: 8.Out.Of.10.Cats.S19.End.Of.Year.Special.720p.HDTV.x264-TLA
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of 8 Out Of
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'8.Out.Of']
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['8.Out.Of.10.Cats.S19.End.Of.Year.Special.720p.HDTV.x264-TLA', 1, '|10|', 0, 0, 'http://www.newshost.co.za/nzb/632/8.Out.Of.10.Cats.S19.End.Of.Year.Special.720p.HDTV.x264-TLA.nzb', 1471257783, 4]
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Tripped.S01E04.1080p.HDTV.x264-TLA
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Tripped
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Tripped']
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Tripped', u'Tripped']
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Tripped
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Tripped']
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Tripped.S01E04.1080p.HDTV.x264-TLA', 1, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/b69/Tripped.S01E04.1080p.HDTV.x264-TLA.nzb', 1471257783, 16]
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: David.Beckham.For.The.Love.Of.The.Game.PROPER.720p.HDTV.x264-CHAMPiONS
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename David.Beckham.For.The.Love.Of.The.Game.PROPER.720p.HDTV.x264-CHAMPiONS into a valid episode
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: David.Beckham.For.The.Love.Of.The.Game.PROPER.720p.HDTV.x264-CHAMPiONS
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Tripped.S01E04.HDTV.x264-TLA
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Tripped
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Tripped']
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Tripped.S01E04.HDTV.x264-TLA', 1, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/6bb/Tripped.S01E04.HDTV.x264-TLA.nzb', 1471257783, 1]
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Tripped.S01E04.720p.HDTV.x264-TLA
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Tripped
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Tripped']
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Tripped.S01E04.720p.HDTV.x264-TLA', 1, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/711/Tripped.S01E04.720p.HDTV.x264-TLA.nzb', 1471257783, 4]
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Travel.In.Style.S02E02.Chiang.Mai.And.Grenada.720p.HDTV.x264-ASCENDANCE
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Travel In Style
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Travel.In.Style']
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Travel In Style', u'Travel In Style']
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Travel In Style
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Travel.In.Style']
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Travel.In.Style.S02E02.Chiang.Mai.And.Grenada.720p.HDTV.x264-ASCENDANCE', 2, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/a73/Travel.In.Style.S02E02.Chiang.Mai.And.Grenada.720p.HDTV.x264-ASCENDANCE.nzb', 1471257783, 4]
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Travel.In.Style.S02E02.Chiang.Mai.And.Grenada.HDTV.x264-ASCENDANCE
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Travel In Style
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Travel.In.Style']
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Travel.In.Style.S02E02.Chiang.Mai.And.Grenada.HDTV.x264-ASCENDANCE', 2, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/217/Travel.In.Style.S02E02.Chiang.Mai.And.Grenada.HDTV.x264-ASCENDANCE.nzb', 1471257783, 1]
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Travel.In.Style.S02E01.Venice.And.London.720p.HDTV.x264-ASCENDANCE
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Travel In Style
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Travel.In.Style']
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Travel.In.Style.S02E01.Venice.And.London.720p.HDTV.x264-ASCENDANCE', 2, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/718/Travel.In.Style.S02E01.Venice.And.London.720p.HDTV.x264-ASCENDANCE.nzb', 1471257783, 4]
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Travel.In.Style.S02E01.Venice.And.London.HDTV.x264-ASCENDANCE
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Travel In Style
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Travel.In.Style']
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Travel.In.Style.S02E01.Venice.And.London.HDTV.x264-ASCENDANCE', 2, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/de6/Travel.In.Style.S02E01.Venice.And.London.HDTV.x264-ASCENDANCE.nzb', 1471257783, 1]
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: EPL.2015.12.29.Leicester.City.Vs.Manchester.City.720p.HDTV.x264-CHAMPiONS
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of EPL
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'EPL']
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'EPL', u'EPL']
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for EPL
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'EPL']
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['EPL.2015.12.29.Leicester.City.Vs.Manchester.City.720p.HDTV.x264-CHAMPiONS', 1, '||', 0, 0, 'http://www.newshost.co.za/nzb/2b5/EPL.2015.12.29.Leicester.City.Vs.Manchester.City.720p.HDTV.x264-CHAMPiONS.nzb', 1471257783, 4]
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: David.Beckham.For.The.Love.Of.The.Game.720p.HDTV.x264-FTP
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename David.Beckham.For.The.Love.Of.The.Game.720p.HDTV.x264-FTP into a valid episode
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: David.Beckham.For.The.Love.Of.The.Game.720p.HDTV.x264-FTP
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: David.Beckham.For.The.Love.Of.The.Game.HDTV.x264-FTP
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename David.Beckham.For.The.Love.Of.The.Game.HDTV.x264-FTP into a valid episode
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: David.Beckham.For.The.Love.Of.The.Game.HDTV.x264-FTP
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Seinfeld.S02E12.720p.HDTV.x264-REGRET
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Seinfeld
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Seinfeld']
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Seinfeld', u'Seinfeld']
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Seinfeld
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Seinfeld']
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Seinfeld.S02E12.720p.HDTV.x264-REGRET', 2, '|12|', 0, 0, 'http://www.newshost.co.za/nzb/571/Seinfeld.S02E12.720p.HDTV.x264-REGRET.nzb', 1471257783, 4]
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Life.Below.Zero.S06E05.HDTV.x264-YesTV
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Life Below Zero
2016-08-15 10:43:03 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Life.Below.Zero']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Life Below Zero', u'Life Below Zero']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Life Below Zero
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Life.Below.Zero']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Life.Below.Zero.S06E05.HDTV.x264-YesTV', 6, '|5|', 0, 0, 'http://www.newshost.co.za/nzb/6af/Life.Below.Zero.S06E05.HDTV.x264-YesTV.nzb', 1471257784, 1]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Drugs.Inc.S07E15.Bangkok.Ice.720p.HDTV.x264-YesTV
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Drugs Inc
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Drugs.Inc']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Drugs Inc', u'Drugs Inc']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Drugs Inc
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Drugs.Inc']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Drugs.Inc.S07E15.Bangkok.Ice.720p.HDTV.x264-YesTV', 7, '|15|', 0, 0, 'http://www.newshost.co.za/nzb/e82/Drugs.Inc.S07E15.Bangkok.Ice.720p.HDTV.x264-YesTV.nzb', 1471257784, 4]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Drugs.Inc.S07E15.Bangkok.Ice.HDTV.x264-YesTV
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Drugs Inc
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Drugs.Inc']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Drugs.Inc.S07E15.Bangkok.Ice.HDTV.x264-YesTV', 7, '|15|', 0, 0, 'http://www.newshost.co.za/nzb/161/Drugs.Inc.S07E15.Bangkok.Ice.HDTV.x264-YesTV.nzb', 1471257784, 1]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Challenge.Battle.Of.The.Bloodlines.S27E04.After.Show.720p.HDTV.x264-YesTV
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Challenge Battle Of The Bloodlines
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Challenge.Battle.Of.The.Bloodlines']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'The Challenge Battle Of The Bloodlines', u'The Challenge Battle Of The Bloodlines']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for The Challenge Battle Of The Bloodlines
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'The.Challenge.Battle.Of.The.Bloodlines']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Challenge.Battle.Of.The.Bloodlines.S27E04.After.Show.720p.HDTV.x264-YesTV', 27, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/927/The.Challenge.Battle.Of.The.Bloodlines.S27E04.After.Show.720p.HDTV.x264-YesTV.nzb', 1471257784, 4]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Challenge.Battle.Of.The.Bloodlines.S27E04.After.Show.HDTV.x264-YesTV
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Challenge Battle Of The Bloodlines
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Challenge.Battle.Of.The.Bloodlines']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Challenge.Battle.Of.The.Bloodlines.S27E04.After.Show.HDTV.x264-YesTV', 27, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/394/The.Challenge.Battle.Of.The.Bloodlines.S27E04.After.Show.HDTV.x264-YesTV.nzb', 1471257784, 1]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Challenge.Battle.Of.The.Bloodlines.S27E04.720p.HDTV.x264-YesTV
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Challenge Battle Of The Bloodlines
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Challenge.Battle.Of.The.Bloodlines']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Challenge.Battle.Of.The.Bloodlines.S27E04.720p.HDTV.x264-YesTV', 27, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/2c6/The.Challenge.Battle.Of.The.Bloodlines.S27E04.720p.HDTV.x264-YesTV.nzb', 1471257784, 4]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Challenge.Battle.Of.The.Bloodlines.S27E04.HDTV.x264-YesTV
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Challenge Battle Of The Bloodlines
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Challenge.Battle.Of.The.Bloodlines']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Challenge.Battle.Of.The.Bloodlines.S27E04.HDTV.x264-YesTV', 27, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/d2f/The.Challenge.Battle.Of.The.Bloodlines.S27E04.HDTV.x264-YesTV.nzb', 1471257784, 1]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Holby.City.S18E12.Beginnings.720p.HDTV.x264-ORGANiC
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Holby City
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Holby.City']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Holby City', u'Holby City']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Holby City
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Holby.City']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Holby.City.S18E12.Beginnings.720p.HDTV.x264-ORGANiC', 18, '|12|', 0, 0, 'http://www.newshost.co.za/nzb/326/Holby.City.S18E12.Beginnings.720p.HDTV.x264-ORGANiC.nzb', 1471257784, 4]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Holby.City.S18E12.Beginnings.HDTV.x264-ORGANiC
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Holby City
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Holby.City']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Holby.City.S18E12.Beginnings.HDTV.x264-ORGANiC', 18, '|12|', 0, 0, 'http://www.newshost.co.za/nzb/fa7/Holby.City.S18E12.Beginnings.HDTV.x264-ORGANiC.nzb', 1471257784, 1]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Made.In.Chelsea.S10E11.PDTV.x264-TASTETV
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Made In Chelsea
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Made.In.Chelsea']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Made In Chelsea', u'Made In Chelsea']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Made In Chelsea
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Made.In.Chelsea']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Made.In.Chelsea.S10E11.PDTV.x264-TASTETV', 10, '|11|', 0, 0, 'http://www.newshost.co.za/nzb/9bc/Made.In.Chelsea.S10E11.PDTV.x264-TASTETV.nzb', 1471257784, 1]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Fungus.The.Bogeyman.2015.S01E03.1080p.HDTV.x264-FaiLED
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Fungus The Bogeyman 2015
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Fungus.The.Bogeyman.2015']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Fungus The Bogeyman 2015', u'Fungus The Bogeyman 2015']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match original name but trying to manually strip and specify show year
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE (show_name LIKE ? OR tvr_name LIKE ?) AND startyear = ? with args [u'Fungus The Bogeyman%', u'Fungus The Bogeyman%', u'2015']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Fungus The Bogeyman 2015
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Fungus.The.Bogeyman.2015']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Fungus.The.Bogeyman.2015.S01E03.1080p.HDTV.x264-FaiLED', 1, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/541/Fungus.The.Bogeyman.2015.S01E03.1080p.HDTV.x264-FaiLED.nzb', 1471257784, 16]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Minority.Report.S01E04.1080p.HDTV.x264-SERIOUSLY
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Minority Report
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Minority.Report']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Minority Report', u'Minority Report']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Minority Report
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Minority.Report']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Minority.Report.S01E04.1080p.HDTV.x264-SERIOUSLY', 1, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/b13/Minority.Report.S01E04.1080p.HDTV.x264-SERIOUSLY.nzb', 1471257784, 16]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Minority.Report.S01E03.1080p.HDTV.x264-SERIOUSLY
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Minority Report
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Minority.Report']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Minority.Report.S01E03.1080p.HDTV.x264-SERIOUSLY', 1, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/226/Minority.Report.S01E03.1080p.HDTV.x264-SERIOUSLY.nzb', 1471257784, 16]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Seinfeld.S02E12.HDTV.x264-REGRET
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Seinfeld
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Seinfeld']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Seinfeld.S02E12.HDTV.x264-REGRET', 2, '|12|', 0, 0, 'http://www.newshost.co.za/nzb/60d/Seinfeld.S02E12.HDTV.x264-REGRET.nzb', 1471257784, 1]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Minority.Report.S01E02.1080p.HDTV.x264-SERIOUSLY
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Minority Report
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Minority.Report']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Minority.Report.S01E02.1080p.HDTV.x264-SERIOUSLY', 1, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/aa6/Minority.Report.S01E02.1080p.HDTV.x264-SERIOUSLY.nzb', 1471257784, 16]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Hot.in.Cleveland.S04E01.720p.HDTV.x264-REGRET
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Hot in Cleveland
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Hot.in.Cleveland']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Hot in Cleveland', u'Hot in Cleveland']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Hot in Cleveland
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Hot.in.Cleveland']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Hot.in.Cleveland.S04E01.720p.HDTV.x264-REGRET', 4, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/e07/Hot.in.Cleveland.S04E01.720p.HDTV.x264-REGRET.nzb', 1471257784, 4]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Little.House.on.the.Prairie.S07E22.1080p.BluRay.x264-YELLOWBiRD
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Little House on the Prairie
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Little.House.on.the.Prairie']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Little House on the Prairie', u'Little House on the Prairie']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Little House on the Prairie
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Little.House.on.the.Prairie']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Little.House.on.the.Prairie.S07E22.1080p.BluRay.x264-YELLOWBiRD', 7, '|22|', 0, 0, 'http://www.newshost.co.za/nzb/e6f/Little.House.on.the.Prairie.S07E22.1080p.BluRay.x264-YELLOWBiRD.nzb', 1471257784, 256]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Little.House.on.the.Prairie.S07E22.720p.BluRay.x264-YELLOWBiRD
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Little House on the Prairie
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Little.House.on.the.Prairie']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Little.House.on.the.Prairie.S07E22.720p.BluRay.x264-YELLOWBiRD', 7, '|22|', 0, 0, 'http://www.newshost.co.za/nzb/a4b/Little.House.on.the.Prairie.S07E22.720p.BluRay.x264-YELLOWBiRD.nzb', 1471257784, 128]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Little.House.on.the.Prairie.S07E21.1080p.BluRay.x264-YELLOWBiRD
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Little House on the Prairie
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Little.House.on.the.Prairie']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Little.House.on.the.Prairie.S07E21.1080p.BluRay.x264-YELLOWBiRD', 7, '|21|', 0, 0, 'http://www.newshost.co.za/nzb/249/Little.House.on.the.Prairie.S07E21.1080p.BluRay.x264-YELLOWBiRD.nzb', 1471257784, 256]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Hot.in.Cleveland.S03E23.720p.HDTV.x264-REGRET
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Hot in Cleveland
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Hot.in.Cleveland']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Hot.in.Cleveland.S03E23.720p.HDTV.x264-REGRET', 3, '|23|', 0, 0, 'http://www.newshost.co.za/nzb/b4f/Hot.in.Cleveland.S03E23.720p.HDTV.x264-REGRET.nzb', 1471257784, 4]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Fungus.The.Bogeyman.2015.S01E03.HDTV.x264-TLA
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Fungus The Bogeyman 2015
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Fungus.The.Bogeyman.2015']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Fungus.The.Bogeyman.2015.S01E03.HDTV.x264-TLA', 1, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/d3b/Fungus.The.Bogeyman.2015.S01E03.HDTV.x264-TLA.nzb', 1471257784, 1]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Fungus.The.Bogeyman.2015.S01E03.720p.HDTV.x264-TLA
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Fungus The Bogeyman 2015
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Fungus.The.Bogeyman.2015']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Fungus.The.Bogeyman.2015.S01E03.720p.HDTV.x264-TLA', 1, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/34d/Fungus.The.Bogeyman.2015.S01E03.720p.HDTV.x264-TLA.nzb', 1471257784, 4]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Tonight.S17E29.Lonely.This.Christmas.HDTV.x264-C4TV
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Tonight
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Tonight']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Tonight', u'Tonight']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Tonight
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Tonight']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Tonight.S17E29.Lonely.This.Christmas.HDTV.x264-C4TV', 17, '|29|', 0, 0, 'http://www.newshost.co.za/nzb/3c6/Tonight.S17E29.Lonely.This.Christmas.HDTV.x264-C4TV.nzb', 1471257784, 1]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Tonight.S17E29.Lonely.This.Christmas.720p.HDTV.x264-C4TV
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Tonight
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Tonight']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Tonight.S17E29.Lonely.This.Christmas.720p.HDTV.x264-C4TV', 17, '|29|', 0, 0, 'http://www.newshost.co.za/nzb/2a5/Tonight.S17E29.Lonely.This.Christmas.720p.HDTV.x264-C4TV.nzb', 1471257784, 4]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Race.For.Your.Life.Charlie.Brown.1977.HDTV.x264-REGRET
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename Race.For.Your.Life.Charlie.Brown.1977.HDTV.x264-REGRET into a valid episode
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: Race.For.Your.Life.Charlie.Brown.1977.HDTV.x264-REGRET
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Race.For.Your.Life.Charlie.Brown.1977.720p.HDTV.x264-REGRET
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename Race.For.Your.Life.Charlie.Brown.1977.720p.HDTV.x264-REGRET into a valid episode
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: Race.For.Your.Life.Charlie.Brown.1977.720p.HDTV.x264-REGRET
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Little.House.on.the.Prairie.S07E21.720p.BluRay.x264-YELLOWBiRD
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Little House on the Prairie
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Little.House.on.the.Prairie']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Little.House.on.the.Prairie.S07E21.720p.BluRay.x264-YELLOWBiRD', 7, '|21|', 0, 0, 'http://www.newshost.co.za/nzb/5c2/Little.House.on.the.Prairie.S07E21.720p.BluRay.x264-YELLOWBiRD.nzb', 1471257784, 128]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Little.House.on.the.Prairie.S07E20.1080p.BluRay.x264-YELLOWBiRD
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Little House on the Prairie
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Little.House.on.the.Prairie']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Little.House.on.the.Prairie.S07E20.1080p.BluRay.x264-YELLOWBiRD', 7, '|20|', 0, 0, 'http://www.newshost.co.za/nzb/47a/Little.House.on.the.Prairie.S07E20.1080p.BluRay.x264-YELLOWBiRD.nzb', 1471257784, 256]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Little.House.on.the.Prairie.S07E20.720p.BluRay.x264-YELLOWBiRD
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Little House on the Prairie
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Little.House.on.the.Prairie']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Little.House.on.the.Prairie.S07E20.720p.BluRay.x264-YELLOWBiRD', 7, '|20|', 0, 0, 'http://www.newshost.co.za/nzb/a9f/Little.House.on.the.Prairie.S07E20.720p.BluRay.x264-YELLOWBiRD.nzb', 1471257784, 128]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Little.House.on.the.Prairie.S07E19.1080p.BluRay.x264-YELLOWBiRD
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Little House on the Prairie
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Little.House.on.the.Prairie']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Little.House.on.the.Prairie.S07E19.1080p.BluRay.x264-YELLOWBiRD', 7, '|19|', 0, 0, 'http://www.newshost.co.za/nzb/382/Little.House.on.the.Prairie.S07E19.1080p.BluRay.x264-YELLOWBiRD.nzb', 1471257784, 256]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Little.House.on.the.Prairie.S07E19.720p.BluRay.x264-YELLOWBiRD
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Little House on the Prairie
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Little.House.on.the.Prairie']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Little.House.on.the.Prairie.S07E19.720p.BluRay.x264-YELLOWBiRD', 7, '|19|', 0, 0, 'http://www.newshost.co.za/nzb/3c4/Little.House.on.the.Prairie.S07E19.720p.BluRay.x264-YELLOWBiRD.nzb', 1471257784, 128]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Little.House.on.the.Prairie.S07E18.1080p.BluRay.x264-YELLOWBiRD
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Little House on the Prairie
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Little.House.on.the.Prairie']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Little.House.on.the.Prairie.S07E18.1080p.BluRay.x264-YELLOWBiRD', 7, '|18|', 0, 0, 'http://www.newshost.co.za/nzb/5be/Little.House.on.the.Prairie.S07E18.1080p.BluRay.x264-YELLOWBiRD.nzb', 1471257784, 256]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Little.House.on.the.Prairie.S07E18.720p.BluRay.x264-YELLOWBiRD
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Little House on the Prairie
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Little.House.on.the.Prairie']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Little.House.on.the.Prairie.S07E18.720p.BluRay.x264-YELLOWBiRD', 7, '|18|', 0, 0, 'http://www.newshost.co.za/nzb/e78/Little.House.on.the.Prairie.S07E18.720p.BluRay.x264-YELLOWBiRD.nzb', 1471257784, 128]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Little.House.on.the.Prairie.S07E17.1080p.BluRay.x264-YELLOWBiRD
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Little House on the Prairie
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Little.House.on.the.Prairie']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Little.House.on.the.Prairie.S07E17.1080p.BluRay.x264-YELLOWBiRD', 7, '|17|', 0, 0, 'http://www.newshost.co.za/nzb/8d9/Little.House.on.the.Prairie.S07E17.1080p.BluRay.x264-YELLOWBiRD.nzb', 1471257784, 256]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Little.House.on.the.Prairie.S07E17.720p.BluRay.x264-YELLOWBiRD
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Little House on the Prairie
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Little.House.on.the.Prairie']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Little.House.on.the.Prairie.S07E17.720p.BluRay.x264-YELLOWBiRD', 7, '|17|', 0, 0, 'http://www.newshost.co.za/nzb/761/Little.House.on.the.Prairie.S07E17.720p.BluRay.x264-YELLOWBiRD.nzb', 1471257784, 128]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Flesh.and.Bone.S01E08.1080p.BluRay.x264-ROVERS
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Flesh and Bone
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Flesh.and.Bone']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Flesh and Bone', u'Flesh and Bone']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Flesh and Bone
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Flesh.and.Bone']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Flesh.and.Bone.S01E08.1080p.BluRay.x264-ROVERS', 1, '|8|', 0, 0, 'http://www.newshost.co.za/nzb/df8/Flesh.and.Bone.S01E08.1080p.BluRay.x264-ROVERS.nzb', 1471257784, 256]
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Flesh.and.Bone.S01E07.1080p.BluRay.x264-ROVERS
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Flesh and Bone
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Flesh.and.Bone']
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:04 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Flesh.and.Bone.S01E07.1080p.BluRay.x264-ROVERS', 1, '|7|', 0, 0, 'http://www.newshost.co.za/nzb/e52/Flesh.and.Bone.S01E07.1080p.BluRay.x264-ROVERS.nzb', 1471257784, 256]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Flesh.and.Bone.S01E06.1080p.BluRay.x264-ROVERS
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Flesh and Bone
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Flesh.and.Bone']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Flesh.and.Bone.S01E06.1080p.BluRay.x264-ROVERS', 1, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/1c6/Flesh.and.Bone.S01E06.1080p.BluRay.x264-ROVERS.nzb', 1471257785, 256]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Flesh.and.Bone.S01E05.1080p.BluRay.x264-ROVERS
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Flesh and Bone
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Flesh.and.Bone']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Flesh.and.Bone.S01E05.1080p.BluRay.x264-ROVERS', 1, '|5|', 0, 0, 'http://www.newshost.co.za/nzb/865/Flesh.and.Bone.S01E05.1080p.BluRay.x264-ROVERS.nzb', 1471257785, 256]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Flesh.and.Bone.S01E04.1080p.BluRay.x264-ROVERS
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Flesh and Bone
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Flesh.and.Bone']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Flesh.and.Bone.S01E04.1080p.BluRay.x264-ROVERS', 1, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/76a/Flesh.and.Bone.S01E04.1080p.BluRay.x264-ROVERS.nzb', 1471257785, 256]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Flesh.and.Bone.S01E03.1080p.BluRay.x264-ROVERS
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Flesh and Bone
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Flesh.and.Bone']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Flesh.and.Bone.S01E03.1080p.BluRay.x264-ROVERS', 1, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/eb0/Flesh.and.Bone.S01E03.1080p.BluRay.x264-ROVERS.nzb', 1471257785, 256]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Flesh.and.Bone.S01E02.1080p.BluRay.x264-ROVERS
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Flesh and Bone
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Flesh.and.Bone']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Flesh.and.Bone.S01E02.1080p.BluRay.x264-ROVERS', 1, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/320/Flesh.and.Bone.S01E02.1080p.BluRay.x264-ROVERS.nzb', 1471257785, 256]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Flesh.and.Bone.S01E01.1080p.BluRay.x264-ROVERS
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Flesh and Bone
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Flesh.and.Bone']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Flesh.and.Bone.S01E01.1080p.BluRay.x264-ROVERS', 1, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/814/Flesh.and.Bone.S01E01.1080p.BluRay.x264-ROVERS.nzb', 1471257785, 256]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: A.Season.With.Notre.Dame.Football.S01E01.720p.HDTV.x264-BATV
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of A Season With Notre Dame Football
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'A.Season.With.Notre.Dame.Football']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'A Season With Notre Dame Football', u'A Season With Notre Dame Football']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for A Season With Notre Dame Football
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'A.Season.With.Notre.Dame.Football']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['A.Season.With.Notre.Dame.Football.S01E01.720p.HDTV.x264-BATV', 1, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/702/A.Season.With.Notre.Dame.Football.S01E01.720p.HDTV.x264-BATV.nzb', 1471257785, 4]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Countrywise.S07E08.HDTV.x264-C4TV
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Countrywise
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Countrywise']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Countrywise', u'Countrywise']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Countrywise
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Countrywise']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Countrywise.S07E08.HDTV.x264-C4TV', 7, '|8|', 0, 0, 'http://www.newshost.co.za/nzb/183/Countrywise.S07E08.HDTV.x264-C4TV.nzb', 1471257785, 1]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Countrywise.S07E08.720p.HDTV.x264-C4TV
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Countrywise
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Countrywise']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Countrywise.S07E08.720p.HDTV.x264-C4TV', 7, '|8|', 0, 0, 'http://www.newshost.co.za/nzb/54a/Countrywise.S07E08.720p.HDTV.x264-C4TV.nzb', 1471257785, 4]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Big.Cats.An.Amazing.Animal.Family.S01E01.HDTV.x264-C4TV
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Big Cats An Amazing Animal Family
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Big.Cats.An.Amazing.Animal.Family']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Big Cats An Amazing Animal Family', u'Big Cats An Amazing Animal Family']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Big Cats An Amazing Animal Family
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Big.Cats.An.Amazing.Animal.Family']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Big.Cats.An.Amazing.Animal.Family.S01E01.HDTV.x264-C4TV', 1, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/7d0/Big.Cats.An.Amazing.Animal.Family.S01E01.HDTV.x264-C4TV.nzb', 1471257785, 1]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Big.Cats.An.Amazing.Animal.Family.S01E01.720p.HDTV.x264-C4TV
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Big Cats An Amazing Animal Family
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Big.Cats.An.Amazing.Animal.Family']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Big.Cats.An.Amazing.Animal.Family.S01E01.720p.HDTV.x264-C4TV', 1, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/f6f/Big.Cats.An.Amazing.Animal.Family.S01E01.720p.HDTV.x264-C4TV.nzb', 1471257785, 4]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: A.Season.With.Notre.Dame.Football.S01E01.HDTV.x264-BATV
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of A Season With Notre Dame Football
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'A.Season.With.Notre.Dame.Football']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['A.Season.With.Notre.Dame.Football.S01E01.HDTV.x264-BATV', 1, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/253/A.Season.With.Notre.Dame.Football.S01E01.HDTV.x264-BATV.nzb', 1471257785, 1]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: FIFA.Club.World.Cup.2015.Final.Barcelona.vs.River.Plate.720p.AHDTV.x264-WaLMaRT
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename FIFA.Club.World.Cup.2015.Final.Barcelona.vs.River.Plate.720p.AHDTV.x264-WaLMaRT into a valid episode
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: FIFA.Club.World.Cup.2015.Final.Barcelona.vs.River.Plate.720p.AHDTV.x264-WaLMaRT
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Dreamworks.Dragons.S03E13.720p.WEBRip.X264-DEFLATE
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Dreamworks Dragons
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Dreamworks.Dragons']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Dreamworks Dragons', u'Dreamworks Dragons']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Dreamworks Dragons
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Dreamworks.Dragons']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Dreamworks.Dragons.S03E13.720p.WEBRip.X264-DEFLATE', 3, '|13|', 0, 0, 'http://www.newshost.co.za/nzb/ca8/Dreamworks.Dragons.S03E13.720p.WEBRip.X264-DEFLATE.nzb', 1471257785, 32]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Dreamworks.Dragons.S03E12.720p.WEBRip.X264-DEFLATE
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Dreamworks Dragons
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Dreamworks.Dragons']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Dreamworks.Dragons.S03E12.720p.WEBRip.X264-DEFLATE', 3, '|12|', 0, 0, 'http://www.newshost.co.za/nzb/9e1/Dreamworks.Dragons.S03E12.720p.WEBRip.X264-DEFLATE.nzb', 1471257785, 32]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Dreamworks.Dragons.S03E11.720p.WEBRip.X264-DEFLATE
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Dreamworks Dragons
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Dreamworks.Dragons']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Dreamworks.Dragons.S03E11.720p.WEBRip.X264-DEFLATE', 3, '|11|', 0, 0, 'http://www.newshost.co.za/nzb/101/Dreamworks.Dragons.S03E11.720p.WEBRip.X264-DEFLATE.nzb', 1471257785, 32]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Dreamworks.Dragons.S03E10.720p.WEBRip.X264-DEFLATE
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Dreamworks Dragons
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Dreamworks.Dragons']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Dreamworks.Dragons.S03E10.720p.WEBRip.X264-DEFLATE', 3, '|10|', 0, 0, 'http://www.newshost.co.za/nzb/a3a/Dreamworks.Dragons.S03E10.720p.WEBRip.X264-DEFLATE.nzb', 1471257785, 32]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Dreamworks.Dragons.S03E09.720p.WEBRip.X264-DEFLATE
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Dreamworks Dragons
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Dreamworks.Dragons']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Dreamworks.Dragons.S03E09.720p.WEBRip.X264-DEFLATE', 3, '|9|', 0, 0, 'http://www.newshost.co.za/nzb/139/Dreamworks.Dragons.S03E09.720p.WEBRip.X264-DEFLATE.nzb', 1471257785, 32]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Dreamworks.Dragons.S03E08.720p.WEBRip.X264-DEFLATE
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Dreamworks Dragons
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Dreamworks.Dragons']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Dreamworks.Dragons.S03E08.720p.WEBRip.X264-DEFLATE', 3, '|8|', 0, 0, 'http://www.newshost.co.za/nzb/228/Dreamworks.Dragons.S03E08.720p.WEBRip.X264-DEFLATE.nzb', 1471257785, 32]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Dreamworks.Dragons.S03E07.720p.WEBRip.X264-DEFLATE
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Dreamworks Dragons
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Dreamworks.Dragons']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Dreamworks.Dragons.S03E07.720p.WEBRip.X264-DEFLATE', 3, '|7|', 0, 0, 'http://www.newshost.co.za/nzb/2ea/Dreamworks.Dragons.S03E07.720p.WEBRip.X264-DEFLATE.nzb', 1471257785, 32]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Dreamworks.Dragons.S03E06.720p.WEBRip.X264-DEFLATE
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Dreamworks Dragons
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Dreamworks.Dragons']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Dreamworks.Dragons.S03E06.720p.WEBRip.X264-DEFLATE', 3, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/23b/Dreamworks.Dragons.S03E06.720p.WEBRip.X264-DEFLATE.nzb', 1471257785, 32]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Directors.Chair.S01E10.Sylvester.Stallone.HDTV.x264-BATV
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Directors Chair
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Directors.Chair']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'The Directors Chair', u'The Directors Chair']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for The Directors Chair
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'The.Directors.Chair']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Directors.Chair.S01E10.Sylvester.Stallone.HDTV.x264-BATV', 1, '|10|', 0, 0, 'http://www.newshost.co.za/nzb/fee/The.Directors.Chair.S01E10.Sylvester.Stallone.HDTV.x264-BATV.nzb', 1471257785, 1]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Directors.Chair.S01E10.Sylvester.Stallone.720p.HDTV.x264-BATV
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Directors Chair
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Directors.Chair']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Directors.Chair.S01E10.Sylvester.Stallone.720p.HDTV.x264-BATV', 1, '|10|', 0, 0, 'http://www.newshost.co.za/nzb/445/The.Directors.Chair.S01E10.Sylvester.Stallone.720p.HDTV.x264-BATV.nzb', 1471257785, 4]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Dreamworks.Dragons.S03E05.720p.WEBRip.X264-DEFLATE
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Dreamworks Dragons
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Dreamworks.Dragons']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Dreamworks.Dragons.S03E05.720p.WEBRip.X264-DEFLATE', 3, '|5|', 0, 0, 'http://www.newshost.co.za/nzb/a6d/Dreamworks.Dragons.S03E05.720p.WEBRip.X264-DEFLATE.nzb', 1471257785, 32]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Dreamworks.Dragons.S03E04.720p.WEBRip.X264-DEFLATE
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Dreamworks Dragons
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Dreamworks.Dragons']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Dreamworks.Dragons.S03E04.720p.WEBRip.X264-DEFLATE', 3, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/fa4/Dreamworks.Dragons.S03E04.720p.WEBRip.X264-DEFLATE.nzb', 1471257785, 32]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Dreamworks.Dragons.S03E03.720p.WEBRip.X264-DEFLATE
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Dreamworks Dragons
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Dreamworks.Dragons']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Dreamworks.Dragons.S03E03.720p.WEBRip.X264-DEFLATE', 3, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/d77/Dreamworks.Dragons.S03E03.720p.WEBRip.X264-DEFLATE.nzb', 1471257785, 32]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Dreamworks.Dragons.S03E02.720p.WEBRip.X264-DEFLATE
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Dreamworks Dragons
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Dreamworks.Dragons']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Dreamworks.Dragons.S03E02.720p.WEBRip.X264-DEFLATE', 3, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/2ad/Dreamworks.Dragons.S03E02.720p.WEBRip.X264-DEFLATE.nzb', 1471257785, 32]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Mobile.Suit.Gundam.Iron.Blooded.Orphans.S01E12.720p.WEBRip.x264-ANiURL
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Mobile Suit Gundam Iron Blooded Orphans
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Mobile.Suit.Gundam.Iron.Blooded.Orphans']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Mobile Suit Gundam Iron Blooded Orphans', u'Mobile Suit Gundam Iron Blooded Orphans']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Mobile Suit Gundam Iron Blooded Orphans
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Mobile.Suit.Gundam.Iron.Blooded.Orphans']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Mobile.Suit.Gundam.Iron.Blooded.Orphans.S01E12.720p.WEBRip.x264-ANiURL', 1, '|12|', 0, 0, 'http://www.newshost.co.za/nzb/e8c/Mobile.Suit.Gundam.Iron.Blooded.Orphans.S01E12.720p.WEBRip.x264-ANiURL.nzb', 1471257785, 32]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Dreamworks.Dragons.S03E01.720p.WEBRip.X264-DEFLATE
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Dreamworks Dragons
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Dreamworks.Dragons']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Dreamworks.Dragons.S03E01.720p.WEBRip.X264-DEFLATE', 3, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/61b/Dreamworks.Dragons.S03E01.720p.WEBRip.X264-DEFLATE.nzb', 1471257785, 32]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Brave.Beats.S01E11.720p.WEBRip.x264-ANiURL
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Brave Beats
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Brave.Beats']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Brave Beats', u'Brave Beats']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Brave Beats
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Brave.Beats']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Brave.Beats.S01E11.720p.WEBRip.x264-ANiURL', 1, '|11|', 0, 0, 'http://www.newshost.co.za/nzb/ba3/Brave.Beats.S01E11.720p.WEBRip.x264-ANiURL.nzb', 1471257785, 32]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Brave.Beats.S01E11.1080p.WEBRip.x264-ANiURL
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Brave Beats
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Brave.Beats']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Brave.Beats.S01E11.1080p.WEBRip.x264-ANiURL', 1, '|11|', 0, 0, 'http://www.newshost.co.za/nzb/e31/Brave.Beats.S01E11.1080p.WEBRip.x264-ANiURL.nzb', 1471257785, 64]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Who-Live.in.Hyde.Park.2015.720p.HDTV.x264-BATV
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename The.Who-Live.in.Hyde.Park.2015.720p.HDTV.x264-BATV into a valid episode
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: The.Who-Live.in.Hyde.Park.2015.720p.HDTV.x264-BATV
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Sooty.2011.S02E17.720p.HDTV.x264-DEADPOOL
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Sooty 2011
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Sooty.2011']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Sooty 2011', u'Sooty 2011']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match original name but trying to manually strip and specify show year
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE (show_name LIKE ? OR tvr_name LIKE ?) AND startyear = ? with args [u'Sooty%', u'Sooty%', u'2011']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Sooty 2011
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Sooty.2011']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Sooty.2011.S02E17.720p.HDTV.x264-DEADPOOL', 2, '|17|', 0, 0, 'http://www.newshost.co.za/nzb/fec/Sooty.2011.S02E17.720p.HDTV.x264-DEADPOOL.nzb', 1471257785, 4]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Tattoo.Fixers.S02E01.720p.HDTV.x264-DEADPOOL
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Tattoo Fixers
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Tattoo.Fixers']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Tattoo Fixers', u'Tattoo Fixers']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Tattoo Fixers
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Tattoo.Fixers']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Tattoo.Fixers.S02E01.720p.HDTV.x264-DEADPOOL', 2, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/d09/Tattoo.Fixers.S02E01.720p.HDTV.x264-DEADPOOL.nzb', 1471257785, 4]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Who-Live.in.Hyde.Park.2015.HDTV.x264-BATV
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename The.Who-Live.in.Hyde.Park.2015.HDTV.x264-BATV into a valid episode
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: The.Who-Live.in.Hyde.Park.2015.HDTV.x264-BATV
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Andrew.Dice.Clay-The.Blue.Show.2015.720p.HDTV.x264-BATV
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename Andrew.Dice.Clay-The.Blue.Show.2015.720p.HDTV.x264-BATV into a valid episode
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: Andrew.Dice.Clay-The.Blue.Show.2015.720p.HDTV.x264-BATV
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Andrew.Dice.Clay-The.Blue.Show.2015.HDTV.x264-BATV
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename Andrew.Dice.Clay-The.Blue.Show.2015.HDTV.x264-BATV into a valid episode
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: Andrew.Dice.Clay-The.Blue.Show.2015.HDTV.x264-BATV
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Jenny.McCarthys-Dirty.Sexy.Funny.2014.720p.HDTV.x264-BATV
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename Jenny.McCarthys-Dirty.Sexy.Funny.2014.720p.HDTV.x264-BATV into a valid episode
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: Jenny.McCarthys-Dirty.Sexy.Funny.2014.720p.HDTV.x264-BATV
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Christmast.Show.2015.DUTCH.720p.HDTV.x264-iFH
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename The.Christmast.Show.2015.DUTCH.720p.HDTV.x264-iFH into a valid episode
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: The.Christmast.Show.2015.DUTCH.720p.HDTV.x264-iFH
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Jenny.McCarthys-Dirty.Sexy.Funny.2014.HDTV.x264-BATV
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename Jenny.McCarthys-Dirty.Sexy.Funny.2014.HDTV.x264-BATV into a valid episode
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: Jenny.McCarthys-Dirty.Sexy.Funny.2014.HDTV.x264-BATV
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Nostradamus-21st.Century.Prophecies.Revealed.720p.HDTV.x264-DHD
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename Nostradamus-21st.Century.Prophecies.Revealed.720p.HDTV.x264-DHD into a valid episode
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: Nostradamus-21st.Century.Prophecies.Revealed.720p.HDTV.x264-DHD
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Margaret.Cho-psyCHO.2015.720p.HDTV.x264-BATV
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename Margaret.Cho-psyCHO.2015.720p.HDTV.x264-BATV into a valid episode
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: Margaret.Cho-psyCHO.2015.720p.HDTV.x264-BATV
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Margaret.Cho-psyCHO.2015.HDTV.x264-BATV
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename Margaret.Cho-psyCHO.2015.HDTV.x264-BATV into a valid episode
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: Margaret.Cho-psyCHO.2015.HDTV.x264-BATV
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: HBO.Documentaries.Heroin-Cape.Cod.USA.720p.HDTV.x264-BATV
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename HBO.Documentaries.Heroin-Cape.Cod.USA.720p.HDTV.x264-BATV into a valid episode
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: HBO.Documentaries.Heroin-Cape.Cod.USA.720p.HDTV.x264-BATV
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Little.House.on.the.Prairie.S07E16.1080p.BluRay.x264-YELLOWBiRD
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Little House on the Prairie
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Little.House.on.the.Prairie']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Little.House.on.the.Prairie.S07E16.1080p.BluRay.x264-YELLOWBiRD', 7, '|16|', 0, 0, 'http://www.newshost.co.za/nzb/350/Little.House.on.the.Prairie.S07E16.1080p.BluRay.x264-YELLOWBiRD.nzb', 1471257785, 256]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Little.House.on.the.Prairie.S07E16.720p.BluRay.x264-YELLOWBiRD
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Little House on the Prairie
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Little.House.on.the.Prairie']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Little.House.on.the.Prairie.S07E16.720p.BluRay.x264-YELLOWBiRD', 7, '|16|', 0, 0, 'http://www.newshost.co.za/nzb/ab7/Little.House.on.the.Prairie.S07E16.720p.BluRay.x264-YELLOWBiRD.nzb', 1471257785, 128]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Little.House.on.the.Prairie.S07E15.1080p.BluRay.x264-YELLOWBiRD
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Little House on the Prairie
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Little.House.on.the.Prairie']
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Little.House.on.the.Prairie.S07E15.1080p.BluRay.x264-YELLOWBiRD', 7, '|15|', 0, 0, 'http://www.newshost.co.za/nzb/8b0/Little.House.on.the.Prairie.S07E15.1080p.BluRay.x264-YELLOWBiRD.nzb', 1471257785, 256]
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Little.House.on.the.Prairie.S07E15.720p.BluRay.x264-YELLOWBiRD
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Little House on the Prairie
2016-08-15 10:43:05 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Little.House.on.the.Prairie']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Little.House.on.the.Prairie.S07E15.720p.BluRay.x264-YELLOWBiRD', 7, '|15|', 0, 0, 'http://www.newshost.co.za/nzb/810/Little.House.on.the.Prairie.S07E15.720p.BluRay.x264-YELLOWBiRD.nzb', 1471257786, 128]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Courage.the.Cowardly.Dog.S04E01.FiNAL.RERiP.DVDRip.x264-DEiMOS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Courage the Cowardly Dog
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Courage.the.Cowardly.Dog']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Courage the Cowardly Dog', u'Courage the Cowardly Dog']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Courage the Cowardly Dog
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Courage.the.Cowardly.Dog']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Courage.the.Cowardly.Dog.S04E01.FiNAL.RERiP.DVDRip.x264-DEiMOS', 4, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/a4b/Courage.the.Cowardly.Dog.S04E01.FiNAL.RERiP.DVDRip.x264-DEiMOS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Powerpuff.Girls.S01E08.Paste.Makes.Waste.Ice.Sore.iNTERNAL.DVDRip.x264-MARS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Powerpuff Girls
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Powerpuff.Girls']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'The Powerpuff Girls', u'The Powerpuff Girls']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for The Powerpuff Girls
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'The.Powerpuff.Girls']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Powerpuff.Girls.S01E08.Paste.Makes.Waste.Ice.Sore.iNTERNAL.DVDRip.x264-MARS', 1, '|8|', 0, 0, 'http://www.newshost.co.za/nzb/898/The.Powerpuff.Girls.S01E08.Paste.Makes.Waste.Ice.Sore.iNTERNAL.DVDRip.x264-MARS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.Extra.S05E14.The.Ancient.Ram.Inn.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted Extra
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted.Extra']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Most Haunted Extra', u'Most Haunted Extra']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Most Haunted Extra
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Most.Haunted.Extra']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.Extra.S05E14.The.Ancient.Ram.Inn.INTERNAL.DVDRip.x264-GHOULS', 5, '|14|', 0, 0, 'http://www.newshost.co.za/nzb/842/Most.Haunted.Extra.S05E14.The.Ancient.Ram.Inn.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.Extra.S05E13.Annesley.Hall.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted Extra
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted.Extra']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.Extra.S05E13.Annesley.Hall.INTERNAL.DVDRip.x264-GHOULS', 5, '|13|', 0, 0, 'http://www.newshost.co.za/nzb/a22/Most.Haunted.Extra.S05E13.Annesley.Hall.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.S05E11.Pleasley.Vale.Mills.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Most Haunted', u'Most Haunted']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Most Haunted
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Most.Haunted']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.S05E11.Pleasley.Vale.Mills.INTERNAL.DVDRip.x264-GHOULS', 5, '|11|', 0, 0, 'http://www.newshost.co.za/nzb/486/Most.Haunted.S05E11.Pleasley.Vale.Mills.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.S05E14.The.Ancient.Ram.Inn.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.S05E14.The.Ancient.Ram.Inn.INTERNAL.DVDRip.x264-GHOULS', 5, '|14|', 0, 0, 'http://www.newshost.co.za/nzb/7e8/Most.Haunted.S05E14.The.Ancient.Ram.Inn.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.S05E13.Annesley.Hall.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.S05E13.Annesley.Hall.INTERNAL.DVDRip.x264-GHOULS', 5, '|13|', 0, 0, 'http://www.newshost.co.za/nzb/7d4/Most.Haunted.S05E13.Annesley.Hall.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.S05E12.Bodelwyddan.Castle.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.S05E12.Bodelwyddan.Castle.INTERNAL.DVDRip.x264-GHOULS', 5, '|12|', 0, 0, 'http://www.newshost.co.za/nzb/93a/Most.Haunted.S05E12.Bodelwyddan.Castle.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.Extra.S05E12.Bodelwyddan.Castle.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted Extra
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted.Extra']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.Extra.S05E12.Bodelwyddan.Castle.INTERNAL.DVDRip.x264-GHOULS', 5, '|12|', 0, 0, 'http://www.newshost.co.za/nzb/591/Most.Haunted.Extra.S05E12.Bodelwyddan.Castle.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.Extra.S05E10.Oldham.Coliseum.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted Extra
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted.Extra']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.Extra.S05E10.Oldham.Coliseum.INTERNAL.DVDRip.x264-GHOULS', 5, '|10|', 0, 0, 'http://www.newshost.co.za/nzb/3d5/Most.Haunted.Extra.S05E10.Oldham.Coliseum.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.Extra.S05E09.Salmesbury.Hall.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted Extra
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted.Extra']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.Extra.S05E09.Salmesbury.Hall.INTERNAL.DVDRip.x264-GHOULS', 5, '|9|', 0, 0, 'http://www.newshost.co.za/nzb/d5e/Most.Haunted.Extra.S05E09.Salmesbury.Hall.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.Extra.S05E08.Ordsall.Hall.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted Extra
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted.Extra']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.Extra.S05E08.Ordsall.Hall.INTERNAL.DVDRip.x264-GHOULS', 5, '|8|', 0, 0, 'http://www.newshost.co.za/nzb/b25/Most.Haunted.Extra.S05E08.Ordsall.Hall.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.Extra.S05E07.The.Chough.Hotel.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted Extra
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted.Extra']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.Extra.S05E07.The.Chough.Hotel.INTERNAL.DVDRip.x264-GHOULS', 5, '|7|', 0, 0, 'http://www.newshost.co.za/nzb/8a1/Most.Haunted.Extra.S05E07.The.Chough.Hotel.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.Extra.S05E06.Old.Hall.Hotel.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted Extra
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted.Extra']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.Extra.S05E06.Old.Hall.Hotel.INTERNAL.DVDRip.x264-GHOULS', 5, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/53d/Most.Haunted.Extra.S05E06.Old.Hall.Hotel.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.Extra.S05E05.Black.Swan.Hotel.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted Extra
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted.Extra']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.Extra.S05E05.Black.Swan.Hotel.INTERNAL.DVDRip.x264-GHOULS', 5, '|5|', 0, 0, 'http://www.newshost.co.za/nzb/98a/Most.Haunted.Extra.S05E05.Black.Swan.Hotel.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Tattoo.Tales.S01E08.DVDRip.x264-CBFD
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Tattoo Tales
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Tattoo.Tales']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Tattoo Tales', u'Tattoo Tales']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Tattoo Tales
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Tattoo.Tales']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Tattoo.Tales.S01E08.DVDRip.x264-CBFD', 1, '|8|', 0, 0, 'http://www.newshost.co.za/nzb/dc8/Tattoo.Tales.S01E08.DVDRip.x264-CBFD.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Tattoo.Tales.S01E07.DVDRip.x264-CBFD
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Tattoo Tales
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Tattoo.Tales']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Tattoo.Tales.S01E07.DVDRip.x264-CBFD', 1, '|7|', 0, 0, 'http://www.newshost.co.za/nzb/ba5/Tattoo.Tales.S01E07.DVDRip.x264-CBFD.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Tattoo.Tales.S01E06.DVDRip.x264-CBFD
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Tattoo Tales
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Tattoo.Tales']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Tattoo.Tales.S01E06.DVDRip.x264-CBFD', 1, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/528/Tattoo.Tales.S01E06.DVDRip.x264-CBFD.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Tattoo.Tales.S01E05.DVDRip.x264-CBFD
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Tattoo Tales
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Tattoo.Tales']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Tattoo.Tales.S01E05.DVDRip.x264-CBFD', 1, '|5|', 0, 0, 'http://www.newshost.co.za/nzb/6c9/Tattoo.Tales.S01E05.DVDRip.x264-CBFD.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Tattoo.Tales.S01E04.DVDRip.x264-CBFD
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Tattoo Tales
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Tattoo.Tales']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Tattoo.Tales.S01E04.DVDRip.x264-CBFD', 1, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/2b8/Tattoo.Tales.S01E04.DVDRip.x264-CBFD.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Tattoo.Tales.S01E03.DVDRip.x264-CBFD
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Tattoo Tales
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Tattoo.Tales']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Tattoo.Tales.S01E03.DVDRip.x264-CBFD', 1, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/9e6/Tattoo.Tales.S01E03.DVDRip.x264-CBFD.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Tattoo.Tales.S01E02.DVDRip.x264-CBFD
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Tattoo Tales
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Tattoo.Tales']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Tattoo.Tales.S01E02.DVDRip.x264-CBFD', 1, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/d04/Tattoo.Tales.S01E02.DVDRip.x264-CBFD.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Tattoo.Tales.S01E01.DVDRip.x264-CBFD
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Tattoo Tales
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Tattoo.Tales']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Tattoo.Tales.S01E01.DVDRip.x264-CBFD', 1, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/879/Tattoo.Tales.S01E01.DVDRip.x264-CBFD.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.Extra.S05E11.Pleasley.Vale.Mills.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted Extra
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted.Extra']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.Extra.S05E11.Pleasley.Vale.Mills.INTERNAL.DVDRip.x264-GHOULS', 5, '|11|', 0, 0, 'http://www.newshost.co.za/nzb/6a9/Most.Haunted.Extra.S05E11.Pleasley.Vale.Mills.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.S05E10.Oldham.Coliseum.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.S05E10.Oldham.Coliseum.INTERNAL.DVDRip.x264-GHOULS', 5, '|10|', 0, 0, 'http://www.newshost.co.za/nzb/13f/Most.Haunted.S05E10.Oldham.Coliseum.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.S05E09.Salmesbury.Hall.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.S05E09.Salmesbury.Hall.INTERNAL.DVDRip.x264-GHOULS', 5, '|9|', 0, 0, 'http://www.newshost.co.za/nzb/470/Most.Haunted.S05E09.Salmesbury.Hall.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.S05E08.Ordsall.Hall.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.S05E08.Ordsall.Hall.INTERNAL.DVDRip.x264-GHOULS', 5, '|8|', 0, 0, 'http://www.newshost.co.za/nzb/301/Most.Haunted.S05E08.Ordsall.Hall.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.S05E07.The.Chough.Hotel.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.S05E07.The.Chough.Hotel.INTERNAL.DVDRip.x264-GHOULS', 5, '|7|', 0, 0, 'http://www.newshost.co.za/nzb/eb9/Most.Haunted.S05E07.The.Chough.Hotel.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.S05E06.Old.Hall.Hotel.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.S05E06.Old.Hall.Hotel.INTERNAL.DVDRip.x264-GHOULS', 5, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/c95/Most.Haunted.S05E06.Old.Hall.Hotel.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.S05E05.Black.Swan.Hotel.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.S05E05.Black.Swan.Hotel.INTERNAL.DVDRip.x264-GHOULS', 5, '|5|', 0, 0, 'http://www.newshost.co.za/nzb/cfc/Most.Haunted.S05E05.Black.Swan.Hotel.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.S05E04.Kasteel.Ammersoyen.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.S05E04.Kasteel.Ammersoyen.INTERNAL.DVDRip.x264-GHOULS', 5, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/159/Most.Haunted.S05E04.Kasteel.Ammersoyen.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.S05E03.Kasteel.Doorwerth.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.S05E03.Kasteel.Doorwerth.INTERNAL.DVDRip.x264-GHOULS', 5, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/85c/Most.Haunted.S05E03.Kasteel.Doorwerth.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.S05E02.Castle.Leslie.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.S05E02.Castle.Leslie.INTERNAL.DVDRip.x264-GHOULS', 5, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/a05/Most.Haunted.S05E02.Castle.Leslie.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.S05E01.Kinnitty.Castle.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.S05E01.Kinnitty.Castle.INTERNAL.DVDRip.x264-GHOULS', 5, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/43f/Most.Haunted.S05E01.Kinnitty.Castle.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.Extra.S05E03.Kasteel.Doorwerth.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted Extra
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted.Extra']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.Extra.S05E03.Kasteel.Doorwerth.INTERNAL.DVDRip.x264-GHOULS', 5, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/c82/Most.Haunted.Extra.S05E03.Kasteel.Doorwerth.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.Extra.S05E01.Kinnitty.Castle.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted Extra
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted.Extra']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.Extra.S05E01.Kinnitty.Castle.INTERNAL.DVDRip.x264-GHOULS', 5, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/4f8/Most.Haunted.Extra.S05E01.Kinnitty.Castle.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.Extra.S05E04.Kasteel.Ammersoyen.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted Extra
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted.Extra']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.Extra.S05E04.Kasteel.Ammersoyen.INTERNAL.DVDRip.x264-GHOULS', 5, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/6bb/Most.Haunted.Extra.S05E04.Kasteel.Ammersoyen.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Most.Haunted.Extra.S05E02.Castle.Leslie.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Most Haunted Extra
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Most.Haunted.Extra']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Most.Haunted.Extra.S05E02.Castle.Leslie.INTERNAL.DVDRip.x264-GHOULS', 5, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/e1c/Most.Haunted.Extra.S05E02.Castle.Leslie.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Queens.Palaces.S01E03.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Queens Palaces
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Queens.Palaces']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'The Queens Palaces', u'The Queens Palaces']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for The Queens Palaces
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'The.Queens.Palaces']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Queens.Palaces.S01E03.DVDRip.x264-GHOULS', 1, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/c5b/The.Queens.Palaces.S01E03.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Queens.Palaces.S01E02.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Queens Palaces
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Queens.Palaces']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Queens.Palaces.S01E02.DVDRip.x264-GHOULS', 1, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/9fe/The.Queens.Palaces.S01E02.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Queens.Palaces.S01E01.DVDRip.x264-GHOULS
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Queens Palaces
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Queens.Palaces']
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Queens.Palaces.S01E01.DVDRip.x264-GHOULS', 1, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/99f/The.Queens.Palaces.S01E01.DVDRip.x264-GHOULS.nzb', 1471257786, 2]
2016-08-15 10:43:06 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Black.Adder.S03E03.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Black Adder
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Black.Adder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'The Black Adder', u'The Black Adder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for The Black Adder
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'The.Black.Adder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Black.Adder.S03E03.INTERNAL.DVDRip.x264-GHOULS', 3, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/98d/The.Black.Adder.S03E03.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Black.Adder.S01E06.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Black Adder
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Black.Adder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Black.Adder.S01E06.INTERNAL.DVDRip.x264-GHOULS', 1, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/43c/The.Black.Adder.S01E06.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Black.Adder.S01E05.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Black Adder
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Black.Adder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Black.Adder.S01E05.INTERNAL.DVDRip.x264-GHOULS', 1, '|5|', 0, 0, 'http://www.newshost.co.za/nzb/a74/The.Black.Adder.S01E05.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Black.Adder.S01E04.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Black Adder
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Black.Adder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Black.Adder.S01E04.INTERNAL.DVDRip.x264-GHOULS', 1, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/6ab/The.Black.Adder.S01E04.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Black.Adder.S04E06.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Black Adder
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Black.Adder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Black.Adder.S04E06.INTERNAL.DVDRip.x264-GHOULS', 4, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/1d3/The.Black.Adder.S04E06.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Black.Adder.S04E05.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Black Adder
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Black.Adder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Black.Adder.S04E05.INTERNAL.DVDRip.x264-GHOULS', 4, '|5|', 0, 0, 'http://www.newshost.co.za/nzb/950/The.Black.Adder.S04E05.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Black.Adder.S04E04.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Black Adder
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Black.Adder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Black.Adder.S04E04.INTERNAL.DVDRip.x264-GHOULS', 4, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/41e/The.Black.Adder.S04E04.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Black.Adder.S04E03.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Black Adder
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Black.Adder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Black.Adder.S04E03.INTERNAL.DVDRip.x264-GHOULS', 4, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/8b5/The.Black.Adder.S04E03.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Black.Adder.S04E02.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Black Adder
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Black.Adder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Black.Adder.S04E02.INTERNAL.DVDRip.x264-GHOULS', 4, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/4fa/The.Black.Adder.S04E02.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Black.Adder.S04E01.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Black Adder
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Black.Adder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Black.Adder.S04E01.INTERNAL.DVDRip.x264-GHOULS', 4, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/4d6/The.Black.Adder.S04E01.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Black.Adder.S01E03.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Black Adder
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Black.Adder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Black.Adder.S01E03.INTERNAL.DVDRip.x264-GHOULS', 1, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/697/The.Black.Adder.S01E03.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Black.Adder.S01E02.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Black Adder
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Black.Adder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Black.Adder.S01E02.INTERNAL.DVDRip.x264-GHOULS', 1, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/7a3/The.Black.Adder.S01E02.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Black.Adder.S01E01.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Black Adder
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Black.Adder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Black.Adder.S01E01.INTERNAL.DVDRip.x264-GHOULS', 1, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/e9a/The.Black.Adder.S01E01.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Black.Adder.S03E06.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Black Adder
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Black.Adder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Black.Adder.S03E06.INTERNAL.DVDRip.x264-GHOULS', 3, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/4bf/The.Black.Adder.S03E06.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Black.Adder.S03E05.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Black Adder
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Black.Adder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Black.Adder.S03E05.INTERNAL.DVDRip.x264-GHOULS', 3, '|5|', 0, 0, 'http://www.newshost.co.za/nzb/658/The.Black.Adder.S03E05.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Black.Adder.S03E04.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Black Adder
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Black.Adder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Black.Adder.S03E04.INTERNAL.DVDRip.x264-GHOULS', 3, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/bfd/The.Black.Adder.S03E04.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Black.Adder.S03E02.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Black Adder
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Black.Adder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Black.Adder.S03E02.INTERNAL.DVDRip.x264-GHOULS', 3, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/75f/The.Black.Adder.S03E02.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Black.Adder.S03E01.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Black Adder
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Black.Adder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Black.Adder.S03E01.INTERNAL.DVDRip.x264-GHOULS', 3, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/975/The.Black.Adder.S03E01.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Black.Adder.S02E06.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Black Adder
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Black.Adder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Black.Adder.S02E06.INTERNAL.DVDRip.x264-GHOULS', 2, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/eb7/The.Black.Adder.S02E06.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Black.Adder.S02E05.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Black Adder
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Black.Adder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Black.Adder.S02E05.INTERNAL.DVDRip.x264-GHOULS', 2, '|5|', 0, 0, 'http://www.newshost.co.za/nzb/353/The.Black.Adder.S02E05.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Black.Adder.S02E04.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Black Adder
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Black.Adder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Black.Adder.S02E04.INTERNAL.DVDRip.x264-GHOULS', 2, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/4dd/The.Black.Adder.S02E04.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Black.Adder.S02E03.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Black Adder
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Black.Adder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Black.Adder.S02E03.INTERNAL.DVDRip.x264-GHOULS', 2, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/149/The.Black.Adder.S02E03.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Black.Adder.S02E02.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Black Adder
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Black.Adder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Black.Adder.S02E02.INTERNAL.DVDRip.x264-GHOULS', 2, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/e02/The.Black.Adder.S02E02.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Black.Adder.S02E01.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Black Adder
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Black.Adder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Black.Adder.S02E01.INTERNAL.DVDRip.x264-GHOULS', 2, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/e7e/The.Black.Adder.S02E01.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Made.In.Chelsea.S06E12.DVDRip.x264-DEUTERiUM
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Made In Chelsea
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Made.In.Chelsea']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Made.In.Chelsea.S06E12.DVDRip.x264-DEUTERiUM', 6, '|12|', 0, 0, 'http://www.newshost.co.za/nzb/19d/Made.In.Chelsea.S06E12.DVDRip.x264-DEUTERiUM.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Made.In.Chelsea.S06E11.DVDRip.x264-DEUTERiUM
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Made In Chelsea
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Made.In.Chelsea']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Made.In.Chelsea.S06E11.DVDRip.x264-DEUTERiUM', 6, '|11|', 0, 0, 'http://www.newshost.co.za/nzb/e1d/Made.In.Chelsea.S06E11.DVDRip.x264-DEUTERiUM.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Made.In.Chelsea.S06E10.DVDRip.x264-DEUTERiUM
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Made In Chelsea
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Made.In.Chelsea']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Made.In.Chelsea.S06E10.DVDRip.x264-DEUTERiUM', 6, '|10|', 0, 0, 'http://www.newshost.co.za/nzb/ef2/Made.In.Chelsea.S06E10.DVDRip.x264-DEUTERiUM.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Made.In.Chelsea.S06E09.DVDRip.x264-DEUTERiUM
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Made In Chelsea
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Made.In.Chelsea']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Made.In.Chelsea.S06E09.DVDRip.x264-DEUTERiUM', 6, '|9|', 0, 0, 'http://www.newshost.co.za/nzb/bbc/Made.In.Chelsea.S06E09.DVDRip.x264-DEUTERiUM.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Made.In.Chelsea.S06E08.DVDRip.x264-DEUTERiUM
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Made In Chelsea
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Made.In.Chelsea']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Made.In.Chelsea.S06E08.DVDRip.x264-DEUTERiUM', 6, '|8|', 0, 0, 'http://www.newshost.co.za/nzb/9de/Made.In.Chelsea.S06E08.DVDRip.x264-DEUTERiUM.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Made.In.Chelsea.S06E07.DVDRip.x264-DEUTERiUM
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Made In Chelsea
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Made.In.Chelsea']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Made.In.Chelsea.S06E07.DVDRip.x264-DEUTERiUM', 6, '|7|', 0, 0, 'http://www.newshost.co.za/nzb/bd0/Made.In.Chelsea.S06E07.DVDRip.x264-DEUTERiUM.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Made.In.Chelsea.S06E06.DVDRip.x264-DEUTERiUM
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Made In Chelsea
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Made.In.Chelsea']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Made.In.Chelsea.S06E06.DVDRip.x264-DEUTERiUM', 6, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/f79/Made.In.Chelsea.S06E06.DVDRip.x264-DEUTERiUM.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Made.In.Chelsea.S06E05.DVDRip.x264-DEUTERiUM
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Made In Chelsea
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Made.In.Chelsea']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Made.In.Chelsea.S06E05.DVDRip.x264-DEUTERiUM', 6, '|5|', 0, 0, 'http://www.newshost.co.za/nzb/73c/Made.In.Chelsea.S06E05.DVDRip.x264-DEUTERiUM.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Made.In.Chelsea.S06E04.DVDRip.x264-DEUTERiUM
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Made In Chelsea
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Made.In.Chelsea']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Made.In.Chelsea.S06E04.DVDRip.x264-DEUTERiUM', 6, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/b70/Made.In.Chelsea.S06E04.DVDRip.x264-DEUTERiUM.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Made.In.Chelsea.S06E03.DVDRip.x264-DEUTERiUM
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Made In Chelsea
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Made.In.Chelsea']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Made.In.Chelsea.S06E03.DVDRip.x264-DEUTERiUM', 6, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/7ac/Made.In.Chelsea.S06E03.DVDRip.x264-DEUTERiUM.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Made.In.Chelsea.S06E02.DVDRip.x264-DEUTERiUM
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Made In Chelsea
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Made.In.Chelsea']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Made.In.Chelsea.S06E02.DVDRip.x264-DEUTERiUM', 6, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/500/Made.In.Chelsea.S06E02.DVDRip.x264-DEUTERiUM.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Made.In.Chelsea.S06E01.DVDRip.x264-DEUTERiUM
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Made In Chelsea
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Made.In.Chelsea']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Made.In.Chelsea.S06E01.DVDRip.x264-DEUTERiUM', 6, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/158/Made.In.Chelsea.S06E01.DVDRip.x264-DEUTERiUM.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Johnny.Bravo.S03E52.A.Johnny.Bravo.Christmas.DVDRip.x264-DEiMOS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Johnny Bravo
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Johnny.Bravo']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Johnny Bravo', u'Johnny Bravo']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Johnny Bravo
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Johnny.Bravo']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Johnny.Bravo.S03E52.A.Johnny.Bravo.Christmas.DVDRip.x264-DEiMOS', 3, '|52|', 0, 0, 'http://www.newshost.co.za/nzb/31c/Johnny.Bravo.S03E52.A.Johnny.Bravo.Christmas.DVDRip.x264-DEiMOS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Dexters.Laboratory.S02E103.Dexter.And.Computress.Get.Mandark.DVDRip.x264-DEiMOS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Dexters Laboratory
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Dexters.Laboratory']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Dexters Laboratory', u'Dexters Laboratory']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Dexters Laboratory
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Dexters.Laboratory']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Dexters.Laboratory.S02E103.Dexter.And.Computress.Get.Mandark.DVDRip.x264-DEiMOS', 2, '|103|', 0, 0, 'http://www.newshost.co.za/nzb/625/Dexters.Laboratory.S02E103.Dexter.And.Computress.Get.Mandark.DVDRip.x264-DEiMOS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Fosters.Home.for.Imaginary.Friends.S03E10.A.Lost.Claus.DVDRip.x264-DEiMOS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Fosters Home for Imaginary Friends
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Fosters.Home.for.Imaginary.Friends']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Fosters Home for Imaginary Friends', u'Fosters Home for Imaginary Friends']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Fosters Home for Imaginary Friends
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Fosters.Home.for.Imaginary.Friends']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Fosters.Home.for.Imaginary.Friends.S03E10.A.Lost.Claus.DVDRip.x264-DEiMOS', 3, '|10|', 0, 0, 'http://www.newshost.co.za/nzb/3b9/Fosters.Home.for.Imaginary.Friends.S03E10.A.Lost.Claus.DVDRip.x264-DEiMOS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Chowder.S02E07.Hey.Hey.Its.Knishmas.DVDRip.x264-DEiMOS
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Chowder
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Chowder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Chowder', u'Chowder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Chowder
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Chowder']
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Chowder.S02E07.Hey.Hey.Its.Knishmas.DVDRip.x264-DEiMOS', 2, '|7|', 0, 0, 'http://www.newshost.co.za/nzb/3df/Chowder.S02E07.Hey.Hey.Its.Knishmas.DVDRip.x264-DEiMOS.nzb', 1471257787, 2]
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Yonderland.S02E08.DVDRip.x264-TASTETV
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Yonderland
2016-08-15 10:43:07 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Yonderland']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Yonderland', u'Yonderland']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Yonderland
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Yonderland']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Yonderland.S02E08.DVDRip.x264-TASTETV', 2, '|8|', 0, 0, 'http://www.newshost.co.za/nzb/42a/Yonderland.S02E08.DVDRip.x264-TASTETV.nzb', 1471257788, 2]
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Yonderland.S02E07.DVDRip.x264-TASTETV
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Yonderland
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Yonderland']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Yonderland.S02E07.DVDRip.x264-TASTETV', 2, '|7|', 0, 0, 'http://www.newshost.co.za/nzb/8c5/Yonderland.S02E07.DVDRip.x264-TASTETV.nzb', 1471257788, 2]
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Yonderland.S02E06.DVDRip.x264-TASTETV
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Yonderland
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Yonderland']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Yonderland.S02E06.DVDRip.x264-TASTETV', 2, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/a37/Yonderland.S02E06.DVDRip.x264-TASTETV.nzb', 1471257788, 2]
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Yonderland.S02E05.DVDRip.x264-TASTETV
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Yonderland
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Yonderland']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Yonderland.S02E05.DVDRip.x264-TASTETV', 2, '|5|', 0, 0, 'http://www.newshost.co.za/nzb/548/Yonderland.S02E05.DVDRip.x264-TASTETV.nzb', 1471257788, 2]
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Yonderland.S02E04.DVDRip.x264-TASTETV
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Yonderland
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Yonderland']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Yonderland.S02E04.DVDRip.x264-TASTETV', 2, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/d75/Yonderland.S02E04.DVDRip.x264-TASTETV.nzb', 1471257788, 2]
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Yonderland.S02E03.DVDRip.x264-TASTETV
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Yonderland
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Yonderland']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Yonderland.S02E03.DVDRip.x264-TASTETV', 2, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/717/Yonderland.S02E03.DVDRip.x264-TASTETV.nzb', 1471257788, 2]
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Yonderland.S02E02.DVDRip.x264-TASTETV
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Yonderland
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Yonderland']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Yonderland.S02E02.DVDRip.x264-TASTETV', 2, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/706/Yonderland.S02E02.DVDRip.x264-TASTETV.nzb', 1471257788, 2]
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Yonderland.S02E01.DVDRip.x264-TASTETV
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Yonderland
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Yonderland']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Yonderland.S02E01.DVDRip.x264-TASTETV', 2, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/ae2/Yonderland.S02E01.DVDRip.x264-TASTETV.nzb', 1471257788, 2]
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Hunderby.S02E02.DVDRip.x264-TASTETV
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Hunderby
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Hunderby']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Hunderby', u'Hunderby']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Hunderby
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Hunderby']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Hunderby.S02E02.DVDRip.x264-TASTETV', 2, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/fb3/Hunderby.S02E02.DVDRip.x264-TASTETV.nzb', 1471257788, 2]
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Hunderby.S02E01.DVDRip.x264-TASTETV
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Hunderby
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Hunderby']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Hunderby.S02E01.DVDRip.x264-TASTETV', 2, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/981/Hunderby.S02E01.DVDRip.x264-TASTETV.nzb', 1471257788, 2]
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Paranormal.State.S02E13.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Paranormal State
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Paranormal.State']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Paranormal State', u'Paranormal State']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Paranormal State
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Paranormal.State']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Paranormal.State.S02E13.INTERNAL.DVDRip.x264-GHOULS', 2, '|13|', 0, 0, 'http://www.newshost.co.za/nzb/cbe/Paranormal.State.S02E13.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257788, 2]
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Paranormal.State.S02E07.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Paranormal State
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Paranormal.State']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Paranormal.State.S02E07.INTERNAL.DVDRip.x264-GHOULS', 2, '|7|', 0, 0, 'http://www.newshost.co.za/nzb/62c/Paranormal.State.S02E07.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257788, 2]
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Paranormal.State.S02E12.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Paranormal State
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Paranormal.State']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Paranormal.State.S02E12.INTERNAL.DVDRip.x264-GHOULS', 2, '|12|', 0, 0, 'http://www.newshost.co.za/nzb/f3c/Paranormal.State.S02E12.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257788, 2]
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Paranormal.State.S02E09.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Paranormal State
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Paranormal.State']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Paranormal.State.S02E09.INTERNAL.DVDRip.x264-GHOULS', 2, '|9|', 0, 0, 'http://www.newshost.co.za/nzb/4fc/Paranormal.State.S02E09.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257788, 2]
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Paranormal.State.S02E11.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Paranormal State
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Paranormal.State']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Paranormal.State.S02E11.INTERNAL.DVDRip.x264-GHOULS', 2, '|11|', 0, 0, 'http://www.newshost.co.za/nzb/b40/Paranormal.State.S02E11.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257788, 2]
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Paranormal.State.S02E10.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Paranormal State
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Paranormal.State']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Paranormal.State.S02E10.INTERNAL.DVDRip.x264-GHOULS', 2, '|10|', 0, 0, 'http://www.newshost.co.za/nzb/81a/Paranormal.State.S02E10.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257788, 2]
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Paranormal.State.S02E06.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Paranormal State
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Paranormal.State']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Paranormal.State.S02E06.INTERNAL.DVDRip.x264-GHOULS', 2, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/5dd/Paranormal.State.S02E06.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257788, 2]
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Paranormal.State.S02E04.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Paranormal State
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Paranormal.State']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Paranormal.State.S02E04.INTERNAL.DVDRip.x264-GHOULS', 2, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/163/Paranormal.State.S02E04.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257788, 2]
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Paranormal.State.S02E03.INTERNAL.DVDRip.x264-GHOULS
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Paranormal State
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Paranormal.State']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Paranormal.State.S02E03.INTERNAL.DVDRip.x264-GHOULS', 2, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/bf8/Paranormal.State.S02E03.INTERNAL.DVDRip.x264-GHOULS.nzb', 1471257788, 2]
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM [womble_s_index]
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT time FROM lastUpdate WHERE provider = ? with args ['sick_beard_index']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Sick Beard Index cache update URL: http://lolo.sickbeard.com/api?t=tvsearch&cat=5030%2C5040
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: UPDATE lastUpdate SET time = ? WHERE provider = ? with args [1471257788, 'sick_beard_index']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO lastUpdate (time, provider) VALUES (?, ?) with args [1471257788, 'sick_beard_index']
2016-08-15 10:43:08 INFO     SEARCHQUEUE-RSS-SEARCH :: Clearing Sick Beard Index cache and updating with new information
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: DELETE FROM [sick_beard_index] WHERE 1
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Twinning.S01E08.1080i.HDTV.DD2.0.MPEG2-TrollHD
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Twinning
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Twinning']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Twinning', u'Twinning']
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Twinning
2016-08-15 10:43:08 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Twinning']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Twinning.S01E08.1080i.HDTV.DD2.0.MPEG2-TrollHD', 1, '|8|', 0, 0, 'http://lolo.sickbeard.com/getnzb/e267b14ea06dde12d05b276e12db859d.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 8]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Celebrity.Big.Brother.S18E20.HDTV.x264-LiNKLE
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Celebrity Big Brother
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Celebrity.Big.Brother']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Celebrity Big Brother', u'Celebrity Big Brother']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Celebrity Big Brother
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Celebrity.Big.Brother']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Celebrity.Big.Brother.S18E20.HDTV.x264-LiNKLE', 18, '|20|', 0, 0, 'http://lolo.sickbeard.com/getnzb/5a3196516403d205bad9f1026df818bd.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 1]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Twinning.S01E07.1080i.HDTV.DD2.0.MPEG2-TrollHD
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Twinning
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Twinning']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Twinning.S01E07.1080i.HDTV.DD2.0.MPEG2-TrollHD', 1, '|7|', 0, 0, 'http://lolo.sickbeard.com/getnzb/b717f824cf7df91f053ef30dbe873387.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 8]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Naked.and.Afraid.XL.S02E06.Deadly.Consequences.720p.HDTV.x264-DHD
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Naked and Afraid XL
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Naked.and.Afraid.XL']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Naked and Afraid XL', u'Naked and Afraid XL']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Naked and Afraid XL
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Naked.and.Afraid.XL']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Naked.and.Afraid.XL.S02E06.Deadly.Consequences.720p.HDTV.x264-DHD', 2, '|6|', 0, 0, 'http://lolo.sickbeard.com/getnzb/1f674c3c874a8b12a59b28aea4ac7242.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 4]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Moto2.2016.Austria.720p.HDTV.x264-VERUM
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename Moto2.2016.Austria.720p.HDTV.x264-VERUM into a valid episode
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: Moto2.2016.Austria.720p.HDTV.x264-VERUM
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Ozzy.and.Jacks.World.Detour.S01E04.Unidentified.Flying.Ozzy.720p.HDTV.x264-DHD
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Ozzy and Jacks World Detour
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Ozzy.and.Jacks.World.Detour']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Ozzy and Jacks World Detour', u'Ozzy and Jacks World Detour']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Ozzy and Jacks World Detour
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Ozzy.and.Jacks.World.Detour']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Ozzy.and.Jacks.World.Detour.S01E04.Unidentified.Flying.Ozzy.720p.HDTV.x264-DHD', 1, '|4|', 0, 0, 'http://lolo.sickbeard.com/getnzb/5929bdc0d5a1410af4356812320e32ab.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 4]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Chelsea.S01E39.1080p.WEBRip.x264-BRISK
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Chelsea
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Chelsea']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Chelsea', u'Chelsea']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Chelsea
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Chelsea']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Chelsea.S01E39.1080p.WEBRip.x264-BRISK', 1, '|39|', 0, 0, 'http://lolo.sickbeard.com/getnzb/feb3d333f82e693b41e9b7750968d0f1.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 64]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Chelsea.S01E39.WEBRip.x264-BRISK
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Chelsea
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Chelsea']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Chelsea.S01E39.WEBRip.x264-BRISK', 1, '|39|', 0, 0, 'http://lolo.sickbeard.com/getnzb/775853d299a51be1049cf12c1b20b13d.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 1]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: 50.Years.of.Star.Trek.2016.720p.HDTV.x264-DHD
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No series name retrieved from 50.Years.of.Star.Trek.2016.720p.HDTV.x264-DHD, unable to cache it
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Last.Ship.S03E09.1080p.HDTV.x264
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Last Ship
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Last.Ship']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'The Last Ship', u'The Last Ship']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for The Last Ship
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'The.Last.Ship']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Last.Ship.S03E09.1080p.HDTV.x264', 3, '|9|', 0, 0, 'http://lolo.sickbeard.com/getnzb/797e1785ebec78158b99de853b1c1a6f.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 16]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Power.2014.S03E05.720p.HDTV.x264
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Power 2014
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Power.2014']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Power 2014', u'Power 2014']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match original name but trying to manually strip and specify show year
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE (show_name LIKE ? OR tvr_name LIKE ?) AND startyear = ? with args [u'Power%', u'Power%', u'2014']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Power 2014
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Power.2014']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Power.2014.S03E05.720p.HDTV.x264', 3, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/fcaeb3767e0ac0658481016e4ce17bfc.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 4]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Last.Ship.S03E09.720p.HDTV.x264
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Last Ship
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Last.Ship']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Last.Ship.S03E09.720p.HDTV.x264', 3, '|9|', 0, 0, 'http://lolo.sickbeard.com/getnzb/dd481017d4ab8c22b9a7e391329696d7.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 4]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Chesapeake.Shores.S01E01.720p.HDTV.x264
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Chesapeake Shores
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Chesapeake.Shores']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Chesapeake Shores', u'Chesapeake Shores']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Chesapeake Shores
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Chesapeake.Shores']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Chesapeake.Shores.S01E01.720p.HDTV.x264', 1, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/8d3dd2ef220c7fce3d5937a14491be5e.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 4]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Robot.Wars.2016.S01E04.720p.HDTV.x264
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Robot Wars 2016
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Robot.Wars.2016']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Robot Wars 2016', u'Robot Wars 2016']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match original name but trying to manually strip and specify show year
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE (show_name LIKE ? OR tvr_name LIKE ?) AND startyear = ? with args [u'Robot Wars%', u'Robot Wars%', u'2016']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Robot Wars 2016
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Robot.Wars.2016']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Robot.Wars.2016.S01E04.720p.HDTV.x264', 1, '|4|', 0, 0, 'http://lolo.sickbeard.com/getnzb/88e9034c3addf38ea24bc9eac463e29d.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 4]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Twinning.S01E05.1080i.HDTV.DD2.0.MPEG2-TrollHD
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Twinning
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Twinning']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Twinning.S01E05.1080i.HDTV.DD2.0.MPEG2-TrollHD', 1, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/52f9bdb6aa2c86579cbf38bd95f0e564.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 8]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: 60.Minutes.S48E50.HDTV.x264-W4F
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of 60 Minutes
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'60.Minutes']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'60 Minutes', u'60 Minutes']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for 60 Minutes
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'60.Minutes']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['60.Minutes.S48E50.HDTV.x264-W4F', 48, '|50|', 0, 0, 'http://lolo.sickbeard.com/getnzb/1add9aed8f691521428ae9a5f0edfa99.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 1]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Walking.Dead.S07E00.Preview.Special.720p.HDTV.x264
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Walking Dead
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Walking.Dead']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'The Walking Dead', u'The Walking Dead']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for The Walking Dead
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'The.Walking.Dead']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Walking.Dead.S07E00.Preview.Special.720p.HDTV.x264', 7, '|0|', 0, 0, 'http://lolo.sickbeard.com/getnzb/6ccca1338a6a301f0e051cf9c7770b7c.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 4]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Night.Of.Part.6.720p.HDTV.x264-BATV
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Night Of
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Night.Of']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'The Night Of', u'The Night Of']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for The Night Of
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'The.Night.Of']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Night.Of.Part.6.720p.HDTV.x264-BATV', 1, '|6|', 0, 0, 'http://lolo.sickbeard.com/getnzb/5a98766b106762675ebcd898095fd7d9.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 4]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Ray.Donovan.S04E08.720p.HDTV.x264
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Ray Donovan
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Ray.Donovan']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Ray Donovan', u'Ray Donovan']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Ray Donovan
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Ray.Donovan']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Ray.Donovan.S04E08.720p.HDTV.x264', 4, '|8|', 0, 0, 'http://lolo.sickbeard.com/getnzb/9226fb07e1aaf47a49dbd318a794920b.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 4]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Walking.Dead.S07E00.Preview.Special.REPACK.HDTV.x264-aAF
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Walking Dead
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Walking.Dead']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Walking.Dead.S07E00.Preview.Special.REPACK.HDTV.x264-aAF', 7, '|0|', 0, 0, 'http://lolo.sickbeard.com/getnzb/8f6481e34ffffcb2e383e6e322189c42.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 1]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Murder.in.the.First.S03E07.720p.HDTV.x264
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Murder in the First
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Murder.in.the.First']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Murder in the First', u'Murder in the First']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Murder in the First
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Murder.in.the.First']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Murder.in.the.First.S03E07.720p.HDTV.x264', 3, '|7|', 0, 0, 'http://lolo.sickbeard.com/getnzb/9185c59accf34424ab0da60074c387e0.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 4]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Chesapeake.Shores.S01E01.720p.HDTV.x264-FLEET
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Chesapeake Shores
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Chesapeake.Shores']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Chesapeake.Shores.S01E01.720p.HDTV.x264-FLEET', 1, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/8fb927e305169cf4042e4c11863f3e96.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 4]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Chesapeake.Shores.S01E01.HDTV.x264-FLEET
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Chesapeake Shores
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Chesapeake.Shores']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Chesapeake.Shores.S01E01.HDTV.x264-FLEET', 1, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/b1229894c2047d6cea1de1e045954e22.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 1]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Ballers.2015.S02E05.720p.HDTV.x264
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Ballers 2015
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Ballers.2015']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Ballers 2015', u'Ballers 2015']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match original name but trying to manually strip and specify show year
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE (show_name LIKE ? OR tvr_name LIKE ?) AND startyear = ? with args [u'Ballers%', u'Ballers%', u'2015']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Ballers 2015
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Ballers.2015']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Ballers.2015.S02E05.720p.HDTV.x264', 2, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/08b225b7ed7adda72786a39345ac2ff0.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 4]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Night.Of.Part.6.HDTV.x264-BATV
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Night Of
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Night.Of']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Night.Of.Part.6.HDTV.x264-BATV', 1, '|6|', 0, 0, 'http://lolo.sickbeard.com/getnzb/0892722c78cc03d2a52caa4ad5a4dbe4.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 1]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Last.Week.Tonight.With.John.Oliver.S03E21.720p.HDTV.x264-BATV
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Last Week Tonight With John Oliver
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Last.Week.Tonight.With.John.Oliver']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Last Week Tonight With John Oliver', u'Last Week Tonight With John Oliver']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Last Week Tonight With John Oliver
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Last.Week.Tonight.With.John.Oliver']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Last.Week.Tonight.With.John.Oliver.S03E21.720p.HDTV.x264-BATV', 3, '|21|', 0, 0, 'http://lolo.sickbeard.com/getnzb/5d7875f739455230c2290a8d98aa2cf8.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 4]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Last.Week.Tonight.with.John.Oliver.S03E21.720p.WEBRip.AAC2.0.H.264-doosh
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Last Week Tonight with John Oliver
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Last.Week.Tonight.with.John.Oliver']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Last Week Tonight with John Oliver', u'Last Week Tonight with John Oliver']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Last Week Tonight with John Oliver
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Last.Week.Tonight.with.John.Oliver']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Last.Week.Tonight.with.John.Oliver.S03E21.720p.WEBRip.AAC2.0.H.264-doosh', 3, '|21|', 0, 0, 'http://lolo.sickbeard.com/getnzb/21fc101f881acf65489c6db655f47d98.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 32]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Last.Week.Tonight.With.John.Oliver.S03E21.HDTV.x264-BATV
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Last Week Tonight With John Oliver
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Last.Week.Tonight.With.John.Oliver']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Last.Week.Tonight.With.John.Oliver.S03E21.HDTV.x264-BATV', 3, '|21|', 0, 0, 'http://lolo.sickbeard.com/getnzb/3d12f7fb9ed97ee8eb49072a673040a0.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 1]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Murder.in.the.First.S03E07.1080p.HDTV.X264-DIMENSION
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Murder in the First
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Murder.in.the.First']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Murder.in.the.First.S03E07.1080p.HDTV.X264-DIMENSION', 3, '|7|', 0, 0, 'http://lolo.sickbeard.com/getnzb/83e39d3df44f3116b6cfd637570ccadf.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 16]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Killjoys.S02E07.720p.WEB-DL.DD5.1.H.264-VietHD
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Killjoys
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Killjoys']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Killjoys', u'Killjoys']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Killjoys
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Killjoys']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Killjoys.S02E07.720p.WEB-DL.DD5.1.H.264-VietHD', 2, '|7|', 0, 0, 'http://lolo.sickbeard.com/getnzb/03ad2833d5d95c19238c52782890f598.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257789, 32]
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Geeking.Out.S01E02.720p.HDTV.x264-aAF
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Geeking Out
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Geeking.Out']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Geeking Out', u'Geeking Out']
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Geeking Out
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:09 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Geeking.Out']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Geeking.Out.S01E02.720p.HDTV.x264-aAF', 1, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/11d341fa5f9ad0a673f73c42e3e22dc5.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 4]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Geeking.Out.S01E02.HDTV.x264-aAF
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Geeking Out
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Geeking.Out']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Geeking.Out.S01E02.HDTV.x264-aAF', 1, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/c8913a401a79cb231e268917cdf9f3c4.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 1]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Power.2014.S03E05.1080p.HDTV.x264-BRISK
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Power 2014
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Power.2014']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Power.2014.S03E05.1080p.HDTV.x264-BRISK', 3, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/66c309ce130533338591f10b843b0ada.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 16]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Survivors.Remorse.S03E05.1080p.HDTV.x264-BRISK
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Survivors Remorse
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Survivors.Remorse']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Survivors Remorse', u'Survivors Remorse']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Survivors Remorse
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Survivors.Remorse']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Survivors.Remorse.S03E05.1080p.HDTV.x264-BRISK', 3, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/a4f1eb3ff6640b4424bfe9570696f1c6.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 16]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Dark.Matter.S02E07.720p.WEB-DL.DD5.1.H.264-VietHD
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Dark Matter
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Dark.Matter']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Dark Matter', u'Dark Matter']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Dark Matter
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Dark.Matter']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Dark.Matter.S02E07.720p.WEB-DL.DD5.1.H.264-VietHD', 2, '|7|', 0, 0, 'http://lolo.sickbeard.com/getnzb/4ff374cd1c8b8e276d71df67e2f8bcc5.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 32]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Vice.Principals.S01E05.HDTV.x264-KILLERS
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Vice Principals
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Vice.Principals']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Vice Principals', u'Vice Principals']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Vice Principals
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Vice.Principals']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Vice.Principals.S01E05.HDTV.x264-KILLERS', 1, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/8786dabe8c07c8d3eb41906438beb60b.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 1]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Vice.Principals.S01E05.720p.HDTV.x264-KILLERS
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Vice Principals
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Vice.Principals']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Vice.Principals.S01E05.720p.HDTV.x264-KILLERS', 1, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/a38cbb498cf05033327e5fc5a12239a5.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 4]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Walking.Dead.S07E00.Preview.Special.HDTV.x264-aAF
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Walking Dead
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Walking.Dead']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Walking.Dead.S07E00.Preview.Special.HDTV.x264-aAF', 7, '|0|', 0, 0, 'http://lolo.sickbeard.com/getnzb/25e904908a1bdf109c8da76d3e30dfda.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 1]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Murder.in.the.First.S03E07.720p.HDTV.X264-DIMENSION
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Murder in the First
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Murder.in.the.First']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Murder.in.the.First.S03E07.720p.HDTV.X264-DIMENSION', 3, '|7|', 0, 0, 'http://lolo.sickbeard.com/getnzb/4cc9fdb65e3c9ff0c6854d3fce30b327.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 4]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Murder.in.the.First.S03E07.HDTV.x264-LOL
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Murder in the First
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Murder.in.the.First']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Murder.in.the.First.S03E07.HDTV.x264-LOL', 3, '|7|', 0, 0, 'http://lolo.sickbeard.com/getnzb/7c09dd928480193066a56098f9b1a435.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 1]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Suits.S06E05.1080p.WEB-DL.DD5.1.H.264-VietHD
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Suits
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Suits']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Suits', u'Suits']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Suits
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Suits']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Suits.S06E05.1080p.WEB-DL.DD5.1.H.264-VietHD', 6, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/da22ccb0b8cc0b5c09f7a2c9fd5e8b62.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 64]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Roadies.S01E08.HDTV.x264-FLEET
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Roadies
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Roadies']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Roadies', u'Roadies']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Roadies
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Roadies']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Roadies.S01E08.HDTV.x264-FLEET', 1, '|8|', 0, 0, 'http://lolo.sickbeard.com/getnzb/44a89c670f35597d451648232f6422b7.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 1]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Suits.S06E05.720p.WEB-DL.DD5.1.H.264-VietHD
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Suits
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Suits']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Suits.S06E05.720p.WEB-DL.DD5.1.H.264-VietHD', 6, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/67231e383264e0034c4dba3af4cf0821.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 32]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Ballers.2015.S02E05.HDTV.x264-KILLERS
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Ballers 2015
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Ballers.2015']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Ballers.2015.S02E05.HDTV.x264-KILLERS', 2, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/1dea0248de0a8bb95e522196ff55a9ec.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 1]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Ballers.2015.S02E05.720p.HDTV.x264-KILLERS
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Ballers 2015
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Ballers.2015']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Ballers.2015.S02E05.720p.HDTV.x264-KILLERS', 2, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/159fabcb23e7c246886355a4aeb1b1c7.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 4]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Jim.Gaffigan.Show.S02E10.HDTV.x264-FLEET
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Jim Gaffigan Show
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Jim.Gaffigan.Show']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'The Jim Gaffigan Show', u'The Jim Gaffigan Show']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for The Jim Gaffigan Show
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'The.Jim.Gaffigan.Show']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Jim.Gaffigan.Show.S02E10.HDTV.x264-FLEET', 2, '|10|', 0, 0, 'http://lolo.sickbeard.com/getnzb/68c7bfc2a10df45a153180fd04c279ce.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 1]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Survivors.Remorse.S03E05.720p.HDTV.x264-AVS
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Survivors Remorse
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Survivors.Remorse']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Survivors.Remorse.S03E05.720p.HDTV.x264-AVS', 3, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/930d024df5f7427aad803a3f76ef5f76.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 4]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Jim.Gaffigan.Show.S02E10.720p.HDTV.x264-FLEET
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Jim Gaffigan Show
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Jim.Gaffigan.Show']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Jim.Gaffigan.Show.S02E10.720p.HDTV.x264-FLEET', 2, '|10|', 0, 0, 'http://lolo.sickbeard.com/getnzb/c8f43712dddf04d4b180a49746b01a12.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 4]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Survivors.Remorse.S03E05.HDTV.x264-FLEET
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Survivors Remorse
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Survivors.Remorse']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Survivors.Remorse.S03E05.HDTV.x264-FLEET', 3, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/0cdec2ba5ded3f25e983762a4cfe2d9e.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 1]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Survivors.Remorse.S03E05.720p.HDTV.x264-FLEET
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Survivors Remorse
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Survivors.Remorse']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Survivors.Remorse.S03E05.720p.HDTV.x264-FLEET', 3, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/077c50ac2ed2842e74c7e3efb9e59ef6.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 4]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Twinning.S01E04.1080i.HDTV.DD2.0.MPEG2-TrollHD
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Twinning
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Twinning']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Twinning.S01E04.1080i.HDTV.DD2.0.MPEG2-TrollHD', 1, '|4|', 0, 0, 'http://lolo.sickbeard.com/getnzb/c322d73ab443b48a10703f72dda8dac2.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 8]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Last.Ship.S03E09.1080p.HDTV.X264-DIMENSION
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Last Ship
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Last.Ship']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Last.Ship.S03E09.1080p.HDTV.X264-DIMENSION', 3, '|9|', 0, 0, 'http://lolo.sickbeard.com/getnzb/a9a69782756d08d06f7d8fb1eca44da2.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 16]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Ray.Donovan.S04E08.PROPER.720p.HDTV.x264-FLEET
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Ray Donovan
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Ray.Donovan']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Ray.Donovan.S04E08.PROPER.720p.HDTV.x264-FLEET', 4, '|8|', 0, 0, 'http://lolo.sickbeard.com/getnzb/304a8e099ffdaac862af882738747e28.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 4]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Power.2014.S03E05.HDTV.x264-FLEET
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Power 2014
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Power.2014']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Power.2014.S03E05.HDTV.x264-FLEET', 3, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/2960609a894c03880f31ffe50f78fd0f.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 1]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Power.2014.S03E05.720p.HDTV.x264-FLEET
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Power 2014
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Power.2014']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Power.2014.S03E05.720p.HDTV.x264-FLEET', 3, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/632ef43845c4efcaea802dd60148d876.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 4]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Still.The.King.S01E13.720p.HDTV.x264-FLEET
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Still The King
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Still.The.King']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Still The King', u'Still The King']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Still The King
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Still.The.King']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Still.The.King.S01E13.720p.HDTV.x264-FLEET', 1, '|13|', 0, 0, 'http://lolo.sickbeard.com/getnzb/f62e92784cd0b5906ba3d571e54f8739.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 4]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Still.The.King.S01E13.HDTV.x264-FLEET
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Still The King
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Still.The.King']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Still.The.King.S01E13.HDTV.x264-FLEET', 1, '|13|', 0, 0, 'http://lolo.sickbeard.com/getnzb/746d1d200bd9c6b3d27592e7855caf07.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 1]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Ray.Donovan.S04E08.HDTV.x264-FLEET
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Ray Donovan
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Ray.Donovan']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Ray.Donovan.S04E08.HDTV.x264-FLEET', 4, '|8|', 0, 0, 'http://lolo.sickbeard.com/getnzb/68b93205c32479c9e26c6b840952f257.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 1]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Last.Ship.S03E09.720p.HDTV.X264-DIMENSION
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Last Ship
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Last.Ship']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Last.Ship.S03E09.720p.HDTV.X264-DIMENSION', 3, '|9|', 0, 0, 'http://lolo.sickbeard.com/getnzb/4e8138f43d920e0e077702aa3e25df35.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 4]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Last.Ship.S03E09.HDTV.x264-LOL
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Last Ship
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Last.Ship']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Last.Ship.S03E09.HDTV.x264-LOL', 3, '|9|', 0, 0, 'http://lolo.sickbeard.com/getnzb/8f1f94a3baa6468a7ac0c2857f41c44b.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 1]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Ray.Donovan.S04E08.720p.HDTV.x264-SVA
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Ray Donovan
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Ray.Donovan']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Ray.Donovan.S04E08.720p.HDTV.x264-SVA', 4, '|8|', 0, 0, 'http://lolo.sickbeard.com/getnzb/2593194ff3411740055b754d94a0d143.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 4]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Still.The.King.S01E12.720p.HDTV.x264-FLEET
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Still The King
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Still.The.King']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Still.The.King.S01E12.720p.HDTV.x264-FLEET', 1, '|12|', 0, 0, 'http://lolo.sickbeard.com/getnzb/eef8ac4e716d93648b127b5e0b393b2c.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 4]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Big.Brother.US.S18E25.720p.HDTV.x264-BAJSKORV
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Big Brother US
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Big.Brother.US']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Big Brother US', u'Big Brother US']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Big Brother US
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Big.Brother.US']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Big.Brother.US.S18E25.720p.HDTV.x264-BAJSKORV', 18, '|25|', 0, 0, 'http://lolo.sickbeard.com/getnzb/77ccde3f0f7fc82bb3f6138f9d251116.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 4]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Braindead.S01E08.1080p.HDTV.X264-DIMENSION
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Braindead
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Braindead']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Braindead', u'Braindead']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Braindead
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Braindead']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Braindead.S01E08.1080p.HDTV.X264-DIMENSION', 1, '|8|', 0, 0, 'http://lolo.sickbeard.com/getnzb/233abec2186d2f99f0b67998708987e2.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 16]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Twinning.S01E03.1080i.HDTV.DD2.0.MPEG2-TrollHD
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Twinning
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Twinning']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Twinning.S01E03.1080i.HDTV.DD2.0.MPEG2-TrollHD', 1, '|3|', 0, 0, 'http://lolo.sickbeard.com/getnzb/6d5626eaacf83209d92a5528ebb16d41.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257790, 8]
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Lab.Rats.US.S02E17.HDTV.x264-W4F
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Lab Rats US
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Lab.Rats.US']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Lab Rats US', u'Lab Rats US']
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Lab Rats US
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:10 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Lab.Rats.US']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Lab.Rats.US.S02E17.HDTV.x264-W4F', 2, '|17|', 0, 0, 'http://lolo.sickbeard.com/getnzb/a1db9a34597285f0a7eca40fcd087be3.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 1]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Lab.Rats.US.S02E17.720p.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Lab Rats US
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Lab.Rats.US']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Lab.Rats.US.S02E17.720p.HDTV.x264-W4F', 2, '|17|', 0, 0, 'http://lolo.sickbeard.com/getnzb/8a5df1739330e916e4017737ad9f6de8.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 4]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Thundermans.S03E24.Back.to.School.720p.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Thundermans
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Thundermans']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'The Thundermans', u'The Thundermans']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for The Thundermans
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'The.Thundermans']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Thundermans.S03E24.Back.to.School.720p.HDTV.x264-W4F', 3, '|24|', 0, 0, 'http://lolo.sickbeard.com/getnzb/d64831a9f4b3d67e12596c104ac0fb37.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 4]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Transformers.Rescue.Bots.S04E17.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Transformers Rescue Bots
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Transformers.Rescue.Bots']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Transformers Rescue Bots', u'Transformers Rescue Bots']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Transformers Rescue Bots
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Transformers.Rescue.Bots']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Transformers.Rescue.Bots.S04E17.HDTV.x264-W4F', 4, '|17|', 0, 0, 'http://lolo.sickbeard.com/getnzb/17c78dab0b1f694807698bf082f63823.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 1]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Thundermans.S03E23.Stealing.Home.720p.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Thundermans
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Thundermans']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Thundermans.S03E23.Stealing.Home.720p.HDTV.x264-W4F', 3, '|23|', 0, 0, 'http://lolo.sickbeard.com/getnzb/e1c9186e3207c4abc09e8e8490831f74.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 4]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Thundermans.S03E24.Back.to.School.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Thundermans
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Thundermans']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Thundermans.S03E24.Back.to.School.HDTV.x264-W4F', 3, '|24|', 0, 0, 'http://lolo.sickbeard.com/getnzb/bf585468805b9a3d9fc1ab6b5a7ab037.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 1]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Perfect.Murder.S03E11.720p.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Perfect Murder
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Perfect.Murder']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'The Perfect Murder', u'The Perfect Murder']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for The Perfect Murder
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'The.Perfect.Murder']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Perfect.Murder.S03E11.720p.HDTV.x264-W4F', 3, '|11|', 0, 0, 'http://lolo.sickbeard.com/getnzb/b50eca75930cce4ea7c7d59b07e32c51.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 4]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Six.Degrees.of.Murder.S01E05.720p.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Six Degrees of Murder
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Six.Degrees.of.Murder']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Six Degrees of Murder', u'Six Degrees of Murder']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Six Degrees of Murder
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Six.Degrees.of.Murder']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Six.Degrees.of.Murder.S01E05.720p.HDTV.x264-W4F', 1, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/1c1fc9ab9981ac12eee161a186835a03.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 4]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Sex.Slaves-Texas.720p.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename Sex.Slaves-Texas.720p.HDTV.x264-W4F into a valid episode
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: Sex.Slaves-Texas.720p.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Perfect.Murder.S03E11.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Perfect Murder
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Perfect.Murder']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Perfect.Murder.S03E11.HDTV.x264-W4F', 3, '|11|', 0, 0, 'http://lolo.sickbeard.com/getnzb/54affbc67ef10b41b663b913f02af84e.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 1]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Teenage.Mutant.Ninja.Turtles.2012.S04E15.720p.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Teenage Mutant Ninja Turtles 2012
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Teenage.Mutant.Ninja.Turtles.2012']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Teenage Mutant Ninja Turtles 2012', u'Teenage Mutant Ninja Turtles 2012']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match original name but trying to manually strip and specify show year
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE (show_name LIKE ? OR tvr_name LIKE ?) AND startyear = ? with args [u'Teenage Mutant Ninja Turtles%', u'Teenage Mutant Ninja Turtles%', u'2012']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Teenage Mutant Ninja Turtles 2012
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Teenage.Mutant.Ninja.Turtles.2012']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Teenage.Mutant.Ninja.Turtles.2012.S04E15.720p.HDTV.x264-W4F', 4, '|15|', 0, 0, 'http://lolo.sickbeard.com/getnzb/812acbad85333810d5ab634747b2c65a.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 4]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Sex.Slaves-Addiction.720p.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename Sex.Slaves-Addiction.720p.HDTV.x264-W4F into a valid episode
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: Sex.Slaves-Addiction.720p.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Six.Degrees.of.Murder.S01E05.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Six Degrees of Murder
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Six.Degrees.of.Murder']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Six.Degrees.of.Murder.S01E05.HDTV.x264-W4F', 1, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/9e043e503274c2f7848a047d315cb8bd.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 1]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Sex.Slaves-Texas.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename Sex.Slaves-Texas.HDTV.x264-W4F into a valid episode
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: Sex.Slaves-Texas.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Policewomen.Files.S01E06.720p.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Policewomen Files
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Policewomen.Files']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Policewomen Files', u'Policewomen Files']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Policewomen Files
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Policewomen.Files']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Policewomen.Files.S01E06.720p.HDTV.x264-W4F', 1, '|6|', 0, 0, 'http://lolo.sickbeard.com/getnzb/c96ed5499b851b92663f683e9bf5382d.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 4]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Party.Legends.S01E06.720p.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Party Legends
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Party.Legends']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Party Legends', u'Party Legends']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Party Legends
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Party.Legends']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Party.Legends.S01E06.720p.HDTV.x264-W4F', 1, '|6|', 0, 0, 'http://lolo.sickbeard.com/getnzb/1406c99e435033ec270b48a9fae0ef1d.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 4]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Policewomen.Files.S01E06.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Policewomen Files
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Policewomen.Files']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Policewomen.Files.S01E06.HDTV.x264-W4F', 1, '|6|', 0, 0, 'http://lolo.sickbeard.com/getnzb/dd1b5f19cfc1968aee43d23280f0b516.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 1]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Party.Legends.S01E06.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Party Legends
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Party.Legends']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Party.Legends.S01E06.HDTV.x264-W4F', 1, '|6|', 0, 0, 'http://lolo.sickbeard.com/getnzb/636a47c43df0094bbac8d1a8072ad626.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 1]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: My.Little.Pony.Friendship.Is.Magic.S06E15.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of My Little Pony Friendship Is Magic
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'My.Little.Pony.Friendship.Is.Magic']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'My Little Pony Friendship Is Magic', u'My Little Pony Friendship Is Magic']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for My Little Pony Friendship Is Magic
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'My.Little.Pony.Friendship.Is.Magic']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['My.Little.Pony.Friendship.Is.Magic.S06E15.HDTV.x264-W4F', 6, '|15|', 0, 0, 'http://lolo.sickbeard.com/getnzb/51e4f2f3665c32bb7f7f0e83a871f91f.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 1]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Miraculous-Tales.of.Ladybug.and.Cat.Noir.S01E16.720p.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Miraculous-Tales of Ladybug and Cat Noir
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Miraculous-Tales.of.Ladybug.and.Cat.Noir']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Miraculous Tales of Ladybug and Cat Noir', u'Miraculous Tales of Ladybug and Cat Noir']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Miraculous Tales of Ladybug and Cat Noir
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Miraculous-Tales.of.Ladybug.and.Cat.Noir']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Miraculous-Tales.of.Ladybug.and.Cat.Noir.S01E16.720p.HDTV.x264-W4F', 1, '|16|', 0, 0, 'http://lolo.sickbeard.com/getnzb/acf13463df8c52e4f3e86930d6a85c12.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 4]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Miraculous-Tales.of.Ladybug.and.Cat.Noir.S01E16.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Miraculous-Tales of Ladybug and Cat Noir
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Miraculous-Tales.of.Ladybug.and.Cat.Noir']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Miraculous-Tales.of.Ladybug.and.Cat.Noir.S01E16.HDTV.x264-W4F', 1, '|16|', 0, 0, 'http://lolo.sickbeard.com/getnzb/844c5d4bc6174a5edcbcb5edd1cfb120.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 1]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Mighty.Magiswords-Whose.Hyas.Is.It.Anyway.720p.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename Mighty.Magiswords-Whose.Hyas.Is.It.Anyway.720p.HDTV.x264-W4F into a valid episode
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: Mighty.Magiswords-Whose.Hyas.Is.It.Anyway.720p.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Legendary.Dudas.S01E06.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Legendary Dudas
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Legendary.Dudas']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Legendary Dudas', u'Legendary Dudas']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Legendary Dudas
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Legendary.Dudas']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Legendary.Dudas.S01E06.HDTV.x264-W4F', 1, '|6|', 0, 0, 'http://lolo.sickbeard.com/getnzb/2bd0661025eb7e2349cdfc74a9fdd88a.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 1]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Mighty.Magiswords-No.Robots.For.Old.Men.720p.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename Mighty.Magiswords-No.Robots.For.Old.Men.720p.HDTV.x264-W4F into a valid episode
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: Mighty.Magiswords-No.Robots.For.Old.Men.720p.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Lab.Rats.US.S02E18.720p.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Lab Rats US
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Lab.Rats.US']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Lab.Rats.US.S02E18.720p.HDTV.x264-W4F', 2, '|18|', 0, 0, 'http://lolo.sickbeard.com/getnzb/a7bc1d4559c849afd6c847d049f4709d.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 4]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Lab.Rats.US.S02E18.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Lab Rats US
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Lab.Rats.US']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Lab.Rats.US.S02E18.HDTV.x264-W4F', 2, '|18|', 0, 0, 'http://lolo.sickbeard.com/getnzb/2ec983b57b80337807b681458dcba578.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 1]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Lab.Rats.US.S02E15.720p.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Lab Rats US
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Lab.Rats.US']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Lab.Rats.US.S02E15.720p.HDTV.x264-W4F', 2, '|15|', 0, 0, 'http://lolo.sickbeard.com/getnzb/dbcb24af36c85b42367795b41a217ea2.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 4]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Lab.Rats.US.S02E12.720p.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Lab Rats US
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Lab.Rats.US']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Lab.Rats.US.S02E12.720p.HDTV.x264-W4F', 2, '|12|', 0, 0, 'http://lolo.sickbeard.com/getnzb/ba363f0b50e00998b606ee6a06c522e4.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 4]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Lab.Rats.US.S02E15.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Lab Rats US
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Lab.Rats.US']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Lab.Rats.US.S02E15.HDTV.x264-W4F', 2, '|15|', 0, 0, 'http://lolo.sickbeard.com/getnzb/bdb86c0e54a9a39cf3a3b3f9dbc20fbc.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 1]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Lab.Rats.US.S02E12.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Lab Rats US
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Lab.Rats.US']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Lab.Rats.US.S02E12.HDTV.x264-W4F', 2, '|12|', 0, 0, 'http://lolo.sickbeard.com/getnzb/df821ce9db970461d166840a30ae75a8.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 1]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Lab.Rats.US.S02E11.720p.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Lab Rats US
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Lab.Rats.US']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Lab.Rats.US.S02E11.720p.HDTV.x264-W4F', 2, '|11|', 0, 0, 'http://lolo.sickbeard.com/getnzb/7af49fb7dcbbf6a966de54978c176902.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 4]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Lab.Rats.US.S02E11.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Lab Rats US
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Lab.Rats.US']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Lab.Rats.US.S02E11.HDTV.x264-W4F', 2, '|11|', 0, 0, 'http://lolo.sickbeard.com/getnzb/de647b2878630881fb97fdd23c21b54e.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 1]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Jail.S05E05.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Jail
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Jail']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Jail', u'Jail']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Jail
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Jail']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Jail.S05E05.HDTV.x264-W4F', 5, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/d2eb0e447072d286a99311b1d18c4329.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 1]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Jail.S05E05.720p.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Jail
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Jail']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Jail.S05E05.720p.HDTV.x264-W4F', 5, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/25b549e235755d9ac622bdcfe133a7d5.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 4]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Braindead.S01E08.720p.HDTV.X264-DIMENSION
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Braindead
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Braindead']
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Braindead.S01E08.720p.HDTV.X264-DIMENSION', 1, '|8|', 0, 0, 'http://lolo.sickbeard.com/getnzb/7e060562ebfb3a057a74ca1b0e3fa195.nzb&i=0&r=f9c9e596a1b33ae68834e40fcb223271', 1471257791, 4]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM [sick_beard_index]
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Twinning.S01E08.1080i.HDTV.DD2.0.MPEG2-TrollHD
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Celebrity.Big.Brother.S18E20.HDTV.x264-LiNKLE
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Twinning.S01E07.1080i.HDTV.DD2.0.MPEG2-TrollHD
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Naked.and.Afraid.XL.S02E06.Deadly.Consequences.720p.HDTV.x264-DHD
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Ozzy.and.Jacks.World.Detour.S01E04.Unidentified.Flying.Ozzy.720p.HDTV.x264-DHD
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Chelsea.S01E39.1080p.WEBRip.x264-BRISK
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Chelsea.S01E39.WEBRip.x264-BRISK
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Last.Ship.S03E09.1080p.HDTV.x264
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Power.2014.S03E05.720p.HDTV.x264
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Last.Ship.S03E09.720p.HDTV.x264
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Chesapeake.Shores.S01E01.720p.HDTV.x264
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Robot.Wars.2016.S01E04.720p.HDTV.x264
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Twinning.S01E05.1080i.HDTV.DD2.0.MPEG2-TrollHD
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: 60.Minutes.S48E50.HDTV.x264-W4F
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Walking.Dead.S07E00.Preview.Special.720p.HDTV.x264
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Night.Of.Part.6.720p.HDTV.x264-BATV
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Ray.Donovan.S04E08.720p.HDTV.x264
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Walking.Dead.S07E00.Preview.Special.REPACK.HDTV.x264-aAF
2016-08-15 10:43:11 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Murder.in.the.First.S03E07.720p.HDTV.x264
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Chesapeake.Shores.S01E01.720p.HDTV.x264-FLEET
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Chesapeake.Shores.S01E01.HDTV.x264-FLEET
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Ballers.2015.S02E05.720p.HDTV.x264
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Night.Of.Part.6.HDTV.x264-BATV
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Last.Week.Tonight.With.John.Oliver.S03E21.720p.HDTV.x264-BATV
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Last.Week.Tonight.with.John.Oliver.S03E21.720p.WEBRip.AAC2.0.H.264-doosh
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Last.Week.Tonight.With.John.Oliver.S03E21.HDTV.x264-BATV
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Murder.in.the.First.S03E07.1080p.HDTV.X264-DIMENSION
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Killjoys.S02E07.720p.WEB-DL.DD5.1.H.264-VietHD
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Geeking.Out.S01E02.720p.HDTV.x264-aAF
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Geeking.Out.S01E02.HDTV.x264-aAF
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Power.2014.S03E05.1080p.HDTV.x264-BRISK
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Survivors.Remorse.S03E05.1080p.HDTV.x264-BRISK
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Dark.Matter.S02E07.720p.WEB-DL.DD5.1.H.264-VietHD
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Vice.Principals.S01E05.HDTV.x264-KILLERS
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Vice.Principals.S01E05.720p.HDTV.x264-KILLERS
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Walking.Dead.S07E00.Preview.Special.HDTV.x264-aAF
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Murder.in.the.First.S03E07.720p.HDTV.X264-DIMENSION
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Murder.in.the.First.S03E07.HDTV.x264-LOL
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Suits.S06E05.1080p.WEB-DL.DD5.1.H.264-VietHD
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Roadies.S01E08.HDTV.x264-FLEET
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Suits.S06E05.720p.WEB-DL.DD5.1.H.264-VietHD
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Ballers.2015.S02E05.HDTV.x264-KILLERS
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Ballers.2015.S02E05.720p.HDTV.x264-KILLERS
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Jim.Gaffigan.Show.S02E10.HDTV.x264-FLEET
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Survivors.Remorse.S03E05.720p.HDTV.x264-AVS
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Jim.Gaffigan.Show.S02E10.720p.HDTV.x264-FLEET
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Survivors.Remorse.S03E05.HDTV.x264-FLEET
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Survivors.Remorse.S03E05.720p.HDTV.x264-FLEET
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Twinning.S01E04.1080i.HDTV.DD2.0.MPEG2-TrollHD
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Last.Ship.S03E09.1080p.HDTV.X264-DIMENSION
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Ray.Donovan.S04E08.PROPER.720p.HDTV.x264-FLEET
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Power.2014.S03E05.HDTV.x264-FLEET
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Power.2014.S03E05.720p.HDTV.x264-FLEET
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Still.The.King.S01E13.720p.HDTV.x264-FLEET
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Still.The.King.S01E13.HDTV.x264-FLEET
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Ray.Donovan.S04E08.HDTV.x264-FLEET
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Last.Ship.S03E09.720p.HDTV.X264-DIMENSION
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Last.Ship.S03E09.HDTV.x264-LOL
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Ray.Donovan.S04E08.720p.HDTV.x264-SVA
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Still.The.King.S01E12.720p.HDTV.x264-FLEET
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Big.Brother.US.S18E25.720p.HDTV.x264-BAJSKORV
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Braindead.S01E08.1080p.HDTV.X264-DIMENSION
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Twinning.S01E03.1080i.HDTV.DD2.0.MPEG2-TrollHD
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Lab.Rats.US.S02E17.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Lab.Rats.US.S02E17.720p.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Thundermans.S03E24.Back.to.School.720p.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Transformers.Rescue.Bots.S04E17.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Thundermans.S03E23.Stealing.Home.720p.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Thundermans.S03E24.Back.to.School.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Perfect.Murder.S03E11.720p.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Six.Degrees.of.Murder.S01E05.720p.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Perfect.Murder.S03E11.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Teenage.Mutant.Ninja.Turtles.2012.S04E15.720p.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Six.Degrees.of.Murder.S01E05.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Policewomen.Files.S01E06.720p.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Party.Legends.S01E06.720p.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Policewomen.Files.S01E06.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Party.Legends.S01E06.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: My.Little.Pony.Friendship.Is.Magic.S06E15.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Miraculous-Tales.of.Ladybug.and.Cat.Noir.S01E16.720p.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Miraculous-Tales.of.Ladybug.and.Cat.Noir.S01E16.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Legendary.Dudas.S01E06.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Lab.Rats.US.S02E18.720p.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Lab.Rats.US.S02E18.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Lab.Rats.US.S02E15.720p.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Lab.Rats.US.S02E12.720p.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Lab.Rats.US.S02E15.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Lab.Rats.US.S02E12.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Lab.Rats.US.S02E11.720p.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Lab.Rats.US.S02E11.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Jail.S05E05.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Jail.S05E05.720p.HDTV.x264-W4F
2016-08-15 10:43:12 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Braindead.S01E08.720p.HDTV.X264-DIMENSION
2016-08-15 10:43:12 INFO     SEARCHQUEUE-RSS-SEARCH :: No needed episodes found on the RSS feeds
2016-08-15 10:44:00 INFO     MAIN :: Checking database structure...
2016-08-15 10:44:00 DEBUG    MAIN :: Checking Initial Schema database upgrade
2016-08-15 10:44:00 DEBUG    MAIN :: sickbeard.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('tv_shows',)
2016-08-15 10:44:00 DEBUG    MAIN :: sickbeard.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('db_version',)
2016-08-15 10:44:00 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:44:00 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:44:00 DEBUG    MAIN :: Initial Schema upgrade not required
2016-08-15 10:44:00 DEBUG    MAIN :: Checking Add Size And Scene Name Fields database upgrade
2016-08-15 10:44:00 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:44:00 DEBUG    MAIN :: Add Size And Scene Name Fields upgrade not required
2016-08-15 10:44:00 DEBUG    MAIN :: Checking Rename Season Folders database upgrade
2016-08-15 10:44:00 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:44:00 DEBUG    MAIN :: Rename Season Folders upgrade not required
2016-08-15 10:44:00 DEBUG    MAIN :: Checking Add1080p And Raw Qualities database upgrade
2016-08-15 10:44:00 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:44:00 DEBUG    MAIN :: Add1080p And Raw Qualities upgrade not required
2016-08-15 10:44:00 DEBUG    MAIN :: Checking Add Showid Tvdbid Index database upgrade
2016-08-15 10:44:00 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:44:00 DEBUG    MAIN :: Add Showid Tvdbid Index upgrade not required
2016-08-15 10:44:00 DEBUG    MAIN :: Checking Add Last Update database upgrade
2016-08-15 10:44:00 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:44:00 DEBUG    MAIN :: Add Last Update upgrade not required
2016-08-15 10:44:00 DEBUG    MAIN :: Checking Add Require And Ignore Words database upgrade
2016-08-15 10:44:00 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:44:00 DEBUG    MAIN :: Add Require And Ignore Words upgrade not required
2016-08-15 10:44:00 DEBUG    MAIN :: Checking Cleanup History And Specials database upgrade
2016-08-15 10:44:00 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:44:00 DEBUG    MAIN :: Cleanup History And Specials upgrade not required
2016-08-15 10:44:00 DEBUG    MAIN :: Checking Add Skip Notifications database upgrade
2016-08-15 10:44:00 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:44:00 DEBUG    MAIN :: Add Skip Notifications upgrade not required
2016-08-15 10:44:00 DEBUG    MAIN :: Checking Add History Source database upgrade
2016-08-15 10:44:00 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:44:00 DEBUG    MAIN :: Add History Source upgrade not required
2016-08-15 10:44:00 INFO     MAIN :: Checking database structure...
2016-08-15 10:44:00 DEBUG    MAIN :: Checking Initial Schema database upgrade
2016-08-15 10:44:00 DEBUG    MAIN :: cache.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('lastUpdate',)
2016-08-15 10:44:00 DEBUG    MAIN :: Initial Schema upgrade not required
2016-08-15 10:44:00 DEBUG    MAIN :: Checking Add Scene Exceptions database upgrade
2016-08-15 10:44:00 DEBUG    MAIN :: cache.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('scene_exceptions',)
2016-08-15 10:44:00 DEBUG    MAIN :: Add Scene Exceptions upgrade not required
2016-08-15 10:44:00 DEBUG    MAIN :: Checking Add Scene Name Cache database upgrade
2016-08-15 10:44:00 DEBUG    MAIN :: cache.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('scene_names',)
2016-08-15 10:44:00 DEBUG    MAIN :: Add Scene Name Cache upgrade not required
2016-08-15 10:44:00 DEBUG    MAIN :: Checking Add Scene Exceptions Provider database upgrade
2016-08-15 10:44:00 DEBUG    MAIN :: Add Scene Exceptions Provider upgrade not required
2016-08-15 10:44:00 DEBUG    MAIN :: sickbeard.db: SELECT show_id, tvdb_id, COUNT(tvdb_id) as count FROM tv_shows GROUP BY tvdb_id HAVING count > 1
2016-08-15 10:44:00 INFO     MAIN :: No duplicate show, check passed
2016-08-15 10:44:00 DEBUG    MAIN :: sickbeard.db: SELECT showid, season, episode, COUNT(showid) as count FROM tv_episodes GROUP BY showid, season, episode HAVING count > 1
2016-08-15 10:44:00 INFO     MAIN :: No duplicate episode, check passed
2016-08-15 10:44:00 DEBUG    MAIN :: sickbeard.db: SELECT episode_id, showid, tv_shows.tvdb_id FROM tv_episodes LEFT JOIN tv_shows ON tv_episodes.showid=tv_shows.tvdb_id WHERE tv_shows.tvdb_id is NULL
2016-08-15 10:44:00 INFO     MAIN :: No orphan episodes, check passed
2016-08-15 10:44:00 DEBUG    MAIN :: config_version -> 6
2016-08-15 10:44:00 DEBUG    MAIN :: Checking if we can use git commands: git version
2016-08-15 10:44:00 DEBUG    MAIN :: Executing git version with your shell in /sickbeard
2016-08-15 10:44:00 DEBUG    MAIN :: git output: git version 2.8.3
2016-08-15 10:44:00 DEBUG    MAIN :: git version : returned successful
2016-08-15 10:44:00 DEBUG    MAIN :: Using: git
2016-08-15 10:44:00 DEBUG    MAIN :: Executing git symbolic-ref -q HEAD with your shell in /sickbeard
2016-08-15 10:44:00 DEBUG    MAIN :: git output: refs/heads/development
2016-08-15 10:44:00 DEBUG    MAIN :: git symbolic-ref -q HEAD : returned successful
2016-08-15 10:44:00 DEBUG    MAIN :: Retrieving the last check time from the DB
2016-08-15 10:44:00 DEBUG    MAIN :: sickbeard.db: SELECT * FROM info
2016-08-15 10:44:00 INFO     MAIN :: Starting Sick Beard on http://0.0.0.0:8081/
2016-08-15 10:44:01 INFO     MAIN :: Loading initial show list
2016-08-15 10:44:01 DEBUG    MAIN :: sickbeard.db: SELECT * FROM tv_shows
2016-08-15 10:44:01 DEBUG    CHECKVERSION :: Starting new thread: CHECKVERSION
2016-08-15 10:44:01 INFO     CHECKVERSION :: Checking if git needs an update
2016-08-15 10:44:01 DEBUG    CHECKVERSION :: Executing git rev-parse HEAD with your shell in /sickbeard
2016-08-15 10:44:01 DEBUG    CHECKVERSION :: git output: 171a607e41b7347a74cc815f6ecce7968d9acccf
2016-08-15 10:44:01 DEBUG    CHECKVERSION :: git rev-parse HEAD : returned successful
2016-08-15 10:44:01 DEBUG    CHECKVERSION :: Executing git fetch origin with your shell in /sickbeard
2016-08-15 10:44:06 DEBUG    CHECKVERSION :: git output: 
2016-08-15 10:44:06 DEBUG    CHECKVERSION :: git fetch origin : returned successful
2016-08-15 10:44:06 DEBUG    CHECKVERSION :: Executing git rev-parse --verify --quiet "@{upstream}" with your shell in /sickbeard
2016-08-15 10:44:06 DEBUG    CHECKVERSION :: git output: 171a607e41b7347a74cc815f6ecce7968d9acccf
2016-08-15 10:44:06 DEBUG    CHECKVERSION :: git rev-parse --verify --quiet "@{upstream}" : returned successful
2016-08-15 10:44:06 DEBUG    CHECKVERSION :: Executing git rev-list --left-right "@{upstream}"...HEAD with your shell in /sickbeard
2016-08-15 10:44:06 DEBUG    CHECKVERSION :: git output: 
2016-08-15 10:44:06 DEBUG    CHECKVERSION :: git rev-list --left-right "@{upstream}"...HEAD : returned successful
2016-08-15 10:44:06 DEBUG    CHECKVERSION :: cur_commit = 171a607e41b7347a74cc815f6ecce7968d9acccf, newest_commit = 171a607e41b7347a74cc815f6ecce7968d9acccf, num_commits_behind = 0, num_commits_ahead = 0
2016-08-15 10:44:06 INFO     CHECKVERSION :: No update needed
2016-08-15 10:44:06 INFO     CHECKVERSION :: Check scene exceptions update
2016-08-15 10:44:06 DEBUG    CHECKVERSION :: cache.db: SELECT tvdb_id, show_name FROM scene_exceptions WHERE provider=?; with args ['sb_tvdb_scene_exceptions']
2016-08-15 10:44:06 INFO     CHECKVERSION :: No scene exceptions update needed
2016-08-15 10:45:48 INFO     MAIN :: Checking database structure...
2016-08-15 10:45:48 DEBUG    MAIN :: Checking Initial Schema database upgrade
2016-08-15 10:45:48 DEBUG    MAIN :: sickbeard.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('tv_shows',)
2016-08-15 10:45:48 DEBUG    MAIN :: sickbeard.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('db_version',)
2016-08-15 10:45:48 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:45:48 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:45:48 DEBUG    MAIN :: Initial Schema upgrade not required
2016-08-15 10:45:48 DEBUG    MAIN :: Checking Add Size And Scene Name Fields database upgrade
2016-08-15 10:45:48 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:45:48 DEBUG    MAIN :: Add Size And Scene Name Fields upgrade not required
2016-08-15 10:45:48 DEBUG    MAIN :: Checking Rename Season Folders database upgrade
2016-08-15 10:45:48 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:45:48 DEBUG    MAIN :: Rename Season Folders upgrade not required
2016-08-15 10:45:48 DEBUG    MAIN :: Checking Add1080p And Raw Qualities database upgrade
2016-08-15 10:45:48 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:45:48 DEBUG    MAIN :: Add1080p And Raw Qualities upgrade not required
2016-08-15 10:45:48 DEBUG    MAIN :: Checking Add Showid Tvdbid Index database upgrade
2016-08-15 10:45:48 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:45:48 DEBUG    MAIN :: Add Showid Tvdbid Index upgrade not required
2016-08-15 10:45:48 DEBUG    MAIN :: Checking Add Last Update database upgrade
2016-08-15 10:45:48 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:45:48 DEBUG    MAIN :: Add Last Update upgrade not required
2016-08-15 10:45:48 DEBUG    MAIN :: Checking Add Require And Ignore Words database upgrade
2016-08-15 10:45:48 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:45:48 DEBUG    MAIN :: Add Require And Ignore Words upgrade not required
2016-08-15 10:45:48 DEBUG    MAIN :: Checking Cleanup History And Specials database upgrade
2016-08-15 10:45:48 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:45:48 DEBUG    MAIN :: Cleanup History And Specials upgrade not required
2016-08-15 10:45:48 DEBUG    MAIN :: Checking Add Skip Notifications database upgrade
2016-08-15 10:45:48 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:45:48 DEBUG    MAIN :: Add Skip Notifications upgrade not required
2016-08-15 10:45:48 DEBUG    MAIN :: Checking Add History Source database upgrade
2016-08-15 10:45:48 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2016-08-15 10:45:48 DEBUG    MAIN :: Add History Source upgrade not required
2016-08-15 10:45:48 INFO     MAIN :: Checking database structure...
2016-08-15 10:45:48 DEBUG    MAIN :: Checking Initial Schema database upgrade
2016-08-15 10:45:48 DEBUG    MAIN :: cache.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('lastUpdate',)
2016-08-15 10:45:48 DEBUG    MAIN :: Initial Schema upgrade not required
2016-08-15 10:45:48 DEBUG    MAIN :: Checking Add Scene Exceptions database upgrade
2016-08-15 10:45:48 DEBUG    MAIN :: cache.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('scene_exceptions',)
2016-08-15 10:45:48 DEBUG    MAIN :: Add Scene Exceptions upgrade not required
2016-08-15 10:45:48 DEBUG    MAIN :: Checking Add Scene Name Cache database upgrade
2016-08-15 10:45:48 DEBUG    MAIN :: cache.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('scene_names',)
2016-08-15 10:45:48 DEBUG    MAIN :: Add Scene Name Cache upgrade not required
2016-08-15 10:45:48 DEBUG    MAIN :: Checking Add Scene Exceptions Provider database upgrade
2016-08-15 10:45:48 DEBUG    MAIN :: Add Scene Exceptions Provider upgrade not required
2016-08-15 10:45:48 DEBUG    MAIN :: sickbeard.db: SELECT show_id, tvdb_id, COUNT(tvdb_id) as count FROM tv_shows GROUP BY tvdb_id HAVING count > 1
2016-08-15 10:45:48 INFO     MAIN :: No duplicate show, check passed
2016-08-15 10:45:48 DEBUG    MAIN :: sickbeard.db: SELECT showid, season, episode, COUNT(showid) as count FROM tv_episodes GROUP BY showid, season, episode HAVING count > 1
2016-08-15 10:45:48 INFO     MAIN :: No duplicate episode, check passed
2016-08-15 10:45:48 DEBUG    MAIN :: sickbeard.db: SELECT episode_id, showid, tv_shows.tvdb_id FROM tv_episodes LEFT JOIN tv_shows ON tv_episodes.showid=tv_shows.tvdb_id WHERE tv_shows.tvdb_id is NULL
2016-08-15 10:45:48 INFO     MAIN :: No orphan episodes, check passed
2016-08-15 10:45:48 DEBUG    MAIN :: config_version -> 6
2016-08-15 10:45:48 DEBUG    MAIN :: Checking if we can use git commands: git version
2016-08-15 10:45:48 DEBUG    MAIN :: Executing git version with your shell in /sickbeard
2016-08-15 10:45:48 DEBUG    MAIN :: git output: git version 2.8.3
2016-08-15 10:45:48 DEBUG    MAIN :: git version : returned successful
2016-08-15 10:45:48 DEBUG    MAIN :: Using: git
2016-08-15 10:45:48 DEBUG    MAIN :: Executing git symbolic-ref -q HEAD with your shell in /sickbeard
2016-08-15 10:45:48 DEBUG    MAIN :: git output: refs/heads/development
2016-08-15 10:45:48 DEBUG    MAIN :: git symbolic-ref -q HEAD : returned successful
2016-08-15 10:45:48 DEBUG    MAIN :: Retrieving the last check time from the DB
2016-08-15 10:45:48 DEBUG    MAIN :: sickbeard.db: SELECT * FROM info
2016-08-15 10:45:48 INFO     MAIN :: Starting Sick Beard on http://0.0.0.0:8081/
2016-08-15 10:45:48 INFO     MAIN :: Loading initial show list
2016-08-15 10:45:48 DEBUG    MAIN :: sickbeard.db: SELECT * FROM tv_shows
2016-08-15 10:45:49 DEBUG    CHECKVERSION :: Starting new thread: CHECKVERSION
2016-08-15 10:45:49 INFO     CHECKVERSION :: Checking if git needs an update
2016-08-15 10:45:49 DEBUG    CHECKVERSION :: Executing git rev-parse HEAD with your shell in /sickbeard
2016-08-15 10:45:49 DEBUG    CHECKVERSION :: git output: 171a607e41b7347a74cc815f6ecce7968d9acccf
2016-08-15 10:45:49 DEBUG    CHECKVERSION :: git rev-parse HEAD : returned successful
2016-08-15 10:45:49 DEBUG    CHECKVERSION :: Executing git fetch origin with your shell in /sickbeard
2016-08-15 10:45:50 DEBUG    CHECKVERSION :: git output: 
2016-08-15 10:45:50 DEBUG    CHECKVERSION :: git fetch origin : returned successful
2016-08-15 10:45:50 DEBUG    CHECKVERSION :: Executing git rev-parse --verify --quiet "@{upstream}" with your shell in /sickbeard
2016-08-15 10:45:50 DEBUG    CHECKVERSION :: git output: 171a607e41b7347a74cc815f6ecce7968d9acccf
2016-08-15 10:45:50 DEBUG    CHECKVERSION :: git rev-parse --verify --quiet "@{upstream}" : returned successful
2016-08-15 10:45:50 DEBUG    CHECKVERSION :: Executing git rev-list --left-right "@{upstream}"...HEAD with your shell in /sickbeard
2016-08-15 10:45:50 DEBUG    CHECKVERSION :: git output: 
2016-08-15 10:45:50 DEBUG    CHECKVERSION :: git rev-list --left-right "@{upstream}"...HEAD : returned successful
2016-08-15 10:45:50 DEBUG    CHECKVERSION :: cur_commit = 171a607e41b7347a74cc815f6ecce7968d9acccf, newest_commit = 171a607e41b7347a74cc815f6ecce7968d9acccf, num_commits_behind = 0, num_commits_ahead = 0
2016-08-15 10:45:50 INFO     CHECKVERSION :: No update needed
2016-08-15 10:45:50 INFO     CHECKVERSION :: Check scene exceptions update
2016-08-15 10:45:51 DEBUG    CHECKVERSION :: cache.db: SELECT tvdb_id, show_name FROM scene_exceptions WHERE provider=?; with args ['sb_tvdb_scene_exceptions']
2016-08-15 10:45:51 INFO     CHECKVERSION :: No scene exceptions update needed
2016-08-15 10:45:55 DEBUG    CP Server Thread-5 :: sickbeard.db: SELECT showid, (SELECT COUNT(*) FROM tv_episodes WHERE showid=tv_eps.showid AND season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE showid=tv_eps.showid AND season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE showid=tv_eps.showid AND season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 736191 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total,  (SELECT airdate FROM tv_episodes WHERE showid=tv_eps.showid AND airdate >= 736191 AND status = 1 ORDER BY airdate ASC LIMIT 1) AS ep_airs_next  FROM tv_episodes tv_eps GROUP BY showid
2016-08-15 10:45:55 DEBUG    CP Server Thread-5 :: sickbeard.db: SELECT (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 736191 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total  FROM tv_episodes tv_eps LIMIT 1
2016-08-15 10:45:58 DEBUG    CP Server Thread-6 :: sickbeard.db: SELECT *, tv_shows.status as show_status FROM tv_episodes, tv_shows WHERE season > 0 AND airdate >= ? AND airdate < ? AND tv_shows.tvdb_id = tv_episodes.showid AND tv_episodes.status NOT IN (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) with args [736191, 736198, 4, 3276804, 204, 404, 104, 804, 12804, 25604, 1604, 3204, 6404, 2, 3276802, 202, 402, 102, 802, 12802, 25602, 1602, 3202, 6402, 6, 7]
2016-08-15 10:45:58 DEBUG    CP Server Thread-6 :: sickbeard.db: SELECT *, tv_shows.status as show_status FROM tv_episodes outer_eps, tv_shows WHERE season > 0 AND showid NOT IN () AND tv_shows.tvdb_id = outer_eps.showid AND airdate = (SELECT airdate FROM tv_episodes inner_eps WHERE inner_eps.season > 0 AND inner_eps.showid = outer_eps.showid AND inner_eps.airdate >= ? ORDER BY inner_eps.airdate ASC LIMIT 1) AND outer_eps.status NOT IN (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) with args [736198, 4, 3276804, 204, 404, 104, 804, 12804, 25604, 1604, 3204, 6404, 2, 3276802, 202, 402, 102, 802, 12802, 25602, 1602, 3202, 6402]
2016-08-15 10:45:58 DEBUG    CP Server Thread-6 :: sickbeard.db: SELECT *, tv_shows.status as show_status FROM tv_episodes, tv_shows WHERE season > 0 AND tv_shows.tvdb_id = tv_episodes.showid AND airdate < ? AND airdate >= ? AND tv_episodes.status = ? AND tv_episodes.status NOT IN (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) with args [736191, 736188, 3, 4, 3276804, 204, 404, 104, 804, 12804, 25604, 1604, 3204, 6404, 2, 3276802, 202, 402, 102, 802, 12802, 25602, 1602, 3202, 6402, 6, 7]
2016-08-15 10:45:58 DEBUG    CP Server Thread-6 :: sickbeard.db: SELECT (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 736191 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total  FROM tv_episodes tv_eps LIMIT 1
2016-08-15 10:45:59 DEBUG    CP Server Thread-9 :: sickbeard.db: SELECT showid, (SELECT COUNT(*) FROM tv_episodes WHERE showid=tv_eps.showid AND season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE showid=tv_eps.showid AND season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE showid=tv_eps.showid AND season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 736191 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total,  (SELECT airdate FROM tv_episodes WHERE showid=tv_eps.showid AND airdate >= 736191 AND status = 1 ORDER BY airdate ASC LIMIT 1) AS ep_airs_next  FROM tv_episodes tv_eps GROUP BY showid
2016-08-15 10:45:59 DEBUG    CP Server Thread-9 :: sickbeard.db: SELECT (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 736191 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total  FROM tv_episodes tv_eps LIMIT 1
2016-08-15 10:46:02 DEBUG    CP Server Thread-5 :: sickbeard.db: SELECT (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 736191 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total  FROM tv_episodes tv_eps LIMIT 1
2016-08-15 10:46:08 DEBUG    CP Server Thread-5 :: sickbeard.db: SELECT (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 736191 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total  FROM tv_episodes tv_eps LIMIT 1
2016-08-15 10:46:12 DEBUG    CP Server Thread-9 :: sickbeard.db: SELECT (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 736191 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total  FROM tv_episodes tv_eps LIMIT 1
2016-08-15 10:46:30 DEBUG    CP Server Thread-8 :: sickbeard.db: SELECT (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 736191 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total  FROM tv_episodes tv_eps LIMIT 1
2016-08-15 10:46:31 DEBUG    CP Server Thread-2 :: sickbeard.db: SELECT (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 736191 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total  FROM tv_episodes tv_eps LIMIT 1
2016-08-15 10:46:33 DEBUG    CP Server Thread-2 :: sickbeard.db: SELECT (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 736191 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total  FROM tv_episodes tv_eps LIMIT 1
2016-08-15 10:46:38 DEBUG    CP Server Thread-2 :: sickbeard.db: SELECT (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 736191 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total  FROM tv_episodes tv_eps LIMIT 1
2016-08-15 10:46:45 DEBUG    CP Server Thread-11 :: Using cached parse result for: Show.Name.S02E03.HDTV.XviD-RLSGROUP
2016-08-15 10:46:45 DEBUG    CP Server Thread-11 :: formatting pattern: %SN - %Sx%0E - %EN -> Show Name - 2x03 - Ep Name
2016-08-15 10:46:45 DEBUG    CP Server Thread-11 :: Using cached parse result for: Show.Name.S02E03.HDTV.XviD-RLSGROUP
2016-08-15 10:46:45 DEBUG    CP Server Thread-11 :: formatting pattern: %S.N.S%0SE%0E.%E.N -> Show.Name.S02E03.Ep.Name
2016-08-15 10:46:45 DEBUG    CP Server Thread-11 :: Using cached parse result for: Show.Name.S02E03.HDTV.XviD-RLSGROUP
2016-08-15 10:46:45 DEBUG    CP Server Thread-11 :: formatting pattern: %Sx%0E - %EN -> 2x03 - Ep Name
2016-08-15 10:46:45 DEBUG    CP Server Thread-11 :: Using cached parse result for: Show.Name.S02E03.HDTV.XviD-RLSGROUP
2016-08-15 10:46:45 DEBUG    CP Server Thread-11 :: formatting pattern: S%0SE%0E - %EN -> S02E03 - Ep Name
2016-08-15 10:46:45 DEBUG    CP Server Thread-11 :: Using cached parse result for: Show.Name.S02E03.HDTV.XviD-RLSGROUP
2016-08-15 10:46:45 DEBUG    CP Server Thread-11 :: formatting pattern: %S.N.S%0SE%0E.%Q.N-%RG -> Show.Name.S02E03.HD.TV-RLSGROUP
2016-08-15 10:46:45 DEBUG    CP Server Thread-11 :: Using cached parse result for: Show.Name.S02E03.HDTV.XviD-RLSGROUP
2016-08-15 10:46:45 DEBUG    CP Server Thread-11 :: formatting pattern: Season %0S -> Season 02
2016-08-15 10:46:45 DEBUG    CP Server Thread-11 :: Using cached parse result for: Show.Name.S02E03.HDTV.XviD-RLSGROUP
2016-08-15 10:46:45 DEBUG    CP Server Thread-11 :: formatting pattern: %SN - %A-D - %EN -> Show Name - 2011-03-09 - Ep Name
2016-08-15 10:46:45 DEBUG    CP Server Thread-11 :: Using cached parse result for: Show.Name.S02E03.HDTV.XviD-RLSGROUP
2016-08-15 10:46:45 DEBUG    CP Server Thread-11 :: formatting pattern: %S.N.%A.D.%E.N.%Q.N -> Show.Name.2011.03.09.Ep.Name.HD.TV
2016-08-15 10:46:45 DEBUG    CP Server Thread-11 :: Using cached parse result for: Show.Name.S02E03.HDTV.XviD-RLSGROUP
2016-08-15 10:46:45 DEBUG    CP Server Thread-11 :: formatting pattern: %S.N.%A.D.%E.N-%RG -> Show.Name.2011.03.09.Ep.Name-RLSGROUP
2016-08-15 10:46:45 DEBUG    CP Server Thread-11 :: Using cached parse result for: Show.Name.S02E03.HDTV.XviD-RLSGROUP
2016-08-15 10:46:45 DEBUG    CP Server Thread-11 :: formatting pattern: %Y/%0M -> 2011/03
2016-08-15 10:46:45 DEBUG    CP Server Thread-11 :: sickbeard.db: SELECT (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 736191 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total  FROM tv_episodes tv_eps LIMIT 1
2016-08-15 10:46:45 DEBUG    CP Server Thread-3 :: Using cached parse result for: Show.Name.S02E03.HDTV.XviD-RLSGROUP
2016-08-15 10:46:45 DEBUG    CP Server Thread-9 :: Checking whether the pattern %SN - %Sx%0E - %EN is valid for a single episode
2016-08-15 10:46:45 DEBUG    CP Server Thread-10 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:46:45 DEBUG    CP Server Thread-3 :: formatting pattern: %SN - %Sx%0E - %EN -> Show Name - 2x03 - Ep Name
2016-08-15 10:46:45 DEBUG    CP Server Thread-9 :: Using cached parse result for: Show.Name.S02E03.HDTV.XviD-RLSGROUP
2016-08-15 10:46:45 DEBUG    CP Server Thread-10 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:46:45 DEBUG    CP Server Thread-9 :: formatting pattern: %SN - %Sx%0E - %EN -> Show Name - 2x03 - Ep Name
2016-08-15 10:46:45 DEBUG    CP Server Thread-9 :: Trying to parse Show Name - 2x03 - Ep Name.ext
2016-08-15 10:46:45 DEBUG    CP Server Thread-9 :: Using cached parse result for: Show Name - 2x03 - Ep Name.ext
2016-08-15 10:46:45 DEBUG    CP Server Thread-10 :: formatting pattern: %SN - %Sx%0E - %EN -> Show Name - 2x03x04x05 - Ep Name
2016-08-15 10:46:45 DEBUG    CP Server Thread-9 :: The name Show Name - 2x03 - Ep Name.ext parsed into Show Name - S2E3 - Ep Name.ext [ABD: False]
2016-08-15 10:46:45 DEBUG    CP Server Thread-9 :: Checking whether the pattern %SN - %Sx%0E - %EN is valid for a multi episode
2016-08-15 10:46:45 DEBUG    CP Server Thread-9 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:46:45 DEBUG    CP Server Thread-9 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:46:45 DEBUG    CP Server Thread-9 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:46:45 DEBUG    CP Server Thread-9 :: formatting pattern: %SN - %Sx%0E - %EN -> Show Name - 2x03x04x05 - Ep Name
2016-08-15 10:46:45 DEBUG    CP Server Thread-9 :: Trying to parse Show Name - 2x03x04x05 - Ep Name.ext
2016-08-15 10:46:45 DEBUG    CP Server Thread-9 :: The name Show Name - 2x03x04x05 - Ep Name.ext parsed into Show Name - S2E3E4E5 - Ep Name.ext [ABD: False]
2016-08-15 10:46:45 DEBUG    CP Server Thread-9 :: Using cached parse result for: Show.Name.S02E03.HDTV.XviD-RLSGROUP
2016-08-15 10:46:45 DEBUG    CP Server Thread-9 :: formatting pattern: %SN - %Sx%0E - %EN -> Show Name - 2x03 - Ep Name
2016-08-15 10:46:45 DEBUG    CP Server Thread-9 :: Trying to parse Show Name - 2x03 - Ep Name.ext
2016-08-15 10:46:45 DEBUG    CP Server Thread-9 :: Using cached parse result for: Show Name - 2x03 - Ep Name.ext
2016-08-15 10:46:45 DEBUG    CP Server Thread-9 :: The name Show Name - 2x03 - Ep Name.ext parsed into Show Name - S2E3 - Ep Name.ext [ABD: False]
2016-08-15 10:46:45 DEBUG    CP Server Thread-9 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:46:45 DEBUG    CP Server Thread-9 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:46:45 DEBUG    CP Server Thread-9 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:46:45 DEBUG    CP Server Thread-9 :: formatting pattern: %SN - %Sx%0E - %EN -> Show Name - 2x03x04x05 - Ep Name
2016-08-15 10:46:45 DEBUG    CP Server Thread-9 :: Trying to parse Show Name - 2x03x04x05 - Ep Name.ext
2016-08-15 10:46:45 DEBUG    CP Server Thread-9 :: Using cached parse result for: Show Name - 2x03x04x05 - Ep Name.ext
2016-08-15 10:46:45 DEBUG    CP Server Thread-9 :: The name Show Name - 2x03x04x05 - Ep Name.ext parsed into Show Name - S2E3E4E5 - Ep Name.ext [ABD: False]
2016-08-15 10:46:49 DEBUG    SEARCH :: Starting new thread: SEARCH
2016-08-15 10:46:52 INFO     SEARCHQUEUE-RSS-SEARCH :: Changing all old missing episodes (UNAIRED) to status WANTED
2016-08-15 10:46:52 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_episodes WHERE status = ? AND season > 0 AND airdate < ? with args [1, 736191]
2016-08-15 10:46:52 INFO     SEARCHQUEUE-RSS-SEARCH :: Beginning search for new episodes on RSS
2016-08-15 10:46:52 INFO     SEARCHQUEUE-RSS-SEARCH :: Searching all providers for any needed episodes
2016-08-15 10:46:52 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT time FROM lastUpdate WHERE provider = ? with args ['womble_s_index']
2016-08-15 10:46:52 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT time FROM lastUpdate WHERE provider = ? with args ['womble_s_index']
2016-08-15 10:46:52 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Last update was too soon, using old cache: today()-2016-08-15 10:43:03<0:15:00
2016-08-15 10:46:52 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM [womble_s_index]
2016-08-15 10:46:52 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT time FROM lastUpdate WHERE provider = ? with args ['sick_beard_index']
2016-08-15 10:46:52 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT time FROM lastUpdate WHERE provider = ? with args ['sick_beard_index']
2016-08-15 10:46:52 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Last update was too soon, using old cache: today()-2016-08-15 10:43:08<0:15:00
2016-08-15 10:46:52 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM [sick_beard_index]
2016-08-15 10:46:52 INFO     SEARCHQUEUE-RSS-SEARCH :: No needed episodes found on the RSS feeds
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: Checking whether the pattern Season %0S/%S.N.S%0SE%0E.%Q.N-%RG is valid for a single episode
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: Using cached parse result for: Show.Name.S02E03.HDTV.XviD-RLSGROUP
2016-08-15 10:47:28 DEBUG    CP Server Thread-7 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:47:28 DEBUG    CP Server Thread-7 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:47:28 DEBUG    CP Server Thread-4 :: formatting pattern: %S.N.S%0SE%0E.%Q.N-%RG -> Show.Name.S02E03.HD.TV-RLSGROUP
2016-08-15 10:47:28 DEBUG    CP Server Thread-4 :: Using cached parse result for: Show.Name.S02E03.HDTV.XviD-RLSGROUP
2016-08-15 10:47:28 DEBUG    CP Server Thread-7 :: formatting pattern: %S.N.S%0SE%0E.%Q.N-%RG -> Show.Name.S02E03E04E05.HD.TV-RLSGROUP
2016-08-15 10:47:28 DEBUG    CP Server Thread-4 :: formatting pattern: Season %0S -> Season 02
2016-08-15 10:47:28 DEBUG    CP Server Thread-7 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: formatting pattern: %S.N.S%0SE%0E.%Q.N-%RG -> Show.Name.S02E03.HD.TV-RLSGROUP
2016-08-15 10:47:28 DEBUG    CP Server Thread-7 :: formatting pattern: Season %0S -> Season 02
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: Using cached parse result for: Show.Name.S02E03.HDTV.XviD-RLSGROUP
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: formatting pattern: Season %0S -> Season 02
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: Trying to parse Season 02/Show.Name.S02E03.HD.TV-RLSGROUP.ext
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: The name Season 02/Show.Name.S02E03.HD.TV-RLSGROUP.ext parsed into Show Name - S2E3 - HD.TV (RLSGROUP.ext) [ABD: False]
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: Checking whether the pattern Season %0S/%S.N.S%0SE%0E.%Q.N-%RG is valid for a multi episode
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: formatting pattern: %S.N.S%0SE%0E.%Q.N-%RG -> Show.Name.S02E03E04E05.HD.TV-RLSGROUP
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: formatting pattern: Season %0S -> Season 02
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: Trying to parse Season 02/Show.Name.S02E03E04E05.HD.TV-RLSGROUP.ext
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: The name Season 02/Show.Name.S02E03E04E05.HD.TV-RLSGROUP.ext parsed into Show Name - S2E3E4E5 - HD.TV (RLSGROUP.ext) [ABD: False]
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: Using cached parse result for: Show.Name.S02E03.HDTV.XviD-RLSGROUP
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: formatting pattern: %S.N.S%0SE%0E.%Q.N-%RG -> Show.Name.S02E03.HD.TV-RLSGROUP
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: Using cached parse result for: Show.Name.S02E03.HDTV.XviD-RLSGROUP
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: formatting pattern: Season %0S -> Season 02
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: Trying to parse Show.Name.S02E03.HD.TV-RLSGROUP.ext
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: The name Show.Name.S02E03.HD.TV-RLSGROUP.ext parsed into Show Name - S2E3 - HD.TV (RLSGROUP.ext) [ABD: False]
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: formatting pattern: %S.N.S%0SE%0E.%Q.N-%RG -> Show.Name.S02E03E04E05.HD.TV-RLSGROUP
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: formatting pattern: Season %0S -> Season 02
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: Trying to parse Show.Name.S02E03E04E05.HD.TV-RLSGROUP.ext
2016-08-15 10:47:28 DEBUG    CP Server Thread-8 :: The name Show.Name.S02E03E04E05.HD.TV-RLSGROUP.ext parsed into Show Name - S2E3E4E5 - HD.TV (RLSGROUP.ext) [ABD: False]
2016-08-15 10:47:33 DEBUG    CP Server Thread-8 :: Using cached parse result for: Show.Name.S02E03.HDTV.XviD-RLSGROUP
2016-08-15 10:47:33 DEBUG    CP Server Thread-4 :: Checking whether the pattern %SN - %Sx%0E - %EN is valid for a single episode
2016-08-15 10:47:33 DEBUG    CP Server Thread-4 :: Using cached parse result for: Show.Name.S02E03.HDTV.XviD-RLSGROUP
2016-08-15 10:47:33 DEBUG    CP Server Thread-7 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:47:33 DEBUG    CP Server Thread-8 :: formatting pattern: %SN - %Sx%0E - %EN -> Show Name - 2x03 - Ep Name
2016-08-15 10:47:33 DEBUG    CP Server Thread-4 :: formatting pattern: %SN - %Sx%0E - %EN -> Show Name - 2x03 - Ep Name
2016-08-15 10:47:33 DEBUG    CP Server Thread-7 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:47:33 DEBUG    CP Server Thread-4 :: Trying to parse Show Name - 2x03 - Ep Name.ext
2016-08-15 10:47:33 DEBUG    CP Server Thread-7 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:47:33 DEBUG    CP Server Thread-4 :: The name Show Name - 2x03 - Ep Name.ext parsed into Show Name - S2E3 - Ep Name.ext [ABD: False]
2016-08-15 10:47:33 DEBUG    CP Server Thread-4 :: Checking whether the pattern %SN - %Sx%0E - %EN is valid for a multi episode
2016-08-15 10:47:33 DEBUG    CP Server Thread-7 :: formatting pattern: %SN - %Sx%0E - %EN -> Show Name - 2x03x04x05 - Ep Name
2016-08-15 10:47:33 DEBUG    CP Server Thread-4 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:47:33 DEBUG    CP Server Thread-4 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:47:33 DEBUG    CP Server Thread-4 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:47:33 DEBUG    CP Server Thread-4 :: formatting pattern: %SN - %Sx%0E - %EN -> Show Name - 2x03x04x05 - Ep Name
2016-08-15 10:47:33 DEBUG    CP Server Thread-4 :: Trying to parse Show Name - 2x03x04x05 - Ep Name.ext
2016-08-15 10:47:33 DEBUG    CP Server Thread-4 :: The name Show Name - 2x03x04x05 - Ep Name.ext parsed into Show Name - S2E3E4E5 - Ep Name.ext [ABD: False]
2016-08-15 10:47:33 DEBUG    CP Server Thread-4 :: Using cached parse result for: Show.Name.S02E03.HDTV.XviD-RLSGROUP
2016-08-15 10:47:33 DEBUG    CP Server Thread-4 :: formatting pattern: %SN - %Sx%0E - %EN -> Show Name - 2x03 - Ep Name
2016-08-15 10:47:33 DEBUG    CP Server Thread-4 :: Trying to parse Show Name - 2x03 - Ep Name.ext
2016-08-15 10:47:33 DEBUG    CP Server Thread-4 :: Using cached parse result for: Show Name - 2x03 - Ep Name.ext
2016-08-15 10:47:33 DEBUG    CP Server Thread-4 :: The name Show Name - 2x03 - Ep Name.ext parsed into Show Name - S2E3 - Ep Name.ext [ABD: False]
2016-08-15 10:47:33 DEBUG    CP Server Thread-4 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:47:33 DEBUG    CP Server Thread-4 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:47:33 DEBUG    CP Server Thread-4 :: Using cached parse result for: Show.Name.S02E03E04E05.HDTV.XviD-RLSGROUP
2016-08-15 10:47:33 DEBUG    CP Server Thread-4 :: formatting pattern: %SN - %Sx%0E - %EN -> Show Name - 2x03x04x05 - Ep Name
2016-08-15 10:47:33 DEBUG    CP Server Thread-4 :: Trying to parse Show Name - 2x03x04x05 - Ep Name.ext
2016-08-15 10:47:33 DEBUG    CP Server Thread-4 :: Using cached parse result for: Show Name - 2x03x04x05 - Ep Name.ext
2016-08-15 10:47:33 DEBUG    CP Server Thread-4 :: The name Show Name - 2x03x04x05 - Ep Name.ext parsed into Show Name - S2E3E4E5 - Ep Name.ext [ABD: False]
2016-08-15 10:48:34 DEBUG    CP Server Thread-4 :: sickbeard.db: SELECT h.*, show_name FROM history h, tv_shows s WHERE h.showid=s.tvdb_id ORDER BY date DESC LIMIT ? with args [100]
2016-08-15 10:48:34 DEBUG    CP Server Thread-4 :: sickbeard.db: SELECT (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 736191 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total  FROM tv_episodes tv_eps LIMIT 1
2016-08-15 10:48:35 DEBUG    CP Server Thread-10 :: sickbeard.db: SELECT *, tv_shows.status as show_status FROM tv_episodes, tv_shows WHERE season > 0 AND airdate >= ? AND airdate < ? AND tv_shows.tvdb_id = tv_episodes.showid AND tv_episodes.status NOT IN (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) with args [736191, 736198, 4, 3276804, 204, 404, 104, 804, 12804, 25604, 1604, 3204, 6404, 2, 3276802, 202, 402, 102, 802, 12802, 25602, 1602, 3202, 6402, 6, 7]
2016-08-15 10:48:35 DEBUG    CP Server Thread-10 :: sickbeard.db: SELECT *, tv_shows.status as show_status FROM tv_episodes outer_eps, tv_shows WHERE season > 0 AND showid NOT IN () AND tv_shows.tvdb_id = outer_eps.showid AND airdate = (SELECT airdate FROM tv_episodes inner_eps WHERE inner_eps.season > 0 AND inner_eps.showid = outer_eps.showid AND inner_eps.airdate >= ? ORDER BY inner_eps.airdate ASC LIMIT 1) AND outer_eps.status NOT IN (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) with args [736198, 4, 3276804, 204, 404, 104, 804, 12804, 25604, 1604, 3204, 6404, 2, 3276802, 202, 402, 102, 802, 12802, 25602, 1602, 3202, 6402]
2016-08-15 10:48:35 DEBUG    CP Server Thread-10 :: sickbeard.db: SELECT *, tv_shows.status as show_status FROM tv_episodes, tv_shows WHERE season > 0 AND tv_shows.tvdb_id = tv_episodes.showid AND airdate < ? AND airdate >= ? AND tv_episodes.status = ? AND tv_episodes.status NOT IN (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) with args [736191, 736188, 3, 4, 3276804, 204, 404, 104, 804, 12804, 25604, 1604, 3204, 6404, 2, 3276802, 202, 402, 102, 802, 12802, 25602, 1602, 3202, 6402, 6, 7]
2016-08-15 10:48:35 DEBUG    CP Server Thread-10 :: sickbeard.db: SELECT (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 736191 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total  FROM tv_episodes tv_eps LIMIT 1
